{"version":3,"sources":["orb.js"],"names":["e","exports","module","define","amd","f","window","global","self","orb","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"_dereq_","utils","pgrid","pgridwidget","query","./orb.export.excel","./orb.pgrid","./orb.query","./orb.ui.pgridwidget","./orb.utils",2,"calcVariance","datafield","intersection","datasource","population","variance","avg","len","forEachIntersection","val","NaN","callback","all","Aggregations","toAggregateFunc","func","sum","count","min","max","prod","stdev","Math","sqrt","stdevp","var","varp",3,"Dimension","AxeType","COLUMNS","ROWS","DATA","type","getfieldindex","field","fields","name","fill","filteredDataSource","dimensionsCount","isArray","rowIndex","dataLength","row","dim","root","findex","depth","subfield","subvalue","subdimvals","undefined","values","push","dimid","rowIndexes","dimensionsByDepth","this","config","columnFields","rowFields","dataFields","update","ffield","sort","order","donottoggle","parents","customfunc","reverse","flattenValues","map","currDim","isRoot","value","parent","b","Type","./orb.dimension",4,"getpropertyvalue","property","configs","defaultvalue","mergefieldconfigs","merged","sorts","subtotals","functions","arguments","nnconfig","subTotal","aggregateFuncName","aggregateFunc","formatFunc","createfield","rootconfig","axetype","fieldconfig","defaultfieldconfig","axeconfig","fieldAxeconfig","axe","rowSettings","columnSettings","dataSettings","Field","caption","visible","collapsible","collapsed","aggregation","GrandTotalConfig","options","rowsvisible","columnsvisible","SubTotalConfig","setdefaults","defaults","SortConfig","ChartConfig","enabled","filtering","themeManager","createSubOptions","defaultFormatFunc","toString","_aggregatefunc","_formatfunc","isString","ensureFieldConfig","obj","captionToName","getfield","axefields","fieldname","fieldindex","fi","dataSource","canMoveFields","dataHeadersLocation","grandTotal","width","height","toolbar","theme","chartMode","current","dataSourceFieldNames","dataSourceFieldCaptions","fcaptionIndex","indexOf","nameToCaption","fnameIndex","setTheme","newTheme","allFields","rows","columns","data","dataFieldsCount","runtimeVisibility","getField","getRowField","getColumnField","getDataField","availablefields","filter","notequalfield","otherfield","every","getDataSourceFieldCaptions","row0","fieldNames","ownProperties","headers","getPreFilters","prefilters","preFilters","forEach","filteredField","prefilterConfig","expressionFilter","opname","moveField","oldaxetype","newaxetype","position","oldaxe","oldposition","newaxe","fieldConfig","defaultFieldConfig","newAxeSubtotalsState","areSubtotalsVisible","splice","toggleSubtotals","axeFields","newState","toggleGrandtotal","isGrandtotalVisible","./orb.aggregation","./orb.axe","./orb.filtering","./orb.themes",5,"id","isLeaf","getRowIndexes","result","j",6,"uiheaders","uriHeader","docHeader","docFooter","createButtonCell","buttonStyle","buttonTextColor","createButtons","buttons","cellsCountBefore","cellsCountAfter","prefix","str","reduce","tr","toBase64","btoa","unescape","encodeURIComponent","currTheme","override","themeColor","themes","themeFadeout","fadeoutColor","headerStyle","cellsHorizontalCount","layout","pivotTable","sep","rowHeaders","columnHeaders","currRow","rowStr","header","HeaderType","DATA_HEADER","hspan","vspan","rowHeadersAndDataCells","dataRow","dataRows","dataCell","index","./orb.ui.header",7,"ALL","NONE","BLANK","operator","term","staticValue","excludeStatic","ops","get","regexpMode","regexpSupported","isRegExp","ignoreCase","RegExp","source","test","found","isAlwaysTrue","Operators","MATCH","NOTMATCH","EQ","NEQ","GT","GTE","LT","LTE","search",8,"configuration","refresh","refreshFilters","refreshFilteredDataSource","computeValues","filterFields","filters","exclude","fieldFilter","computeValue","colIndexes","origRowIndexes","res","ri","rowindex","colrowindex","emptyIntersection","datafields","fieldnameIndex","datafieldIndex","defaultfield","dfi","computeRowValues","rowDim","rid","_iCache","slice","p","rowindexes","subdim","cid","ur","vr","dataMatrix","applyFilter","refreshData","getFieldValues","filterFunc","values1","containsBlank","isNumber","isDate","vi","unshift","getFieldFilter","isFieldFiltered","getData","rowdim","coldim","datafieldName","calcAggregation","getChartData","getAxisLabel","axisFields","ti","hAxisLabel","vAxisLabel","legendsLabel","rowLeafDimensions","colLeafDimensions","ci","cdim","currData","rri","title","colNames","d","dataTable","./orb.config",9,"queryBase","extractResult","aggs","outerArgs","multi","ai","multiFieldNames","getCaptionName","datafieldname","measureFunc","fieldsConfig","cleanOptions","compute","setDefaultAggFunctions","param","valname","aggFunctions","funcIndex","funcName","pgridQuery","filterDimensions","upperDims","some","upperDim","innerArgs","opts","setup","parameters","fIndex","colFields","df","dfname","dfcaption","hasOwnProperty","applyFilters","sortedFilters","f1","f2","currAxe","filterIndex","filtered","rowdims","coldims","rdi","concat","cdi","arrayQuery","array","setCaptionName","fname","fcaption","toAggregate","include","aggFunc",10,"states","set","key","state",11,"isBootstrap","currentTheme","red","blue","green","orange","flower","gray","black","white","validateTheme","themeName","trim","getPivotClasses","container","table","getButtonClasses","pivotButton","orbButton","scrollBar","getFilterClasses","getGridClasses","getDialogClasses","classes","overlay","dialog","content","body","hexToRgb","hex","exec","parseInt","g","rgbaToHex","rgba","matches","match","alpha","parseFloat","applyAlphaAndToHex","rgbaToHexA","floor","substr","color",12,"axeModel","isMultiDataFields","toggleFieldExpansion","hIndex","toToggle","allExpanded","SUB_TOTAL","expanded","collapse","expand",13,"axeUi","columnsAxe","generateLeafsHeaders","pushsubtotal","pheader","leafsHeaders","subtotalHeader","infos","currparent","prevpar","grandpar","prevgrandpar","leafIndex","datafieldindex","dataHeader","getUiInfo","pi","parentDim","di","build","GRAND_TOTAL","INNER","./orb.ui.axe",14,"CellBase","template","cssclass","isvisible","getState","setState","EMPTY","DATA_VALUE","FIELD_BUTTON","WRAPPER","getHeaderClass","headerType","getCellClass","rowHeaderType","colHeaderType","datafieldscount","isParentExpanded","hparent","isexpanded","par","calcSpan","ignoreVisibility","subSpan","tspan","addone","isRowsAxe","subheaders","subheader","rowinfo","colinfo","rowDimension","columnDimension","rowType","colType","buttonCell","emptyCell","./orb.state",15,"uirows","uicols","OrbReactComps","buildUi","createVisibleFunc","rowvisible","colvisible","rowsHeaders","columnsLeafHeaders","arr","rowHeadersRow","rowLeafHeader","colHeaderIndex","columnLeafHeader","renderElement","pivotComponent","Dialog","create","setProps","oldAxeType","newAxeType","changeTheme","render","element","pivotTableFactory","React","createFactory","PivotChart","PivotTable","pivottable","ReactDOM","drilldown","show","comp","Grid","props","style","fontStyle","./orb.ui.cols","./orb.ui.rows","./orb.utils.dom","./react/orb.react.compiled",16,"rowsAxe","addDataHeaders","lastInfosArray","dimension","infosMaxIndex","valIndex","subTotalHeader","newHeader","grandtotalHeader","lastrow",17,"replaceHyphenByUcase","replace","reHyphenToUcase","m","m1","toUpperCase","list","defStop","ret","removeClass","classname","className","addClass","getOffset","rect","getBoundingClientRect","x","left","y","top","getParentOffset","rectParent","parentNode","getSize","right","bottom","getStyle","styleProps","keepString","currStyle","fixProp","currentStyle","prop","getComputedStyle","getPropertyValue","ceil","isVisible","display","offsetWidth","offsetHeight","updateTableColGroup","tableNode","widths","colGroupNode","firstChild","nodeName","tableLayout","removeChild","col","document","createElement","appendChild",18,"ns","identifier","parts","split","Object","prototype","apply","escapeRegex","re","findInArray","predicate","item","jsonStringify","censorKeywords","censor","JSON","stringify","addEventListener","eventName","handler","attachEvent","removeEventListener","detachEvent","preventDefault","event","returnValue","stopPropagation","cancelBubble","getEventButton","button","getMousePageXY","pageX","pageY","clientX","scrollLeft","documentElement","clientY","scrollTop","object","InvalidCharacterError","message","chars","input","block","charCode","String","idx","output","charAt","charCodeAt","atob","bs","buffer","bc","fromCharCode",19,"getClassname","compProps","cell","leftmost","topmost","ScrollEvent","scrollBarComp","raise","getScrollPercent","FilterManager","reactComp","initialFilterObject","checkboxVisible","checkbox","applyInitialFilterObject","staticInfos","toExclude","isSearchMode","toggleRegexpButtonVisibility","isRegexMode","toggleRegexpButtonState","lastSearchTerm","elems","searchBox","applyFilterTerm","savedCheckedValues","updateCheckboxes","updateAllCheckbox","addEventListeners","filterContainer","valueChecked","searchChanged","clearSearchButton","clearSearchBox","okButton","checkedObj","getCheckedValues","onFilter","cancelButton","destroy","ResizeManager","outerContainerElem","valuesTableElem","resizeGripElem","minContainerWidth","minContainerHeight","mousedownpos","isMouseDown","resizeMouseDown","mousePageXY","cursor","resizeMouseUp","resizeMouseMove","resizeGripSize","outerContainerSize","valuesTableSize","tBodies","outerContainerWidth","outerContainerHeight","offset","newContainerWidth","newContainerHeight","resizeManager","INDETERMINATE","checkboxes","operatorBox","allCheckbox","addCheckbox","enableRegexButton","resizeGrip","init","filterContainerElement","cells","children","blanckCheckbox","onOperatorChanged","newOperator","regexpActiveChanged","domUtils","target","srcElement","checked","defaultVisible","opterm","previousIsSearchMode","indeterminate","valuesCount","checkedCount","excludeUnchecked","checkedList","allchecked","valInList","createOverlay","overlayElement","ComponentSizeInfo","component","isWrapper","childType","size","node","findDOMNode","w","h","setStyle","styleProp","setParentStyle","getLargestWidths","otherCompInfo","total","colWidths","addToWidth","getAllColumnsWidth","tblObject","tbl","arrayIndex","currWidth","cellIndex","currCell","__orb","_visible","cellwidth","_textWidth","_colSpan","_paddingLeft","_paddingRight","_borderLeftWidth","_borderRightWidth","cspan","_rowSpan","inhibit","react","comps","pivotId","themeChangeCallbacks","createClass","getInitialState","DragManager","registerThemeChanged","updateClasses","moveButton","expandRow","collapseRow","compCallback","unregisterThemeChanged","thisnode","componentDidUpdate","synchronizeWidths","componentDidMount","fontInfos","fontFamily","fontSize","dataCellsNode","refs","dataCells","dataCellsTableNode","colHeadersNode","colHeaders","rowHeadersNode","horizontalScrollBar","setScrollClient","scrollPercent","scrollAmount","verticalScrollBar","onWheel","elem","scrollbar","amount","currentTarget","deltaX","deltaY","scroll","deltaMode","SizingManager","Toolbar","UpperButtons","PivotTableUpperButtons","ColumnButtons","PivotTableColumnButtons","RowButtons","PivotTableRowButtons","RowHeaders","PivotTableRowHeaders","ColumnHeaders","PivotTableColumnHeaders","DataCells","PivotTableDataCells","HorizontalScrollBar","VerticalScrollBar","tblStyle","ref","pivotTableComp","colSpan","padding","chartStyle","chart","canRender","Chart","PivotRow","PivotCell","leftmostCellFound","layoutInfos","rowstyle","istopmost","isleftmost","topMostCells","lastLeftMostCellVSpan","_borderLeft","updateCellInfos","cellContentNode","cellContent","propList","retPaddingLeft","retBorderLeft","text","textContent","innerText","nodeStyle","_lastText","shouldComponentUpdate","nextProps","_latestVisibleState","cellClick","divcontent","headerPushed","isSubtotal","onClick","dangerouslySetInnerHTML","__html","headerClassName","onDoubleClick","rowSpan","dragManager","doElementsOverlap","elem1Rect","elem2Rect","setCurrDropTarget","dropTarget","_currDropTarget","signalDragEnd","signalDragOver","setCurrDropIndicator","dropIndicator","_currDropIndicator","onDragOver","onDragEnd","_pivotComp","_currDragElement","_dragNode","_dropTargets","_dropIndicators","_initialized","pivotComp","setDragElement","prevDragElement","registerTarget","dragOverHandler","dargEndHandler","unregisterTarget","tindex","registerIndicator","indicator","unregisterIndicator","iindex","elementMoved","foundTarget","dragNodeRect","tnodeRect","isOverlap","foundIndicator","elementOwnIndicator","targetIndicator","axeIndicators","DropIndicator","displayName","isover","componentWillUnmount","isMounted","isVertical","isFirst","isLast","dtid","DropTarget","DropTargetVertical","currButton","pbid","PivotButton","pos","startpos","mousedown","dragging","onFilterMouseDown","filterButton","filterButtonPos","filterPanelFactory","FilterPanel","filterPanel","onMouseMove","onMouseDown","ctrlKey","thispos","mouseoffset","onMouseUp","isdragged","newpos","divstyle","zIndex","sortDirectionClass","filterClass","fieldAggFunc","fieldsDropTarget","fieldsButtons","dataButtons","dataDropTarget","columnButtons","rowButtons","cntrClass","headerRow","setColGroup","colgroup","innerHTML","scrollBarMixin","scrollEvent","scrollClient","thumbOffset","thumbElem","scrollThumb","thumbposInParent","mousePosProp","posProp","getScrollSize","sizeProp","scrollCallback","maxOffset","scrolledElement","clientSize","elementSize","scrollBarContainerSize","newSize","containerSize","mode","newOffset","thumbStyle","offsetCssProp","thisStyle","thumbClass","cssClass","mixins","google","visualization","drawChart","chartData","DataTable","addColumn","addRows","fontName","hAxis","vAxis","draw","filterManager","unmountComponentAtNode","onMouseWheel","valuesTable","scrollHeight","clientHeight","componentWillMount","addCheckboxRow","defaultChecked","Dropdown","buttonClass","currentFilter","selectedValue","onValueChanged","placeholder","clearFilter","float","openOrClose","valueNode","valueElement","valuesListNode","valuesList","onMouseEnter","backgroundPosition","onMouseLeave","selectValue","listNode","isli","tableClasses","statics","dialogFactory","setOverlayClass","close","dialogElement","dialogBodyElement","screenWidth","clientWidth","innerWidth","screenHeight","innerHeight","maxHeight","dWidth","dHeight","_toInit","btn","createCallback","action","pgridComponent","configButtons","defaultToolbarConfig","btnConfig","refName","tooltip","excelExport","exportToExcel","download","href","click","expandAllRows","collapseAllRows","expandAllColumns","collapseAllColumns","updateSubtotalsButton","subTotalsState","classToAdd","classToRemove","initSubtotals","updateGrandtotalButton","initGrandtotal","synchronizePivotChartWidths","synchronizePivotTableWidths","pivotWrapperTable","pivot","topBtns","upperButtons","cBtns","colButtons","rBtnsTbl","rBtnsWidth","chartWidth","pivotHeight","chartHeight","cHeadersTbl","rHeadersTbl","dataCellsTbl","hScroll","vScroll","dataCellsWidths","rHeadersWidth","dataCellsContainerWidth","dataCellsRemHeight","dataCellsTableHeight","../orb.axe","../orb.export.excel","../orb.filtering","../orb.ui.header","../orb.utils","../orb.utils.dom"],"mappings":"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","file":"orb-1.1.0.min.js","sourcesContent":["/**\n * orb v1.1.0, Pivot table javascript library.\n *\n * Copyright (c) 2014-2015 Najmeddine Nouri <devnajm@gmail.com>.\n *\n * @version v1.1.0\n * @link http://orbjs.net/\n * @license MIT\n */\n\n/* global module, require, define, window, document, global, React, ReactDOM */\n/*jshint node: true, eqnull: true*/\n\n'use strict';\n! function(e) {\n    if (\"object\" == typeof exports && \"undefined\" != typeof module) module.exports = e();\n    else if (\"function\" == typeof define && define.amd) define([], e);\n    else {\n        var f;\n        \"undefined\" != typeof window ? f = window : \"undefined\" != typeof global ? f = global : \"undefined\" != typeof self && (f = self), f.orb = e()\n    }\n}(function() {\n    var define, module, exports;\n    return (function e(t, n, r) {\n        function s(o, u) {\n            if (!n[o]) {\n                if (!t[o]) {\n                    var a = typeof require == \"function\" && require;\n                    if (!u && a) return a(o, !0);\n                    if (i) return i(o, !0);\n                    var f = new Error(\"Cannot find module '\" + o + \"'\");\n                    throw f.code = \"MODULE_NOT_FOUND\", f\n                }\n                var l = n[o] = {\n                    exports: {}\n                };\n                t[o][0].call(l.exports, function(e) {\n                    var n = t[o][1][e];\n                    return s(n ? n : e)\n                }, l, l.exports, e, t, n, r)\n            }\n            return n[o].exports\n        }\n        var i = typeof require == \"function\" && require;\n        for (var o = 0; o < r.length; o++) s(r[o]);\n        return s\n    })({\n        1: [function(_dereq_, module, exports) {\n\n\n\n\n\n\n\n\n\n\n\n\n\n            module.exports.utils = _dereq_('./orb.utils');\n            module.exports.pgrid = _dereq_('./orb.pgrid');\n            module.exports.pgridwidget = _dereq_('./orb.ui.pgridwidget');\n            module.exports.query = _dereq_('./orb.query');\n            module.exports['export'] = _dereq_('./orb.export.excel');\n\n        }, {\n            \"./orb.export.excel\": 6,\n            \"./orb.pgrid\": 8,\n            \"./orb.query\": 9,\n            \"./orb.ui.pgridwidget\": 15,\n            \"./orb.utils\": 18\n        }],\n        2: [function(_dereq_, module, exports) {\n\n\n\n\n\n\n\n            var Aggregations = module.exports = {\n                toAggregateFunc: function(func) {\n                    if (func) {\n                        if (typeof func === 'string' && Aggregations[func]) {\n                            return Aggregations[func];\n                        } else if (typeof func === 'function') {\n                            return func;\n                        } else {\n                            return Aggregations.sum;\n                        }\n                    } else {\n                        return Aggregations.sum;\n                    }\n                },\n                count: function(datafield, intersection, datasource) {\n                    return intersection === 'all' ? datasource.length : intersection.length;\n                },\n                sum: function(datafield, intersection, datasource) {\n                    var sum = 0;\n                    forEachIntersection(datafield, intersection, datasource, function(val) {\n                        sum += val;\n                    });\n                    return sum;\n                },\n                min: function(datafield, intersection, datasource) {\n                    var min = null;\n                    forEachIntersection(datafield, intersection, datasource, function(val) {\n                        if (min == null || val < min) {\n                            min = val;\n                        }\n                    });\n                    return min;\n                },\n                max: function(datafield, intersection, datasource) {\n                    var max = null;\n                    forEachIntersection(datafield, intersection, datasource, function(val) {\n                        if (max == null || val > max) {\n                            max = val;\n                        }\n                    });\n                    return max;\n                },\n                avg: function(datafield, intersection, datasource) {\n                    var avg = 0;\n                    var len = (intersection === 'all' ? datasource : intersection).length;\n                    if (len > 0) {\n                        forEachIntersection(datafield, intersection, datasource, function(val) {\n                            avg += val;\n                        });\n                        avg /= len;\n                    }\n                    return avg;\n                },\n                prod: function(datafield, intersection, datasource) {\n                    var prod;\n                    var len = (intersection === 'all' ? datasource : intersection).length;\n                    if (len > 0) {\n                        prod = 1;\n                        forEachIntersection(datafield, intersection, datasource, function(val) {\n                            prod *= val;\n                        });\n                    }\n                    return prod;\n                },\n                stdev: function(datafield, intersection, datasource) {\n                    return Math.sqrt(calcVariance(datafield, intersection, datasource, false));\n                },\n                stdevp: function(datafield, intersection, datasource) {\n                    return Math.sqrt(calcVariance(datafield, intersection, datasource, true));\n                },\n                'var': function(datafield, intersection, datasource) {\n                    return calcVariance(datafield, intersection, datasource, false);\n                },\n                varp: function(datafield, intersection, datasource) {\n                    return calcVariance(datafield, intersection, datasource, true);\n                }\n            };\n\n            function calcVariance(datafield, intersection, datasource, population) {\n                var variance = 0;\n                var avg = 0;\n                var len = (intersection === 'all' ? datasource : intersection).length;\n                if (len > 0) {\n                    if (population || len > 1) {\n                        forEachIntersection(datafield, intersection, datasource, function(val) {\n                            avg += val;\n                        });\n                        avg /= len;\n                        forEachIntersection(datafield, intersection, datasource, function(val) {\n                            variance += (val - avg) * (val - avg);\n                        });\n                        variance = variance / (population ? len : len - 1);\n                    } else {\n                        variance = NaN;\n                    }\n                }\n                return variance;\n            }\n\n            function forEachIntersection(datafield, intersection, datasource, callback) {\n                var all = intersection === 'all';\n                intersection = all ? datasource : intersection;\n                if (intersection.length > 0) {\n                    for (var i = 0; i < intersection.length; i++) {\n                        callback((all ? intersection[i] : datasource[intersection[i]])[datafield]);\n                    }\n                }\n            }\n\n        }, {}],\n        3: [function(_dereq_, module, exports) {\n\n\n\n\n\n\n\n            var utils = _dereq_('./orb.utils');\n            var Dimension = _dereq_('./orb.dimension');\n\n            var AxeType = {\n                COLUMNS: 1,\n                ROWS: 2,\n                DATA: 3\n            };\n\n\n            module.exports = function(pgrid, type) {\n\n                var self = this;\n                var dimid = 0;\n\n                if (pgrid != null && pgrid.config != null) {\n\n\n                    this.pgrid = pgrid;\n\n\n                    this.type = type;\n\n\n                    this.fields = (function() {\n                        switch (type) {\n                            case AxeType.COLUMNS:\n                                return self.pgrid.config.columnFields;\n                            case AxeType.ROWS:\n                                return self.pgrid.config.rowFields;\n                            case AxeType.DATA:\n                                return self.pgrid.config.dataFields;\n                            default:\n                                return [];\n                        }\n                    }());\n\n\n                    this.dimensionsCount = null;\n\n\n                    this.root = null;\n\n\n                    this.dimensionsByDepth = null;\n\n                    this.update = function() {\n                        self.dimensionsCount = self.fields.length;\n                        self.root = new Dimension(++dimid, null, null, null, self.dimensionsCount + 1, true);\n\n                        self.dimensionsByDepth = {};\n                        for (var depth = 1; depth <= self.dimensionsCount; depth++) {\n                            self.dimensionsByDepth[depth] = [];\n                        }\n\n                        // fill data\n                        fill();\n\n                        // initial sort\n                        for (var findex = 0; findex < self.fields.length; findex++) {\n                            var ffield = self.fields[findex];\n                            if (ffield.sort.order === 'asc' || ffield.sort.order === 'desc') {\n                                self.sort(ffield, true);\n                            }\n                        }\n                    };\n\n                    this.sort = function(field, donottoggle) {\n                        if (field != null) {\n                            if (donottoggle !== true) {\n                                if (field.sort.order !== 'asc') {\n                                    field.sort.order = 'asc';\n                                } else {\n                                    field.sort.order = 'desc';\n                                }\n                            }\n\n                            var depth = self.dimensionsCount - getfieldindex(field);\n                            var parents = depth === self.dimensionsCount ? [self.root] : self.dimensionsByDepth[depth + 1];\n                            for (var i = 0; i < parents.length; i++) {\n                                if (field.sort.customfunc != null) {\n                                    parents[i].values.sort(field.sort.customfunc);\n                                } else {\n                                    parents[i].values.sort();\n                                }\n                                if (field.sort.order === 'desc') {\n                                    parents[i].values.reverse();\n                                }\n                            }\n                        }\n                    };\n\n                    this.flattenValues = function() {\n                        return self.dimensionsByDepth[1].map(function(dim) {\n                            var name = '';\n                            var currDim = dim;\n                            while (!currDim.isRoot) {\n                                name = currDim.value + (name !== '' ? '-' + name : '');\n                                currDim = currDim.parent;\n                            }\n                            return {\n                                name: name,\n                                dim: dim\n                            };\n                        }).sort(function(a, b) {\n                            if (a.name < b.name) return -1;\n                            if (a.name > b.name) return 1;\n                            return 0;\n                        });\n                    };\n                }\n\n                function getfieldindex(field) {\n                    for (var i = 0; i < self.fields.length; i++) {\n                        if (self.fields[i].name === field.name) {\n                            return i;\n                        }\n                    }\n                    return -1;\n                }\n\n\n                function fill() {\n\n                    if (self.pgrid.filteredDataSource != null && self.dimensionsCount > 0) {\n\n                        var datasource = self.pgrid.filteredDataSource;\n                        if (datasource != null && utils.isArray(datasource) && datasource.length > 0) {\n                            for (var rowIndex = 0, dataLength = datasource.length; rowIndex < dataLength; rowIndex++) {\n                                var row = datasource[rowIndex];\n                                var dim = self.root;\n                                for (var findex = 0; findex < self.dimensionsCount; findex++) {\n                                    var depth = self.dimensionsCount - findex;\n                                    var subfield = self.fields[findex];\n                                    var subvalue = row[subfield.name];\n                                    var subdimvals = dim.subdimvals;\n\n                                    if (subdimvals[subvalue] !== undefined) {\n                                        dim = subdimvals[subvalue];\n                                    } else {\n                                        dim.values.push(subvalue);\n                                        dim = new Dimension(++dimid, dim, subvalue, subfield, depth, false, findex == self.dimensionsCount - 1);\n                                        subdimvals[subvalue] = dim;\n                                        dim.rowIndexes = [];\n                                        self.dimensionsByDepth[depth].push(dim);\n                                    }\n\n                                    dim.rowIndexes.push(rowIndex);\n                                }\n                            }\n                        }\n                    }\n                }\n            };\n\n\n            module.exports.Type = AxeType;\n\n        }, {\n            \"./orb.dimension\": 5,\n            \"./orb.utils\": 18\n        }],\n        4: [function(_dereq_, module, exports) {\n\n\n\n\n\n\n\n            var utils = _dereq_('./orb.utils');\n            var axe = _dereq_('./orb.axe');\n            var aggregation = _dereq_('./orb.aggregation');\n            var filtering = _dereq_('./orb.filtering');\n            var themeManager = _dereq_('./orb.themes');\n\n            function getpropertyvalue(property, configs, defaultvalue) {\n                for (var i = 0; i < configs.length; i++) {\n                    if (configs[i][property] != null) {\n                        return configs[i][property];\n                    }\n                }\n                return defaultvalue;\n            }\n\n            function mergefieldconfigs() {\n\n                var merged = {\n                    configs: [],\n                    sorts: [],\n                    subtotals: [],\n                    functions: []\n                };\n\n                for (var i = 0; i < arguments.length; i++) {\n                    var nnconfig = arguments[i] || {};\n                    merged.configs.push(nnconfig);\n                    merged.sorts.push(nnconfig.sort || {});\n                    merged.subtotals.push(nnconfig.subTotal || {});\n                    merged.functions.push({\n                        aggregateFuncName: nnconfig.aggregateFuncName,\n                        aggregateFunc: i === 0 ? nnconfig.aggregateFunc : (nnconfig.aggregateFunc ? nnconfig.aggregateFunc() : null),\n                        formatFunc: i === 0 ? nnconfig.formatFunc : (nnconfig.formatFunc ? nnconfig.formatFunc() : null)\n                    });\n                }\n\n                return merged;\n            }\n\n            function createfield(rootconfig, axetype, fieldconfig, defaultfieldconfig) {\n\n                var axeconfig;\n                var fieldAxeconfig;\n\n                if (defaultfieldconfig) {\n                    switch (axetype) {\n                        case axe.Type.ROWS:\n                            axeconfig = rootconfig.rowSettings;\n                            fieldAxeconfig = defaultfieldconfig.rowSettings;\n                            break;\n                        case axe.Type.COLUMNS:\n                            axeconfig = rootconfig.columnSettings;\n                            fieldAxeconfig = defaultfieldconfig.columnSettings;\n                            break;\n                        case axe.Type.DATA:\n                            axeconfig = rootconfig.dataSettings;\n                            fieldAxeconfig = defaultfieldconfig.dataSettings;\n                            break;\n                        default:\n                            axeconfig = null;\n                            fieldAxeconfig = null;\n                            break;\n                    }\n                } else {\n                    axeconfig = null;\n                    fieldAxeconfig = null;\n                }\n\n                var merged = mergefieldconfigs(fieldconfig, fieldAxeconfig, axeconfig, defaultfieldconfig, rootconfig);\n\n                return new Field({\n                    name: getpropertyvalue('name', merged.configs, ''),\n\n                    caption: getpropertyvalue('caption', merged.configs, ''),\n\n                    sort: {\n                        order: getpropertyvalue('order', merged.sorts, null),\n                        customfunc: getpropertyvalue('customfunc', merged.sorts, null)\n                    },\n                    subTotal: {\n                        visible: getpropertyvalue('visible', merged.subtotals, true),\n                        collapsible: getpropertyvalue('collapsible', merged.subtotals, true),\n                        collapsed: getpropertyvalue('collapsed', merged.subtotals, false) && getpropertyvalue('collapsible', merged.subtotals, true)\n                    },\n\n                    aggregateFuncName: getpropertyvalue('aggregateFuncName', merged.functions, 'sum'),\n                    aggregateFunc: getpropertyvalue('aggregateFunc', merged.functions, aggregation.sum),\n                    formatFunc: getpropertyvalue('formatFunc', merged.functions, null)\n                }, false);\n            }\n\n            function GrandTotalConfig(options) {\n\n                options = options || {};\n\n                this.rowsvisible = options.rowsvisible !== undefined ? options.rowsvisible : true;\n                this.columnsvisible = options.columnsvisible !== undefined ? options.columnsvisible : true;\n            }\n\n            function SubTotalConfig(options, setdefaults) {\n\n                var defaults = {\n                    visible: setdefaults === true ? true : undefined,\n                    collapsible: setdefaults === true ? true : undefined,\n                    collapsed: setdefaults === true ? false : undefined\n                };\n                options = options || {};\n\n                this.visible = options.visible !== undefined ? options.visible : defaults.visible;\n                this.collapsible = options.collapsible !== undefined ? options.collapsible : defaults.collapsible;\n                this.collapsed = options.collapsed !== undefined ? options.collapsed : defaults.collapsed;\n            }\n\n            function SortConfig(options) {\n                options = options || {};\n\n                this.order = options.order || (options.customfunc ? 'asc' : null);\n                this.customfunc = options.customfunc;\n            }\n\n            function ChartConfig(options) {\n                options = options || {};\n\n                this.enabled = options.enabled || false;\n                // type can be: 'LineChart', 'AreaChart', 'ColumnChart', 'BarChart', 'SteppedAreaChart'\n                this.type = options.type || 'LineChart';\n            }\n\n            var Field = module.exports.field = function(options, createSubOptions) {\n\n                options = options || {};\n\n                // field name\n                this.name = options.name;\n\n                // shared settings\n                this.caption = options.caption || this.name;\n\n                // rows & columns settings\n                this.sort = new SortConfig(options.sort);\n                this.subTotal = new SubTotalConfig(options.subTotal);\n\n                // data settings\n                var _aggregatefunc;\n                var _formatfunc;\n\n                function defaultFormatFunc(val) {\n                    return val != null ? val.toString() : '';\n                }\n\n                this.aggregateFunc = function(func) {\n                    if (func) {\n                        _aggregatefunc = aggregation.toAggregateFunc(func);\n                    } else {\n                        return _aggregatefunc;\n                    }\n                };\n\n                this.formatFunc = function(func) {\n                    if (func) {\n                        _formatfunc = func;\n                    } else {\n                        return _formatfunc;\n                    }\n                };\n\n                this.aggregateFuncName = options.aggregateFuncName ||\n                    (options.aggregateFunc ?\n                        (utils.isString(options.aggregateFunc) ?\n                            options.aggregateFunc :\n                            'custom') :\n                        null);\n\n                this.aggregateFunc(options.aggregateFunc);\n                this.formatFunc(options.formatFunc || defaultFormatFunc);\n\n                if (createSubOptions !== false) {\n                    (this.rowSettings = new Field(options.rowSettings, false)).name = this.name;\n                    (this.columnSettings = new Field(options.columnSettings, false)).name = this.name;\n                    (this.dataSettings = new Field(options.dataSettings, false)).name = this.name;\n                }\n            };\n\n\n            module.exports.config = function(config) {\n\n                var self = this;\n\n                this.dataSource = config.dataSource || [];\n                this.canMoveFields = config.canMoveFields !== undefined ? !!config.canMoveFields : true;\n                this.dataHeadersLocation = config.dataHeadersLocation === 'columns' ? 'columns' : 'rows';\n                this.grandTotal = new GrandTotalConfig(config.grandTotal);\n                this.subTotal = new SubTotalConfig(config.subTotal, true);\n                this.width = config.width;\n                this.height = config.height;\n                this.toolbar = config.toolbar;\n                this.theme = themeManager;\n                this.chartMode = new ChartConfig(config.chartMode);\n\n                themeManager.current(config.theme);\n\n                this.rowSettings = new Field(config.rowSettings, false);\n                this.columnSettings = new Field(config.columnSettings, false);\n                this.dataSettings = new Field(config.dataSettings, false);\n\n                // datasource field names\n                this.dataSourceFieldNames = [];\n                // datasource field captions\n                this.dataSourceFieldCaptions = [];\n\n                this.captionToName = function(caption) {\n                    var fcaptionIndex = self.dataSourceFieldCaptions.indexOf(caption);\n                    return fcaptionIndex >= 0 ? self.dataSourceFieldNames[fcaptionIndex] : caption;\n                };\n\n                this.nameToCaption = function(name) {\n                    var fnameIndex = self.dataSourceFieldNames.indexOf(name);\n                    return fnameIndex >= 0 ? self.dataSourceFieldCaptions[fnameIndex] : name;\n                };\n\n                this.setTheme = function(newTheme) {\n                    return self.theme.current() !== self.theme.current(newTheme);\n                };\n\n                this.allFields = (config.fields || []).map(function(fieldconfig) {\n                    var f = new Field(fieldconfig);\n                    // map fields names to captions\n                    self.dataSourceFieldNames.push(f.name);\n                    self.dataSourceFieldCaptions.push(f.caption);\n                    return f;\n                });\n\n                function ensureFieldConfig(obj) {\n                    if (typeof obj === 'string') {\n                        return {\n                            name: self.captionToName(obj)\n                        };\n                    }\n                    return obj;\n                }\n\n                this.rowFields = (config.rows || []).map(function(fieldconfig) {\n                    fieldconfig = ensureFieldConfig(fieldconfig);\n                    return createfield(self, axe.Type.ROWS, fieldconfig, getfield(self.allFields, fieldconfig.name));\n                });\n\n                this.columnFields = (config.columns || []).map(function(fieldconfig) {\n                    fieldconfig = ensureFieldConfig(fieldconfig);\n                    return createfield(self, axe.Type.COLUMNS, fieldconfig, getfield(self.allFields, fieldconfig.name));\n                });\n\n                this.dataFields = (config.data || []).map(function(fieldconfig) {\n                    fieldconfig = ensureFieldConfig(fieldconfig);\n                    return createfield(self, axe.Type.DATA, fieldconfig, getfield(self.allFields, fieldconfig.name));\n                });\n\n                this.dataFieldsCount = this.dataFields ? (this.dataFields.length || 1) : 1;\n\n                var runtimeVisibility = {\n                    subtotals: {\n                        rows: self.rowSettings.subTotal.visible !== undefined ? self.rowSettings.subTotal.visible : true,\n                        columns: self.columnSettings.subTotal.visible !== undefined ? self.columnSettings.subTotal.visible : true\n                    }\n                };\n\n                function getfield(axefields, fieldname) {\n                    var fieldindex = getfieldindex(axefields, fieldname);\n                    if (fieldindex > -1) {\n                        return axefields[fieldindex];\n                    }\n                    return null;\n                }\n\n                function getfieldindex(axefields, fieldname) {\n                    for (var fi = 0; fi < axefields.length; fi++) {\n                        if (axefields[fi].name === fieldname) {\n                            return fi;\n                        }\n                    }\n                    return -1;\n                }\n\n                this.getField = function(fieldname) {\n                    return getfield(self.allFields, fieldname);\n                };\n\n                this.getRowField = function(fieldname) {\n                    return getfield(self.rowFields, fieldname);\n                };\n\n                this.getColumnField = function(fieldname) {\n                    return getfield(self.columnFields, fieldname);\n                };\n\n                this.getDataField = function(fieldname) {\n                    return getfield(self.dataFields, fieldname);\n                };\n\n                this.availablefields = function() {\n                    return self.allFields.filter(function(field) {\n                        var notequalfield = function(otherfield) {\n                            return field.name !== otherfield.name;\n                        };\n\n                        return self.dataFields.every(notequalfield) &&\n                            self.rowFields.every(notequalfield) &&\n                            self.columnFields.every(notequalfield);\n                    });\n                };\n\n                this.getDataSourceFieldCaptions = function() {\n                    var row0;\n                    if (self.dataSource && (row0 = self.dataSource[0])) {\n                        var fieldNames = utils.ownProperties(row0);\n                        var headers = [];\n                        for (var i = 0; i < fieldNames.length; i++) {\n                            headers.push(self.nameToCaption(fieldNames[i]));\n                        }\n                        return headers;\n                    }\n                    return null;\n                };\n\n                this.getPreFilters = function() {\n                    var prefilters = {};\n                    if (config.preFilters) {\n                        utils.ownProperties(config.preFilters).forEach(function(filteredField) {\n                            var prefilterConfig = config.preFilters[filteredField];\n                            if (utils.isArray(prefilterConfig)) {\n                                prefilters[self.captionToName(filteredField)] = new filtering.expressionFilter(null, null, prefilterConfig, false);\n                            } else {\n                                var opname = utils.ownProperties(prefilterConfig)[0];\n                                if (opname) {\n                                    prefilters[self.captionToName(filteredField)] = new filtering.expressionFilter(opname, prefilterConfig[opname]);\n                                }\n                            }\n                        });\n                    }\n\n                    return prefilters;\n                };\n\n\n                this.moveField = function(fieldname, oldaxetype, newaxetype, position) {\n\n                    var oldaxe, oldposition;\n                    var newaxe;\n                    var fieldConfig;\n                    var defaultFieldConfig = getfield(self.allFields, fieldname);\n\n                    if (defaultFieldConfig) {\n\n                        switch (oldaxetype) {\n                            case axe.Type.ROWS:\n                                oldaxe = self.rowFields;\n                                break;\n                            case axe.Type.COLUMNS:\n                                oldaxe = self.columnFields;\n                                break;\n                            case axe.Type.DATA:\n                                oldaxe = self.dataFields;\n                                break;\n                            default:\n                                break;\n                        }\n\n                        switch (newaxetype) {\n                            case axe.Type.ROWS:\n                                newaxe = self.rowFields;\n                                fieldConfig = self.getRowField(fieldname);\n                                break;\n                            case axe.Type.COLUMNS:\n                                newaxe = self.columnFields;\n                                fieldConfig = self.getColumnField(fieldname);\n                                break;\n                            case axe.Type.DATA:\n                                newaxe = self.dataFields;\n                                fieldConfig = self.getDataField(fieldname);\n                                break;\n                            default:\n                                break;\n                        }\n\n                        if (oldaxe || newaxe) {\n\n                            var newAxeSubtotalsState = self.areSubtotalsVisible(newaxetype);\n\n                            if (oldaxe) {\n                                oldposition = getfieldindex(oldaxe, fieldname);\n                                if (oldaxetype === newaxetype) {\n                                    if (oldposition == oldaxe.length - 1 &&\n                                        position == null ||\n                                        oldposition === position - 1) {\n                                        return false;\n                                    }\n                                }\n                                oldaxe.splice(oldposition, 1);\n                            }\n\n                            var field = createfield(\n                                self,\n                                newaxetype,\n                                fieldConfig,\n                                defaultFieldConfig);\n\n                            if (!newAxeSubtotalsState && field.subTotal.visible !== false) {\n                                field.subTotal.visible = null;\n                            }\n\n                            if (newaxe) {\n                                if (position != null) {\n                                    newaxe.splice(position, 0, field);\n                                } else {\n                                    newaxe.push(field);\n                                }\n                            }\n\n                            // update data fields count\n                            self.dataFieldsCount = self.dataFields ? (self.dataFields.length || 1) : 1;\n\n                            return true;\n                        }\n                    }\n                };\n\n                this.toggleSubtotals = function(axetype) {\n\n                    var i;\n                    var axeFields;\n                    var newState = !self.areSubtotalsVisible(axetype);\n\n                    if (axetype === axe.Type.ROWS) {\n                        runtimeVisibility.subtotals.rows = newState;\n                        axeFields = self.rowFields;\n                    } else if (axetype === axe.Type.COLUMNS) {\n                        runtimeVisibility.subtotals.columns = newState;\n                        axeFields = self.columnFields;\n                    } else {\n                        return false;\n                    }\n\n                    newState = newState === false ? null : true;\n                    for (i = 0; i < axeFields.length; i++) {\n                        if (axeFields[i].subTotal.visible !== false) {\n                            axeFields[i].subTotal.visible = newState;\n                        }\n                    }\n                    return true;\n                };\n\n                this.areSubtotalsVisible = function(axetype) {\n                    if (axetype === axe.Type.ROWS) {\n                        return runtimeVisibility.subtotals.rows;\n                    } else if (axetype === axe.Type.COLUMNS) {\n                        return runtimeVisibility.subtotals.columns;\n                    } else {\n                        return null;\n                    }\n                };\n\n\n                this.toggleGrandtotal = function(axetype) {\n                    var newState = !self.isGrandtotalVisible(axetype);\n\n                    if (axetype === axe.Type.ROWS) {\n                        self.grandTotal.rowsvisible = newState;\n                    } else if (axetype === axe.Type.COLUMNS) {\n                        self.grandTotal.columnsvisible = newState;\n                    } else {\n                        return false;\n                    }\n                    return true;\n                };\n\n                this.isGrandtotalVisible = function(axetype) {\n                    if (axetype === axe.Type.ROWS) {\n                        return self.grandTotal.rowsvisible;\n                    } else if (axetype === axe.Type.COLUMNS) {\n                        return self.grandTotal.columnsvisible;\n                    } else {\n                        return false;\n                    }\n                };\n            };\n        }, {\n            \"./orb.aggregation\": 2,\n            \"./orb.axe\": 3,\n            \"./orb.filtering\": 7,\n            \"./orb.themes\": 11,\n            \"./orb.utils\": 18\n        }],\n        5: [function(_dereq_, module, exports) {\n\n\n\n\n\n\n\n\n            module.exports = function(id, parent, value, field, depth, isRoot, isLeaf) {\n\n                var self = this;\n\n                this.id = id;\n\n                this.parent = parent;\n\n                this.value = value;\n\n                this.isRoot = isRoot;\n\n                this.isLeaf = isLeaf;\n\n                this.field = field;\n\n                this.depth = depth;\n\n                this.values = [];\n\n                this.subdimvals = {};\n\n                this.rowIndexes = null;\n\n                this.getRowIndexes = function(result) {\n                    if (self.rowIndexes == null) {\n                        self.rowIndexes = [];\n                        for (var i = 0; i < self.values.length; i++) {\n                            self.subdimvals[self.values[i]].getRowIndexes(self.rowIndexes);\n                        }\n                    }\n                    if (result != null) {\n                        for (var j = 0; j < self.rowIndexes.length; j++) {\n                            result.push(self.rowIndexes[j]);\n                        }\n                        return result;\n                    } else {\n                        return self.rowIndexes;\n                    }\n                };\n            };\n\n        }, {}],\n        6: [function(_dereq_, module, exports) {\n\n\n\n\n\n\n\n            var utils = _dereq_('./orb.utils');\n            var uiheaders = _dereq_('./orb.ui.header');\n            var themeManager = _dereq_('./orb.themes');\n\n            var uriHeader = 'data:application/vnd.ms-excel;base64,';\n            var docHeader = '<html xmlns:o=\"urn:schemas-microsoft-com:office:office\" xmlns:x=\"urn:schemas-microsoft-com:office:excel\" xmlns=\"http://www.w3.org/TR/REC-html40\">' +\n                '<head>' +\n                '<meta http-equiv=Content-Type content=\"text/html; charset=UTF-8\">' +\n                '<!--[if gte mso 9]><xml>' +\n                ' <x:ExcelWorkbook>' +\n                '  <x:ExcelWorksheets>' +\n                '   <x:ExcelWorksheet>' +\n                '    <x:Name>###sheetname###</x:Name>' +\n                '    <x:WorksheetOptions>' +\n                '     <x:ProtectContents>False</x:ProtectContents>' +\n                '     <x:ProtectObjects>False</x:ProtectObjects>' +\n                '     <x:ProtectScenarios>False</x:ProtectScenarios>' +\n                '    </x:WorksheetOptions>' +\n                '   </x:ExcelWorksheet>' +\n                '  </x:ExcelWorksheets>' +\n                '  <x:ProtectStructure>False</x:ProtectStructure>' +\n                '  <x:ProtectWindows>False</x:ProtectWindows>' +\n                ' </x:ExcelWorkbook>' +\n                '</xml><![endif]-->' +\n                '</head>' +\n                '<body>';\n            var docFooter = '</body></html>';\n\n\n            module.exports = function(pgridwidget) {\n\n                var config = pgridwidget.pgrid.config;\n\n                var currTheme = themeManager.current();\n                currTheme = currTheme === 'bootstrap' ? 'white' : currTheme;\n                var override = currTheme === 'white';\n\n                var buttonTextColor = override ? 'black' : 'white';\n                var themeColor = themeManager.themes[currTheme];\n                var themeFadeout = themeManager.utils.fadeoutColor(themeColor, 0.1);\n\n                var buttonStyle = 'style=\"font-weight: bold; color: ' + buttonTextColor + '; background-color: ' + themeColor + ';\" bgcolor=\"' + themeColor + '\"';\n                var headerStyle = 'style=\"background-color: ' + themeFadeout + ';\" bgcolor=\"' + themeFadeout + '\"';\n\n                function createButtonCell(caption) {\n                    return '<td ' + buttonStyle + '><font color=\"' + buttonTextColor + '\">' + caption + '</font></td>';\n                }\n\n                function createButtons(buttons, cellsCountBefore, cellsCountAfter, prefix) {\n                    var i;\n                    var str = prefix || '<tr>';\n                    for (i = 0; i < cellsCountBefore; i++) {\n                        str += '<td></td>';\n                    }\n\n                    str += buttons.reduce(function(tr, field) {\n                        return (tr += createButtonCell(field.caption));\n                    }, '');\n\n                    for (i = 0; i < cellsCountAfter; i++) {\n                        str += '<td></td>';\n                    }\n                    return str + '</tr>';\n                }\n\n                var cellsHorizontalCount = Math.max(config.dataFields.length + 1, pgridwidget.layout.pivotTable.width);\n\n                var dataFields = createButtons(config.dataFields,\n                    0,\n                    cellsHorizontalCount - config.dataFields.length,\n                    '<tr><td><font color=\"#ccc\">Data</font></td>'\n                );\n\n                var sep = '<tr><td style=\"height: 22px;\" colspan=\"' + cellsHorizontalCount + '\"></td></tr>';\n\n                var columnFields = createButtons(config.columnFields,\n                    pgridwidget.layout.rowHeaders.width,\n                    cellsHorizontalCount - (pgridwidget.layout.rowHeaders.width + config.columnFields.length)\n                );\n\n                var columnHeaders = (function() {\n                    var str = '';\n                    var j;\n                    for (var i = 0; i < pgridwidget.columns.headers.length; i++) {\n                        var currRow = pgridwidget.columns.headers[i];\n                        var rowStr = '<tr>';\n                        if (i < pgridwidget.columns.headers.length - 1) {\n                            for (j = 0; j < pgridwidget.layout.rowHeaders.width; j++) {\n                                rowStr += '<td></td>';\n                            }\n                        } else {\n                            rowStr += config.rowFields.reduce(function(tr, field) {\n                                return (tr += createButtonCell(field.caption));\n                            }, '');\n                        }\n\n                        rowStr += currRow.reduce(function(tr, header) {\n                            var value = header.type === uiheaders.HeaderType.DATA_HEADER ? header.value.caption : header.value;\n                            return (tr += '<td ' + headerStyle + ' colspan=\"' + header.hspan(true) + '\" rowspan=\"' + header.vspan(true) + '\">' + value + '</td>');\n                        }, '');\n                        str += rowStr + '</tr>';\n                    }\n                    return str;\n                }());\n\n                var rowHeadersAndDataCells = (function() {\n                    var str = '';\n                    var j;\n                    for (var i = 0; i < pgridwidget.rows.headers.length; i++) {\n                        var currRow = pgridwidget.rows.headers[i];\n                        var rowStr = '<tr>';\n                        rowStr += currRow.reduce(function(tr, header) {\n                            return (tr += '<td ' + headerStyle + ' colspan=\"' + header.hspan(true) + '\" rowspan=\"' + header.vspan(true) + '\">' + header.value + '</td>');\n                        }, '');\n                        var dataRow = pgridwidget.dataRows[i];\n                        rowStr += dataRow.reduce(function(tr, dataCell, index) {\n                            var formatFunc = config.dataFields[index = index % config.dataFields.length].formatFunc;\n                            var value = dataCell.value == null ? '' : formatFunc ? formatFunc()(dataCell.value) : dataCell.value;\n                            return (tr += '<td>' + value + '</td>');\n                        }, '');\n                        str += rowStr + '</tr>';\n                    }\n                    return str;\n                }());\n\n                function toBase64(str) {\n                    return utils.btoa(unescape(encodeURIComponent(str)));\n                }\n\n                return uriHeader +\n                    toBase64(docHeader +\n                        '<table>' + dataFields + sep + columnFields + columnHeaders + rowHeadersAndDataCells + '</table>' +\n                        docFooter);\n            };\n        }, {\n            \"./orb.themes\": 11,\n            \"./orb.ui.header\": 14,\n            \"./orb.utils\": 18\n        }],\n        7: [function(_dereq_, module, exports) {\n\n\n\n\n\n\n\n            var utils = _dereq_('./orb.utils');\n\n            var filtering = module.exports = {\n                ALL: '#All#',\n                NONE: '#None#',\n                BLANK: '#Blank#\"'\n            };\n\n            filtering.expressionFilter = function(operator, term, staticValue, excludeStatic) {\n                var self = this;\n\n                this.operator = ops.get(operator);\n                this.regexpMode = false;\n                this.term = term || null;\n                if (this.term && this.operator && this.operator.regexpSupported) {\n                    if (utils.isRegExp(this.term)) {\n                        this.regexpMode = true;\n                        if (!this.term.ignoreCase) {\n                            this.term = new RegExp(this.term.source, 'i');\n                        }\n                    }\n                }\n\n                this.staticValue = staticValue;\n                this.excludeStatic = excludeStatic;\n\n                this.test = function(value) {\n                    if (utils.isArray(self.staticValue)) {\n                        var found = self.staticValue.indexOf(value) >= 0;\n                        return (self.excludeStatic && !found) || (!self.excludeStatic && found);\n                    } else if (self.term) {\n                        return self.operator.func(value, self.term);\n                    } else if (self.staticValue === true || self.staticValue === filtering.ALL) {\n                        return true;\n                    } else if (self.staticValue === false || self.staticValue === filtering.NONE) {\n                        return false;\n                    } else {\n                        return true;\n                    }\n                };\n\n                this.isAlwaysTrue = function() {\n                    return !(self.term || utils.isArray(self.staticValue) || self.staticValue === filtering.NONE || self.staticValue === false);\n                };\n            };\n\n            var ops = filtering.Operators = {\n                get: function(opname) {\n                    switch (opname) {\n                        case ops.MATCH.name:\n                            return ops.MATCH;\n                        case ops.NOTMATCH.name:\n                            return ops.NOTMATCH;\n                        case ops.EQ.name:\n                            return ops.EQ;\n                        case ops.NEQ.name:\n                            return ops.NEQ;\n                        case ops.GT.name:\n                            return ops.GT;\n                        case ops.GTE.name:\n                            return ops.GTE;\n                        case ops.LT.name:\n                            return ops.LT;\n                        case ops.LTE.name:\n                            return ops.LTE;\n                        default:\n                            return ops.NONE;\n                    }\n                },\n                NONE: null,\n                MATCH: {\n                    name: 'Matches',\n                    func: function(value, term) {\n                        if (value) {\n                            return value.toString().search(utils.isRegExp(term) ? term : new RegExp(term, 'i')) >= 0;\n                        } else {\n                            return !(!!term);\n                        }\n                    },\n                    regexpSupported: true\n                },\n                NOTMATCH: {\n                    name: 'Does Not Match',\n                    func: function(value, term) {\n                        if (value) {\n                            return value.toString().search(utils.isRegExp(term) ? term : new RegExp(term, 'i')) < 0;\n                        } else {\n                            return !!term;\n                        }\n                    },\n                    regexpSupported: true\n                },\n                EQ: {\n                    name: '=',\n                    func: function(value, term) {\n                        return value == term;\n                    },\n                    regexpSupported: false\n                },\n                NEQ: {\n                    name: '<>',\n                    func: function(value, term) {\n                        return value != term;\n                    },\n                    regexpSupported: false\n                },\n                GT: {\n                    name: '>',\n                    func: function(value, term) {\n                        return value > term;\n                    },\n                    regexpSupported: false\n                },\n                GTE: {\n                    name: '>=',\n                    func: function(value, term) {\n                        return value >= term;\n                    },\n                    regexpSupported: false\n                },\n                LT: {\n                    name: '<',\n                    func: function(value, term) {\n                        return value < term;\n                    },\n                    regexpSupported: false\n                },\n                LTE: {\n                    name: '<=',\n                    func: function(value, term) {\n                        return value <= term;\n                    },\n                    regexpSupported: false\n                }\n            };\n\n        }, {\n            \"./orb.utils\": 18\n        }],\n        8: [function(_dereq_, module, exports) {\n\n\n\n\n\n\n\n            var axe = _dereq_('./orb.axe');\n            var configuration = _dereq_('./orb.config').config;\n            var filtering = _dereq_('./orb.filtering');\n            var query = _dereq_('./orb.query');\n            var utils = _dereq_('./orb.utils');\n\n\n            module.exports = function(config) {\n\n                var defaultfield = {\n                    name: '#undefined#'\n                };\n\n                var self = this;\n                var _iCache;\n\n\n                this.config = new configuration(config);\n                this.filters = self.config.getPreFilters();\n                this.filteredDataSource = self.config.dataSource;\n\n                this.rows = new axe(self, axe.Type.ROWS);\n                this.columns = new axe(self, axe.Type.COLUMNS);\n                this.dataMatrix = {};\n\n                function refresh(refreshFilters) {\n                    if (refreshFilters !== false) {\n                        refreshFilteredDataSource();\n                    }\n                    self.rows.update();\n                    self.columns.update();\n                    computeValues();\n                }\n\n                function refreshFilteredDataSource() {\n                    var filterFields = utils.ownProperties(self.filters);\n                    if (filterFields.length > 0) {\n                        self.filteredDataSource = [];\n\n                        for (var i = 0; i < self.config.dataSource.length; i++) {\n                            var row = self.config.dataSource[i];\n                            var exclude = false;\n                            for (var fi = 0; fi < filterFields.length; fi++) {\n                                var fieldname = filterFields[fi];\n                                var fieldFilter = self.filters[fieldname];\n\n                                if (fieldFilter && !fieldFilter.test(row[fieldname])) {\n                                    exclude = true;\n                                    break;\n                                }\n                            }\n                            if (!exclude) {\n                                self.filteredDataSource.push(row);\n                            }\n                        }\n                    } else {\n                        self.filteredDataSource = self.config.dataSource;\n                    }\n                }\n\n                this.moveField = function(fieldname, oldaxetype, newaxetype, position) {\n                    if (self.config.moveField(fieldname, oldaxetype, newaxetype, position)) {\n                        refresh(false);\n                        return true;\n                    }\n                    return false;\n                };\n\n                this.applyFilter = function(fieldname, operator, term, staticValue, excludeStatic) {\n                    self.filters[fieldname] = new filtering.expressionFilter(operator, term, staticValue, excludeStatic);\n                    refresh();\n                };\n\n                this.refreshData = function(data) {\n                    self.config.dataSource = data;\n                    refresh();\n                };\n\n                this.getFieldValues = function(field, filterFunc) {\n                    var values1 = [];\n                    var values = [];\n                    var containsBlank = false;\n                    for (var i = 0; i < self.config.dataSource.length; i++) {\n                        var row = self.config.dataSource[i];\n                        var val = row[field];\n                        if (filterFunc !== undefined) {\n                            if (filterFunc === true || (typeof filterFunc === 'function' && filterFunc(val))) {\n                                values1.push(val);\n                            }\n                        } else {\n                            if (val != null) {\n                                values1.push(val);\n                            } else {\n                                containsBlank = true;\n                            }\n                        }\n                    }\n                    if (values1.length > 1) {\n                        if (utils.isNumber(values1[0]) || utils.isDate(values1[0])) {\n                            values1.sort(function(a, b) {\n                                return a ? (b ? a - b : 1) : (b ? -1 : 0);\n                            });\n                        } else {\n                            values1.sort();\n                        }\n\n                        for (var vi = 0; vi < values1.length; vi++) {\n                            if (vi === 0 || values1[vi] !== values[values.length - 1]) {\n                                values.push(values1[vi]);\n                            }\n                        }\n                    } else {\n                        values = values1;\n                    }\n                    if (containsBlank) {\n                        values.unshift(null);\n                    }\n                    return values;\n                };\n\n                this.getFieldFilter = function(field) {\n                    return self.filters[field];\n                };\n\n                this.isFieldFiltered = function(field) {\n                    var filter = self.getFieldFilter(field);\n                    return filter != null && !filter.isAlwaysTrue();\n                };\n\n                this.getData = function(field, rowdim, coldim, aggregateFunc) {\n                    var value;\n                    if (rowdim && coldim) {\n\n                        var datafieldName = field || (self.config.dataFields[0] || defaultfield).name;\n                        var datafield = self.config.getDataField(datafieldName);\n\n                        if (!datafield || (aggregateFunc && datafield.aggregateFunc != aggregateFunc)) {\n                            value = self.calcAggregation(\n                                rowdim.isRoot ? null : rowdim.getRowIndexes().slice(0),\n                                coldim.isRoot ? null : coldim.getRowIndexes().slice(0), [datafieldName],\n                                aggregateFunc)[datafieldName];\n                        } else {\n                            if (self.dataMatrix[rowdim.id] && self.dataMatrix[rowdim.id][coldim.id]) {\n                                value = self.dataMatrix[rowdim.id][coldim.id][datafieldName];\n                            } else {\n                                value = null;\n                            }\n                        }\n                    }\n\n                    return value === undefined ? null : value;\n                };\n\n                this.calcAggregation = function(rowIndexes, colIndexes, fieldNames, aggregateFunc) {\n                    return computeValue(rowIndexes, colIndexes, rowIndexes, fieldNames, aggregateFunc);\n                };\n\n                this.getChartData = function() {\n\n                    var config = self.config;\n\n                    function getAxisLabel(axisFields) {\n                        var str = '';\n                        for (var ti = 0; ti < axisFields.length; ti++) {\n                            str += (ti > 0 ? ' - ' : '') + axisFields[ti].caption;\n                        }\n                        return str;\n                    }\n\n                    var hAxisLabel = getAxisLabel(config.columnFields);\n                    var vAxisLabel = config.dataFields[0].aggregateFuncName + '(' + config.dataFields[0].caption + ')';\n                    var legendsLabel = getAxisLabel(config.rowFields);\n\n                    var rowLeafDimensions = self.rows.flattenValues();\n                    var colLeafDimensions = self.columns.flattenValues();\n                    var data = [];\n\n                    for (var ci = 0; ci < colLeafDimensions.length; ci++) {\n                        var cdim = colLeafDimensions[ci];\n                        var currData = [cdim.name];\n                        for (var rri = 0; rri < rowLeafDimensions.length; rri++) {\n                            currData.push(self.getData(config.dataFields[0].name, rowLeafDimensions[rri].dim, cdim.dim));\n                        }\n                        data.push(currData);\n                    }\n\n                    return {\n                        title: vAxisLabel + ': ' + hAxisLabel + ' by ' + legendsLabel,\n                        hAxisLabel: hAxisLabel,\n                        vAxisLabel: vAxisLabel,\n                        legendsLabel: legendsLabel,\n                        colNames: rowLeafDimensions.map(function(d) {\n                            return d.name;\n                        }),\n                        dataTable: data\n                    };\n                };\n\n                this.query = query(self);\n\n                refresh();\n\n                function computeValue(rowIndexes, colIndexes, origRowIndexes, fieldNames, aggregateFunc) {\n\n                    var res = {};\n\n                    if (self.config.dataFieldsCount > 0) {\n\n                        var intersection;\n\n                        if (rowIndexes == null) {\n                            intersection = colIndexes;\n                        } else if (colIndexes == null) {\n                            intersection = rowIndexes;\n                        } else {\n                            intersection = [];\n                            for (var ri = 0; ri < rowIndexes.length; ri++) {\n                                var rowindex = rowIndexes[ri];\n                                if (rowindex >= 0) {\n                                    var colrowindex = colIndexes.indexOf(rowindex);\n                                    if (colrowindex >= 0) {\n                                        rowIndexes[ri] = 0 - (rowindex + 2);\n                                        intersection.push(rowindex);\n                                    }\n                                }\n                            }\n                        }\n\n                        var emptyIntersection = intersection && intersection.length === 0;\n                        var datasource = self.filteredDataSource;\n                        var datafield;\n                        var datafields = [];\n\n                        if (fieldNames) {\n                            for (var fieldnameIndex = 0; fieldnameIndex < fieldNames.length; fieldnameIndex++) {\n                                datafield = self.config.getDataField(fieldNames[fieldnameIndex]);\n                                if (!aggregateFunc) {\n                                    if (!datafield) {\n                                        datafield = self.config.getField(fieldNames[fieldnameIndex]);\n                                        if (datafield) {\n                                            aggregateFunc = datafield.dataSettings ? datafield.dataSettings.aggregateFunc() : datafield.aggregateFunc();\n                                        }\n                                    } else {\n                                        aggregateFunc = datafield.aggregateFunc();\n                                    }\n                                }\n\n                                if (datafield && aggregateFunc) {\n                                    datafields.push({\n                                        field: datafield,\n                                        aggregateFunc: aggregateFunc\n                                    });\n                                }\n                            }\n                        } else {\n                            for (var datafieldIndex = 0; datafieldIndex < self.config.dataFieldsCount; datafieldIndex++) {\n                                datafield = self.config.dataFields[datafieldIndex] || defaultfield;\n                                if (aggregateFunc || datafield.aggregateFunc) {\n                                    datafields.push({\n                                        field: datafield,\n                                        aggregateFunc: aggregateFunc || datafield.aggregateFunc()\n                                    });\n                                }\n                            }\n                        }\n\n                        for (var dfi = 0; dfi < datafields.length; dfi++) {\n                            datafield = datafields[dfi];\n                            // no data\n                            if (emptyIntersection) {\n                                res[datafield.field.name] = null;\n                            } else {\n                                res[datafield.field.name] = datafield.aggregateFunc(datafield.field.name, intersection || 'all', self.filteredDataSource, origRowIndexes || rowIndexes, colIndexes);\n                            }\n                        }\n                    }\n\n                    return res;\n                }\n\n                function computeRowValues(rowDim) {\n\n                    if (rowDim) {\n                        var data = {};\n                        var rid = 'r' + rowDim.id;\n\n                        // set cached row indexes for current row dimension\n                        if (_iCache[rid] === undefined) {\n                            _iCache[rid] = rowDim.isRoot ? null : (_iCache[rowDim.parent.id] || rowDim.getRowIndexes());\n                        }\n\n                        // calc grand-total cell\n                        data[self.columns.root.id] = computeValue(rowDim.isRoot ? null : _iCache[rid].slice(0), null);\n\n                        if (self.columns.dimensionsCount > 0) {\n                            var p = 0;\n                            var parents = [self.columns.root];\n\n                            while (p < parents.length) {\n                                var parent = parents[p];\n                                var rowindexes = rowDim.isRoot ?\n                                    null :\n                                    (parent.isRoot ?\n                                        _iCache[rid].slice(0) :\n                                        _iCache['c' + parent.id].slice(0));\n\n                                for (var i = 0; i < parent.values.length; i++) {\n                                    var subdim = parent.subdimvals[parent.values[i]];\n                                    var cid = 'c' + subdim.id;\n\n                                    // set cached row indexes for this column leaf dimension\n                                    if (_iCache[cid] === undefined) {\n                                        _iCache[cid] = _iCache[cid] || subdim.getRowIndexes().slice(0);\n                                    }\n\n                                    data[subdim.id] = computeValue(rowindexes, _iCache[cid], rowDim.isRoot ? null : rowDim.getRowIndexes());\n\n                                    if (!subdim.isLeaf) {\n                                        parents.push(subdim);\n                                        if (rowindexes) {\n                                            _iCache[cid] = [];\n                                            for (var ur = 0; ur < rowindexes.length; ur++) {\n                                                var vr = rowindexes[ur];\n                                                if (vr != -1 && vr < 0) {\n                                                    _iCache[cid].push(0 - (vr + 2));\n                                                    rowindexes[ur] = -1;\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                _iCache['c' + parent.id] = undefined;\n                                p++;\n                            }\n                        }\n\n                        return data;\n                    }\n                }\n\n                function computeValues() {\n                    self.dataMatrix = {};\n                    _iCache = {};\n\n                    // calc grand total row\n                    self.dataMatrix[self.rows.root.id] = computeRowValues(self.rows.root);\n\n                    if (self.rows.dimensionsCount > 0) {\n                        var parents = [self.rows.root];\n                        var p = 0;\n                        var parent;\n                        while (p < parents.length) {\n                            parent = parents[p];\n                            // calc children rows\n                            for (var i = 0; i < parent.values.length; i++) {\n                                var subdim = parent.subdimvals[parent.values[i]];\n                                // calc child row\n                                self.dataMatrix[subdim.id] = computeRowValues(subdim);\n                                // if row is not a leaf, add it to parents array to process its children\n                                if (!subdim.isLeaf) {\n                                    parents.push(subdim);\n                                }\n                            }\n                            // next parent\n                            p++;\n                        }\n                    }\n                }\n            };\n\n        }, {\n            \"./orb.axe\": 3,\n            \"./orb.config\": 4,\n            \"./orb.filtering\": 7,\n            \"./orb.query\": 9,\n            \"./orb.utils\": 18\n        }],\n        9: [function(_dereq_, module, exports) {\n\n\n\n\n\n\n\n            var utils = _dereq_('./orb.utils');\n            var axe = _dereq_('./orb.axe');\n            var aggregation = _dereq_('./orb.aggregation');\n\n            var queryBase = function(source, query, filters) {\n\n                var self = this;\n\n                this.source = source;\n                this.query = query;\n                this.filters = filters;\n\n                this.extractResult = function(aggs, options, outerArgs) {\n                    if (outerArgs.multi === true) {\n                        var res = {};\n                        for (var ai = 0; ai < options.multiFieldNames.length; ai++) {\n                            res[options.multiFieldNames[ai]] = aggs[self.getCaptionName(options.multiFieldNames[ai])];\n                        }\n                        return res;\n                    } else {\n                        return aggs[outerArgs.datafieldname];\n                    }\n                };\n\n                this.measureFunc = function(datafieldname, multi, aggregateFunc, fieldsConfig) {\n\n                    var outerArgs = {\n                        datafieldname: self.getCaptionName(datafieldname),\n                        multi: multi,\n                        aggregateFunc: aggregateFunc\n                    };\n\n                    return function(options) {\n                        options = self.cleanOptions(options, arguments, outerArgs);\n                        var aggs = self.compute(options, fieldsConfig, multi);\n                        return self.extractResult(aggs, options, outerArgs);\n                    };\n                };\n\n                this.setDefaultAggFunctions = function(param) {\n\n                    // if there is a registered field with a name or caption 'val', use 'val_'\n                    var valname = self.query.val ? 'val_' : 'val';\n                    self.query[valname] = self.measureFunc(undefined, true, undefined, param);\n\n\n                    var aggFunctions = utils.ownProperties(aggregation);\n                    for (var funcIndex = 0; funcIndex < aggFunctions.length; funcIndex++) {\n                        var funcName = aggFunctions[funcIndex];\n                        if (funcName !== 'toAggregateFunc') {\n                            self.query[funcName] = self.measureFunc(\n                                undefined,\n                                true,\n                                aggregation[funcName],\n                                param\n                            );\n                        }\n                    }\n                };\n\n            };\n\n            var pgridQuery = function(pgrid) {\n\n                queryBase.call(this, pgrid, {}, {});\n\n                var self = this;\n\n                this.getCaptionName = function(caption) {\n                    return self.source.config.captionToName(caption);\n                };\n\n                this.cleanOptions = function(options, innerArgs, outerArgs) {\n                    var opts = {\n                        fieldNames: []\n                    };\n\n                    if (outerArgs.multi === true) {\n                        if (options && typeof options === 'object') {\n                            opts.aggregateFunc = options.aggregateFunc;\n                            opts.multiFieldNames = options.fields;\n                        } else {\n                            opts.aggregateFunc = outerArgs.aggregateFunc;\n                            opts.multiFieldNames = innerArgs;\n                        }\n\n                        for (var ai = 0; ai < opts.multiFieldNames.length; ai++) {\n                            opts.fieldNames.push(self.getCaptionName(opts.multiFieldNames[ai]));\n                        }\n                    } else {\n                        opts.aggregateFunc = options;\n                        opts.fieldNames.push(outerArgs.datafieldname);\n                    }\n\n                    if (opts.aggregateFunc) {\n                        opts.aggregateFunc = aggregation.toAggregateFunc(opts.aggregateFunc);\n                    }\n\n                    return opts;\n                };\n\n                this.setup = function(parameters) {\n                    var rowFields = self.source.config.rowFields;\n                    var colFields = self.source.config.columnFields;\n                    var datafields = self.source.config.dataFields;\n                    var fIndex;\n\n                    // row fields setup\n                    for (fIndex = 0; fIndex < rowFields.length; fIndex++) {\n                        self.slice(rowFields[fIndex], axe.Type.ROWS, rowFields.length - fIndex);\n                    }\n\n                    // column fields setup\n                    for (fIndex = 0; fIndex < colFields.length; fIndex++) {\n                        self.slice(colFields[fIndex], axe.Type.COLUMNS, colFields.length - fIndex);\n                    }\n\n                    // data fields setup\n                    for (fIndex = 0; fIndex < datafields.length; fIndex++) {\n                        var df = datafields[fIndex];\n                        var dfname = df.name;\n                        var dfcaption = df.caption || dfname;\n\n                        self.query[dfname] = self.query[dfcaption] = self.measureFunc(dfname);\n                    }\n\n                    if (parameters) {\n                        for (var param in parameters) {\n                            if (parameters.hasOwnProperty(param)) {\n                                self.query[param](parameters[param]);\n                            }\n                        }\n                    }\n\n                    self.setDefaultAggFunctions();\n\n                    return self.query;\n                };\n\n                this.slice = function(field, axetype, depth) {\n                    self.query[field.name] = self.query[field.caption || field.name] = function(val) {\n                        var f = {\n                            name: field.name,\n                            val: val,\n                            depth: depth\n                        };\n                        (self.filters[axetype] = self.filters[axetype] || []).push(f);\n                        return self.query;\n                    };\n                };\n\n                function filterDimensions(upperDims, filter) {\n                    return function(dim) {\n                        return dim.value === filter.val &&\n                            (!upperDims || upperDims.some(\n                                function(upperDim) {\n                                    var parent = dim.parent;\n                                    if (parent) {\n                                        while (parent.depth < upperDim.depth) {\n                                            parent = parent.parent;\n                                        }\n                                    }\n                                    return parent === upperDim;\n                                }));\n                    };\n                }\n\n                this.applyFilters = function(axetype) {\n                    if (self.filters[axetype]) {\n                        var sortedFilters = self.filters[axetype].sort(function(f1, f2) {\n                            return f2.depth - f1.depth;\n                        });\n\n                        var currAxe = self.source[axetype === axe.Type.ROWS ? 'rows' : 'columns'];\n                        var filterIndex = 0;\n                        var filtered = null;\n                        while (filterIndex < sortedFilters.length) {\n                            var filter = sortedFilters[filterIndex];\n                            filtered = currAxe.dimensionsByDepth[filter.depth]\n                                .filter(filterDimensions(filtered, filter));\n                            filterIndex++;\n                        }\n                        return filtered;\n                    }\n                    return null;\n                };\n\n                this.compute = function(options) {\n                    var rowdims = self.applyFilters(axe.Type.ROWS) || [self.source.rows.root];\n                    var coldims = self.applyFilters(axe.Type.COLUMNS) || [self.source.columns.root];\n\n                    var aggs;\n\n                    if (rowdims.length === 1 && coldims.length === 1) {\n                        aggs = {};\n                        for (var ai = 0; ai < options.fieldNames.length; ai++) {\n                            aggs[options.fieldNames[ai]] = self.source.getData(options.fieldNames[ai], rowdims[0], coldims[0], options.aggregateFunc);\n                        }\n                    } else {\n                        var rowIndexes = [];\n                        var colIndexes = [];\n\n                        for (var rdi = 0; rdi < rowdims.length; rdi++) {\n                            rowIndexes = rowIndexes.concat(rowdims[rdi].getRowIndexes());\n                        }\n                        for (var cdi = 0; cdi < coldims.length; cdi++) {\n                            colIndexes = colIndexes.concat(coldims[cdi].getRowIndexes());\n                        }\n\n                        aggs = self.source.calcAggregation(rowIndexes, colIndexes, options.fieldNames, options.aggregateFunc);\n                    }\n\n                    return aggs;\n                };\n            };\n\n            var arrayQuery = function(array) {\n\n                queryBase.call(this, array, {}, []);\n\n                var self = this;\n                var captionToName = {};\n\n                this.setCaptionName = function(caption, name) {\n                    captionToName[caption || name] = name;\n                };\n\n                this.getCaptionName = function(caption) {\n                    return captionToName[caption] || caption;\n                };\n\n                this.cleanOptions = function(options, innerArgs, outerArgs) {\n                    var opts = {\n                        fieldNames: []\n                    };\n\n                    if (outerArgs.multi === true) {\n                        if (options && typeof options === 'object') {\n                            opts.aggregateFunc = options.aggregateFunc;\n                            opts.multiFieldNames = options.fields;\n                        } else {\n                            opts.aggregateFunc = outerArgs.aggregateFunc;\n                            opts.multiFieldNames = innerArgs;\n                        }\n\n                        for (var ai = 0; ai < opts.multiFieldNames.length; ai++) {\n                            opts.fieldNames.push(self.getCaptionName(opts.multiFieldNames[ai]));\n                        }\n                    } else {\n                        opts.aggregateFunc = options || outerArgs.aggregateFunc;\n                        opts.fieldNames.push(outerArgs.datafieldname);\n                    }\n\n                    return opts;\n                };\n\n                this.setup = function(fieldsConfig) {\n\n                    self.query.slice = function(field, val) {\n                        var f = {\n                            name: field,\n                            val: val\n                        };\n                        self.filters.push(f);\n                        return self.query;\n                    };\n\n                    if (fieldsConfig) {\n\n                        var fieldNames = utils.ownProperties(fieldsConfig);\n\n                        for (var fi = 0; fi < fieldNames.length; fi++) {\n                            var fname = fieldNames[fi];\n                            var f = fieldsConfig[fname];\n                            var fcaption = f.caption || f.name;\n                            f.name = fname;\n\n                            self.setCaptionName(fcaption, fname);\n\n                            if (f.toAggregate) {\n                                self.query[fname] = self.query[fcaption] = self.measureFunc(fname, false, f.aggregateFunc);\n                            } else {\n                                self.slice(f);\n                            }\n                        }\n                    }\n\n                    self.setDefaultAggFunctions(fieldsConfig);\n\n                    return self.query;\n                };\n\n                this.slice = function(field) {\n                    self.query[field.name] = self.query[field.caption || field.name] = function(val) {\n                        return self.query.slice(field.name, val);\n                    };\n                };\n\n                this.applyFilters = function() {\n                    var rowIndexes = [];\n\n                    for (var i = 0; i < self.source.length; i++) {\n                        var row = self.source[i];\n                        var include = true;\n                        for (var j = 0; j < self.filters.length; j++) {\n                            var filter = self.filters[j];\n                            if (row[filter.name] !== filter.val) {\n                                include = false;\n                                break;\n                            }\n                        }\n                        if (include) {\n                            rowIndexes.push(i);\n                        }\n                    }\n\n                    return rowIndexes;\n                };\n\n                this.compute = function(options, fieldsConfig, multi) {\n                    var rowIndexes = self.applyFilters();\n\n                    var aggs = {};\n\n                    for (var ai = 0; ai < options.fieldNames.length; ai++) {\n                        var datafield = options.fieldNames[ai];\n                        var aggFunc = aggregation.toAggregateFunc(\n                            multi === true ?\n                            options.aggregateFunc || (fieldsConfig && fieldsConfig[datafield] ?\n                                fieldsConfig[datafield].aggregateFunc :\n                                undefined) :\n                            options.aggregateFunc);\n\n                        aggs[datafield] = aggFunc(datafield, rowIndexes || 'all', self.source, rowIndexes, null);\n                    }\n\n                    return aggs;\n                };\n            };\n\n            module.exports = function(source, fieldsConfig) {\n                if (utils.isArray(source)) {\n                    return new arrayQuery(source).setup(fieldsConfig);\n                } else {\n                    // assume it's a pgrid\n                    return function(parameters) {\n                        return new pgridQuery(source).setup(parameters);\n                    };\n                }\n            };\n\n        }, {\n            \"./orb.aggregation\": 2,\n            \"./orb.axe\": 3,\n            \"./orb.utils\": 18\n        }],\n        10: [function(_dereq_, module, exports) {\n\n\n\n\n\n\n            module.exports = function() {\n                var states = {};\n\n                this.set = function(key, state) {\n                    states[key] = state;\n                };\n\n                this.get = function(key) {\n                    return states[key];\n                };\n            };\n        }, {}],\n        11: [function(_dereq_, module, exports) {\n\n\n\n\n\n            module.exports = (function() {\n\n                var currentTheme = 'blue';\n                var themeManager = {};\n\n                function isBootstrap() {\n                    return currentTheme === 'bootstrap';\n                }\n\n                themeManager.themes = {\n                    red: '#C72C48',\n                    blue: '#5bc0de',\n                    green: '#3fb618',\n                    orange: '#df691a',\n                    flower: '#A74AC7',\n                    gray: '#808080',\n                    black: '#000000',\n                    white: '#FFFFFF'\n                };\n\n                themeManager.current = function(newTheme) {\n                    if (newTheme) {\n                        currentTheme = themeManager.validateTheme(newTheme);\n                    }\n\n                    return currentTheme;\n                };\n\n                themeManager.validateTheme = function(themeName) {\n                    themeName = (themeName || '').toString().trim();\n                    if (!themeManager.themes[themeName] && themeName !== 'bootstrap') {\n                        return 'blue';\n                    } else {\n                        return themeName;\n                    }\n                };\n\n                themeManager.getPivotClasses = function() {\n                    return {\n                        container: 'orb-container orb-' + currentTheme,\n                        table: 'orb' + (isBootstrap() ? ' table' : '')\n                    };\n                };\n\n                themeManager.getButtonClasses = function() {\n                    return {\n                        pivotButton: 'fld-btn' + (isBootstrap() ? ' btn btn-default btn-xs' : ''),\n                        orbButton: 'orb-btn' + (isBootstrap() ? ' btn btn-default btn-xs' : ''),\n                        scrollBar: isBootstrap() ? ' btn btn-default btn-xs' : ''\n                    };\n                };\n\n                themeManager.getFilterClasses = function() {\n                    return {\n                        container: 'orb-' + currentTheme + ' orb fltr-cntnr'\n                    };\n                };\n\n                themeManager.getGridClasses = function() {\n                    return {\n                        table: isBootstrap() ? 'table table-condensed' : 'orb-table'\n                    };\n                };\n\n                themeManager.getDialogClasses = function(visible) {\n                    var classes = {\n                        overlay: 'orb-overlay orb-overlay-' + (visible ? 'visible' : 'hidden') + ' orb-' + currentTheme,\n                        dialog: 'orb-dialog',\n                        content: '',\n                        header: 'orb-dialog-header',\n                        title: '',\n                        body: 'orb-dialog-body'\n                    };\n\n                    if (isBootstrap()) {\n                        classes.overlay += ' modal';\n                        classes.dialog += ' modal-dialog';\n                        classes.content = 'modal-content';\n                        classes.header += ' modal-header';\n                        classes.title = 'modal-title';\n                        classes.body += ' modal-body';\n                    }\n                    return classes;\n                };\n\n                var utils = themeManager.utils = {\n                    hexToRgb: function(hex) {\n                        var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n                        return result ? {\n                            r: parseInt(result[1], 16),\n                            g: parseInt(result[2], 16),\n                            b: parseInt(result[3], 16)\n                        } : null;\n                    },\n                    rgbaToHex: function(rgba) {\n                        var matches = rgba.match(/rgba\\((\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+(?:\\.\\d+)?)\\s*\\)/);\n                        if (matches) {\n                            var alpha = parseFloat(matches[4]);\n                            return '#' +\n                                utils.applyAlphaAndToHex(matches[1], alpha) +\n                                utils.applyAlphaAndToHex(matches[2], alpha) +\n                                utils.applyAlphaAndToHex(matches[3], alpha);\n                        }\n                        return null;\n                    },\n                    rgbaToHexA: function(rgba) {\n                        var matches = rgba.match(/rgba\\((\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+(?:\\.\\d+)?)\\s*\\)/);\n                        if (matches) {\n                            var alpha = parseFloat(matches[4]);\n                            return '#' +\n                                utils.applyAlphaAndToHex(0, alpha) +\n                                utils.applyAlphaAndToHex(matches[1], 1) +\n                                utils.applyAlphaAndToHex(matches[2], 1) +\n                                utils.applyAlphaAndToHex(matches[3], 1);\n                        }\n                        return null;\n                    },\n                    applyAlphaAndToHex: function(value, alpha) {\n                        return (Math.floor(alpha * parseInt(value) + (1 - alpha) * 255) + 256).toString(16).substr(1, 2);\n                    },\n                    fadeoutColor: function(color, alpha) {\n                        color = utils.hexToRgb(color);\n                        return '#' +\n                            utils.applyAlphaAndToHex(color.r, alpha) +\n                            utils.applyAlphaAndToHex(color.g, alpha) +\n                            utils.applyAlphaAndToHex(color.b, alpha);\n                    }\n                };\n\n                return themeManager;\n            }());\n\n        }, {}],\n        12: [function(_dereq_, module, exports) {\n\n\n\n\n\n\n\n            var axe = _dereq_('./orb.axe');\n            var uiheaders = _dereq_('./orb.ui.header');\n\n\n            module.exports = function(axeModel) {\n\n                var self = this;\n\n\n                this.axe = axeModel;\n\n\n                this.headers = [];\n\n                this.dataFieldsCount = function() {\n                    return (self.axe.pgrid.config.dataHeadersLocation === 'columns' && self.axe.type === axe.Type.COLUMNS) ||\n                        (self.axe.pgrid.config.dataHeadersLocation === 'rows' && self.axe.type === axe.Type.ROWS) ?\n                        self.axe.pgrid.config.dataFieldsCount :\n                        1;\n                };\n\n                this.isMultiDataFields = function() {\n                    return self.dataFieldsCount() > 1;\n                };\n\n                this.toggleFieldExpansion = function(field, newState) {\n                    var toToggle = [];\n                    var allExpanded = true;\n                    var hIndex;\n\n                    for (var i = 0; i < this.headers.length; i++) {\n                        for (hIndex = 0; hIndex < this.headers[i].length; hIndex++) {\n                            var header = this.headers[i][hIndex];\n                            if (header.type === uiheaders.HeaderType.SUB_TOTAL && (field == null || header.dim.field.name == field.name)) {\n                                toToggle.push(header);\n                                allExpanded = allExpanded && header.expanded;\n                            }\n                        }\n                    }\n\n                    if (newState !== undefined) {\n                        allExpanded = !newState;\n                    }\n\n                    if (toToggle.length > 0) {\n                        for (hIndex = 0; hIndex < toToggle.length; hIndex++) {\n                            if (allExpanded) {\n                                toToggle[hIndex].collapse();\n                            } else {\n                                toToggle[hIndex].expand();\n                            }\n                        }\n                        return true;\n                    }\n\n                    return false;\n                };\n            };\n\n        }, {\n            \"./orb.axe\": 3,\n            \"./orb.ui.header\": 14\n        }],\n        13: [function(_dereq_, module, exports) {\n\n\n\n\n\n\n\n            var axe = _dereq_('./orb.axe');\n            var axeUi = _dereq_('./orb.ui.axe');\n            var uiheaders = _dereq_('./orb.ui.header');\n\n\n            module.exports = function(columnsAxe) {\n\n                var self = this;\n\n                axeUi.call(self, columnsAxe);\n\n                this.leafsHeaders = null;\n\n                this.build = function() {\n                    self.headers = [];\n\n                    if (self.axe != null) {\n                        // Fill columns layout infos\n                        if (self.axe.root.values.length > 0 || self.axe.pgrid.config.grandTotal.columnsvisible) {\n                            for (var depth = self.axe.root.depth; depth > 1; depth--) {\n                                self.headers.push([]);\n                                getUiInfo(depth, self.headers);\n                            }\n\n                            if (self.axe.pgrid.config.grandTotal.columnsvisible) {\n                                // add grandtotal header\n                                (self.headers[0] = self.headers[0] || []).push(new uiheaders.header(axe.Type.COLUMNS, uiheaders.HeaderType.GRAND_TOTAL, self.axe.root, null, self.dataFieldsCount()));\n                            }\n                        }\n\n                        if (self.headers.length === 0) {\n                            self.headers.push([new uiheaders.header(axe.Type.COLUMNS, uiheaders.HeaderType.INNER, self.axe.root, null, self.dataFieldsCount())]);\n                        }\n\n                        // generate leafs headers\n                        generateLeafsHeaders();\n                    }\n                };\n\n                function generateLeafsHeaders() {\n\n                    var leafsHeaders = [];\n\n                    function pushsubtotal(pheader) {\n                        if (pheader && pheader.dim.field.subTotal.visible) {\n                            leafsHeaders.push(pheader.subtotalHeader);\n                        }\n                    }\n\n                    if (self.headers.length > 0) {\n                        // last headers row\n                        var infos = self.headers[self.headers.length - 1];\n                        var header = infos[0];\n\n                        if (header) {\n                            var currparent,\n                                prevpar = header.parent;\n\n                            for (var i = 0; i < infos.length; i++) {\n                                header = infos[i];\n                                currparent = header.parent;\n                                // if current header parent is different than previous header parent,\n                                // add previous parent\n                                if (currparent != prevpar) {\n                                    pushsubtotal(prevpar);\n                                    if (currparent != null) {\n                                        // walk up parent hierarchy and add grand parents if different \n                                        // than current header grand parents\n                                        var grandpar = currparent.parent;\n                                        var prevgrandpar = prevpar ? prevpar.parent : null;\n                                        while (grandpar != prevgrandpar && prevgrandpar != null) {\n                                            pushsubtotal(prevgrandpar);\n                                            grandpar = grandpar ? grandpar.parent : null;\n                                            prevgrandpar = prevgrandpar ? prevgrandpar.parent : null;\n                                        }\n                                    }\n                                    // update previous parent variable\n                                    prevpar = currparent;\n                                }\n                                // push current header\n                                leafsHeaders.push(infos[i]);\n\n                                // if it's the last header, add all of its parents up to the top\n                                if (i === infos.length - 1) {\n                                    while (prevpar != null) {\n                                        pushsubtotal(prevpar);\n                                        prevpar = prevpar.parent;\n                                    }\n                                }\n                            }\n                            // grandtotal is visible for columns and if there is more than one dimension in this axe\n                            if (self.axe.pgrid.config.grandTotal.columnsvisible && self.axe.dimensionsCount > 1) {\n                                // push also grand total header\n                                leafsHeaders.push(self.headers[0][self.headers[0].length - 1]);\n                            }\n                        }\n                    }\n\n                    // add data headers if more than 1 data field and they willbe the leaf headers\n                    if (self.isMultiDataFields()) {\n                        self.leafsHeaders = [];\n                        for (var leafIndex = 0; leafIndex < leafsHeaders.length; leafIndex++) {\n                            for (var datafieldindex = 0; datafieldindex < self.dataFieldsCount(); datafieldindex++) {\n                                self.leafsHeaders.push(new uiheaders.dataHeader(self.axe.pgrid.config.dataFields[datafieldindex], leafsHeaders[leafIndex]));\n                            }\n                        }\n                        self.headers.push(self.leafsHeaders);\n                    } else {\n                        self.leafsHeaders = leafsHeaders;\n                    }\n                }\n\n                this.build();\n\n\n                function getUiInfo(depth, headers) {\n\n                    var infos = headers[headers.length - 1];\n                    var parents = self.axe.root.depth === depth ? [null] :\n                        headers[self.axe.root.depth - depth - 1].filter(function(p) {\n                            return p.type !== uiheaders.HeaderType.SUB_TOTAL;\n                        });\n\n                    for (var pi = 0; pi < parents.length; pi++) {\n\n                        var parent = parents[pi];\n                        var parentDim = parent == null ? self.axe.root : parent.dim;\n\n                        for (var di = 0; di < parentDim.values.length; di++) {\n\n                            var subvalue = parentDim.values[di];\n                            var subdim = parentDim.subdimvals[subvalue];\n\n                            var subtotalHeader;\n                            if (!subdim.isLeaf && subdim.field.subTotal.visible) {\n                                subtotalHeader = new uiheaders.header(axe.Type.COLUMNS, uiheaders.HeaderType.SUB_TOTAL, subdim, parent, self.dataFieldsCount());\n                            } else {\n                                subtotalHeader = null;\n                            }\n\n                            var header = new uiheaders.header(axe.Type.COLUMNS, null, subdim, parent, self.dataFieldsCount(), subtotalHeader);\n                            infos.push(header);\n\n                            if (!subdim.isLeaf && subdim.field.subTotal.visible) {\n                                infos.push(subtotalHeader);\n                            }\n                        }\n                    }\n                }\n            };\n\n        }, {\n            \"./orb.axe\": 3,\n            \"./orb.ui.axe\": 12,\n            \"./orb.ui.header\": 14\n        }],\n        14: [function(_dereq_, module, exports) {\n\n\n\n\n\n\n\n\n            var axe = _dereq_('./orb.axe');\n            var state = new(_dereq_('./orb.state'))();\n\n            var HeaderType = module.exports.HeaderType = {\n                EMPTY: 1,\n                DATA_HEADER: 2,\n                DATA_VALUE: 3,\n                FIELD_BUTTON: 4,\n                INNER: 5,\n                WRAPPER: 6,\n                SUB_TOTAL: 7,\n                GRAND_TOTAL: 8,\n                getHeaderClass: function(headerType, axetype) {\n                    var cssclass = axetype === axe.Type.ROWS ? 'header-row' : (axetype === axe.Type.COLUMNS ? 'header-col' : '');\n                    switch (headerType) {\n                        case HeaderType.EMPTY:\n                        case HeaderType.FIELD_BUTTON:\n                            cssclass = 'empty';\n                            break;\n                        case HeaderType.INNER:\n                            cssclass = 'header ' + cssclass;\n                            break;\n                        case HeaderType.WRAPPER:\n                            cssclass = 'header ' + cssclass;\n                            break;\n                        case HeaderType.SUB_TOTAL:\n                            cssclass = 'header header-st ' + cssclass;\n                            break;\n                        case HeaderType.GRAND_TOTAL:\n                            cssclass = 'header header-gt ' + cssclass;\n                            break;\n                    }\n\n                    return cssclass;\n                },\n                getCellClass: function(rowHeaderType, colHeaderType) {\n                    var cssclass = '';\n                    switch (rowHeaderType) {\n                        case HeaderType.GRAND_TOTAL:\n                            cssclass = 'cell-gt';\n                            break;\n                        case HeaderType.SUB_TOTAL:\n                            if (colHeaderType === HeaderType.GRAND_TOTAL) {\n                                cssclass = 'cell-gt';\n                            } else {\n                                cssclass = 'cell-st';\n                            }\n                            break;\n                        default:\n                            if (colHeaderType === HeaderType.GRAND_TOTAL) {\n                                cssclass = 'cell-gt';\n                            } else if (colHeaderType === HeaderType.SUB_TOTAL) {\n                                cssclass = 'cell-st';\n                            } else {\n                                cssclass = '';\n                            }\n                    }\n                    return cssclass;\n                }\n            };\n\n            function CellBase(options) {\n\n                this.axetype = options.axetype;\n\n                this.type = options.type;\n\n                this.template = options.template;\n\n                this.value = options.value;\n\n                this.expanded = true;\n\n                this.cssclass = options.cssclass;\n\n                this.hspan = options.hspan || function() {\n                    return 1;\n                };\n\n                this.vspan = options.vspan || function() {\n                    return 1;\n                };\n\n                this.visible = options.isvisible || function() {\n                    return true;\n                };\n\n                this.key = this.axetype + this.type + this.value;\n                this.getState = function() {\n                    return state.get(this.key);\n                };\n                this.setState = function(newState) {\n                    state.set(this.key, newState);\n                };\n            }\n\n\n            module.exports.header = function(axetype, headerType, dim, parent, datafieldscount, subtotalHeader) {\n\n                var self = this;\n\n                var hspan;\n                var vspan;\n                var value;\n\n                var isRowsAxe = axetype === axe.Type.ROWS;\n                headerType = headerType || (dim.depth === 1 ? HeaderType.INNER : HeaderType.WRAPPER);\n\n                switch (headerType) {\n                    case HeaderType.GRAND_TOTAL:\n                        value = 'Grand Total';\n                        hspan = isRowsAxe ? dim.depth - 1 || 1 : datafieldscount;\n                        vspan = isRowsAxe ? datafieldscount : dim.depth - 1 || 1;\n                        break;\n                    case HeaderType.SUB_TOTAL:\n                        value = dim.value;\n                        hspan = isRowsAxe ? dim.depth : datafieldscount;\n                        vspan = isRowsAxe ? datafieldscount : dim.depth;\n                        break;\n                    default:\n                        value = dim.value;\n                        hspan = isRowsAxe ? 1 : null;\n                        vspan = isRowsAxe ? null : 1;\n                        break;\n                }\n\n                CellBase.call(this, {\n                    axetype: axetype,\n                    type: headerType,\n                    template: isRowsAxe ? 'cell-template-row-header' : 'cell-template-column-header',\n                    value: value,\n                    cssclass: HeaderType.getHeaderClass(headerType, axetype),\n                    hspan: hspan != null ? function() {\n                        return hspan;\n                    } : calcSpan,\n                    vspan: vspan != null ? function() {\n                        return vspan;\n                    } : calcSpan,\n                    isvisible: isParentExpanded\n                });\n\n                this.subtotalHeader = subtotalHeader;\n                this.parent = parent;\n                this.subheaders = [];\n                this.dim = dim;\n                this.expanded = this.getState() ? this.getState().expanded : (headerType !== HeaderType.SUB_TOTAL || !dim.field.subTotal.collapsed);\n\n                this.expand = function() {\n                    self.expanded = true;\n                    this.setState({\n                        expanded: self.expanded\n                    });\n                };\n                this.collapse = function() {\n                    self.expanded = false;\n                    this.setState({\n                        expanded: self.expanded\n                    });\n                };\n\n                if (parent != null) {\n                    parent.subheaders.push(this);\n                }\n\n                function isParentExpanded() {\n                    if (self.type === HeaderType.SUB_TOTAL) {\n                        var hparent = self.parent;\n                        while (hparent != null) {\n                            if (hparent.subtotalHeader && !hparent.subtotalHeader.expanded) {\n                                return false;\n                            }\n                            hparent = hparent.parent;\n                        }\n                        return true;\n                    } else {\n\n                        var isexpanded = self.dim.isRoot || self.dim.isLeaf || !self.dim.field.subTotal.visible || self.subtotalHeader.expanded;\n                        if (!isexpanded) {\n                            return false;\n                        }\n\n                        var par = self.parent;\n                        while (par != null && (!par.dim.field.subTotal.visible || (par.subtotalHeader != null && par.subtotalHeader.expanded))) {\n                            par = par.parent;\n                        }\n                        return par == null || par.subtotalHeader == null ? isexpanded : par.subtotalHeader.expanded;\n                    }\n                }\n\n                function calcSpan(ignoreVisibility) {\n                    var tspan = 0;\n                    var subSpan;\n                    var addone = false;\n\n                    if (isRowsAxe || ignoreVisibility || self.visible()) {\n                        if (!self.dim.isLeaf) {\n                            // subdimvals 'own' properties are the set of values for this dimension\n                            if (self.subheaders.length > 0) {\n                                for (var i = 0; i < self.subheaders.length; i++) {\n                                    var subheader = self.subheaders[i];\n                                    // if its not an array\n                                    if (!subheader.dim.isLeaf) {\n                                        subSpan = isRowsAxe ? subheader.vspan() : subheader.hspan();\n                                        tspan += subSpan;\n                                        if (i === 0 && (subSpan === 0)) {\n                                            addone = true;\n                                        }\n                                    } else {\n                                        tspan += datafieldscount;\n                                    }\n                                }\n                            } else {\n                                tspan += datafieldscount;\n                            }\n                        } else {\n                            return datafieldscount;\n                        }\n                        return tspan + (addone ? 1 : 0);\n                    }\n                    return tspan;\n                }\n            };\n\n            module.exports.dataHeader = function(datafield, parent) {\n\n                CellBase.call(this, {\n                    axetype: null,\n                    type: HeaderType.DATA_HEADER,\n                    template: 'cell-template-dataheader',\n                    value: datafield,\n                    cssclass: HeaderType.getHeaderClass(parent.type, parent.axetype),\n                    isvisible: parent.visible\n                });\n\n                this.parent = parent;\n            };\n\n            module.exports.dataCell = function(pgrid, isvisible, rowinfo, colinfo) {\n\n                this.rowDimension = rowinfo.type === HeaderType.DATA_HEADER ? rowinfo.parent.dim : rowinfo.dim;\n                this.columnDimension = colinfo.type === HeaderType.DATA_HEADER ? colinfo.parent.dim : colinfo.dim;\n                this.rowType = rowinfo.type === HeaderType.DATA_HEADER ? rowinfo.parent.type : rowinfo.type;\n                this.colType = colinfo.type === HeaderType.DATA_HEADER ? colinfo.parent.type : colinfo.type;\n\n                this.datafield = pgrid.config.dataFieldsCount > 1 ?\n                    (pgrid.config.dataHeadersLocation === 'rows' ?\n                        rowinfo.value :\n                        colinfo.value) :\n                    pgrid.config.dataFields[0];\n\n\n                CellBase.call(this, {\n                    axetype: null,\n                    type: HeaderType.DATA_VALUE,\n                    template: 'cell-template-datavalue',\n                    value: pgrid.getData(this.datafield ? this.datafield.name : null, this.rowDimension, this.columnDimension),\n                    cssclass: 'cell ' + HeaderType.getCellClass(this.rowType, this.colType),\n                    isvisible: isvisible\n                });\n            };\n\n            module.exports.buttonCell = function(field) {\n\n                CellBase.call(this, {\n                    axetype: null,\n                    type: HeaderType.FIELD_BUTTON,\n                    template: 'cell-template-fieldbutton',\n                    value: field,\n                    cssclass: HeaderType.getHeaderClass(HeaderType.FIELD_BUTTON)\n                });\n            };\n\n            module.exports.emptyCell = function(hspan, vspan) {\n\n                CellBase.call(this, {\n                    axetype: null,\n                    type: HeaderType.EMPTY,\n                    template: 'cell-template-empty',\n                    value: null,\n                    cssclass: HeaderType.getHeaderClass(HeaderType.EMPTY),\n                    hspan: function() {\n                        return hspan;\n                    },\n                    vspan: function() {\n                        return vspan;\n                    }\n                });\n            };\n\n        }, {\n            \"./orb.axe\": 3,\n            \"./orb.state\": 10\n        }],\n        15: [function(_dereq_, module, exports) {\n\n\n\n\n\n\n\n            var axe = _dereq_('./orb.axe');\n            var pgrid = _dereq_('./orb.pgrid');\n            var uiheaders = _dereq_('./orb.ui.header');\n            var uirows = _dereq_('./orb.ui.rows');\n            var uicols = _dereq_('./orb.ui.cols');\n            var domUtils = _dereq_('./orb.utils.dom');\n            var OrbReactComps = _dereq_('./react/orb.react.compiled');\n\n            module.exports = function(config) {\n\n                var self = this;\n                var renderElement;\n                var pivotComponent;\n                var dialog = OrbReactComps.Dialog.create();\n\n\n                this.pgrid = new pgrid(config);\n\n\n                this.rows = null;\n\n                this.columns = null;\n\n\n                this.dataRows = [];\n\n                this.layout = {\n                    rowHeaders: {\n\n                        width: null,\n\n                        height: null\n                    },\n                    columnHeaders: {\n\n                        width: null,\n\n                        height: null\n                    },\n                    pivotTable: {\n\n                        width: null,\n\n                        height: null\n                    }\n                };\n\n                this.sort = function(axetype, field) {\n                    if (axetype === axe.Type.ROWS) {\n                        self.pgrid.rows.sort(field);\n                    } else if (axetype === axe.Type.COLUMNS) {\n                        self.pgrid.columns.sort(field);\n                    } else {\n                        return;\n                    }\n\n                    buildUi();\n                };\n\n                this.refreshData = function(data) {\n                    self.pgrid.refreshData(data);\n                    buildUi();\n                    pivotComponent.setProps({});\n                };\n\n                this.applyFilter = function(fieldname, operator, term, staticValue, excludeStatic) {\n                    self.pgrid.applyFilter(fieldname, operator, term, staticValue, excludeStatic);\n                    buildUi();\n                };\n\n                this.moveField = function(field, oldAxeType, newAxeType, position) {\n                    if (self.pgrid.moveField(field, oldAxeType, newAxeType, position)) {\n                        buildUi();\n                        return true;\n                    }\n                    return false;\n                };\n\n                this.toggleFieldExpansion = function(axetype, field, newState) {\n                    if (axetype === axe.Type.ROWS) {\n                        return self.rows.toggleFieldExpansion(field, newState);\n                    } else if (axetype === axe.Type.COLUMNS) {\n                        return self.columns.toggleFieldExpansion(field, newState);\n                    }\n                    return false;\n                };\n\n                this.toggleSubtotals = function(axetype) {\n                    if (self.pgrid.config.toggleSubtotals(axetype)) {\n                        buildUi();\n                        return true;\n                    }\n                    return false;\n                };\n\n                this.areSubtotalsVisible = function(axetype) {\n                    return self.pgrid.config.areSubtotalsVisible(axetype);\n                };\n\n                this.toggleGrandtotal = function(axetype) {\n                    if (self.pgrid.config.toggleGrandtotal(axetype)) {\n                        buildUi();\n                        return true;\n                    }\n                    return false;\n                };\n\n                this.isGrandtotalVisible = function(axetype) {\n                    return self.pgrid.config.isGrandtotalVisible(axetype);\n                };\n\n                this.changeTheme = function(newTheme) {\n                    pivotComponent.changeTheme(newTheme);\n                };\n\n                this.render = function(element) {\n                    renderElement = element;\n                    if (renderElement) {\n                        var pivotTableFactory = React.createFactory(\n                            self.pgrid.config.chartMode.enabled ?\n                            OrbReactComps.PivotChart :\n                            OrbReactComps.PivotTable);\n                        var pivottable = pivotTableFactory({\n                            pgridwidget: self\n                        });\n\n                        pivotComponent = ReactDOM.render(pivottable, element);\n                    }\n                };\n\n                this.drilldown = function(dataCell, pivotId) {\n                    if (dataCell) {\n                        var colIndexes = dataCell.columnDimension.getRowIndexes();\n                        var data = dataCell.rowDimension.getRowIndexes().filter(function(index) {\n                            return colIndexes.indexOf(index) >= 0;\n                        }).map(function(index) {\n                            return self.pgrid.filteredDataSource[index];\n                        });\n\n                        var title;\n                        if (dataCell.rowType === uiheaders.HeaderType.GRAND_TOTAL && dataCell.colType === uiheaders.HeaderType.GRAND_TOTAL) {\n                            title = 'Grand total';\n                        } else {\n                            if (dataCell.rowType === uiheaders.HeaderType.GRAND_TOTAL) {\n                                title = dataCell.columnDimension.value + '/Grand total ';\n                            } else if (dataCell.colType === uiheaders.HeaderType.GRAND_TOTAL) {\n                                title = dataCell.rowDimension.value + '/Grand total ';\n                            } else {\n                                title = dataCell.rowDimension.value + '/' + dataCell.columnDimension.value;\n                            }\n                        }\n\n                        dialog.show({\n                            title: title,\n                            comp: {\n                                type: OrbReactComps.Grid,\n                                props: {\n                                    headers: self.pgrid.config.getDataSourceFieldCaptions(),\n                                    data: data,\n                                    theme: self.pgrid.config.theme\n                                }\n                            },\n                            theme: self.pgrid.config.theme,\n                            style: pivotComponent.fontStyle\n                        });\n                    }\n                };\n\n                buildUi();\n\n                function buildUi() {\n\n                    // build row and column headers\n                    self.rows = new uirows(self.pgrid.rows);\n                    self.columns = new uicols(self.pgrid.columns);\n\n                    var rowsHeaders = self.rows.headers;\n                    var columnsLeafHeaders = self.columns.leafsHeaders;\n\n                    // set control layout infos\t\t\n                    self.layout = {\n                        rowHeaders: {\n                            width: (self.pgrid.rows.fields.length || 1) +\n                                (self.pgrid.config.dataHeadersLocation === 'rows' && self.pgrid.config.dataFieldsCount > 1 ? 1 : 0),\n                            height: rowsHeaders.length\n                        },\n                        columnHeaders: {\n                            width: self.columns.leafsHeaders.length,\n                            height: (self.pgrid.columns.fields.length || 1) +\n                                (self.pgrid.config.dataHeadersLocation === 'columns' && self.pgrid.config.dataFieldsCount > 1 ? 1 : 0)\n                        }\n                    };\n\n                    self.layout.pivotTable = {\n                        width: self.layout.rowHeaders.width + self.layout.columnHeaders.width,\n                        height: self.layout.rowHeaders.height + self.layout.columnHeaders.height\n                    };\n\n                    var dataRows = [];\n                    var arr;\n\n                    function createVisibleFunc(rowvisible, colvisible) {\n                        return function() {\n                            return rowvisible() && colvisible();\n                        };\n                    }\n                    if (rowsHeaders.length > 0) {\n                        for (var ri = 0; ri < rowsHeaders.length; ri++) {\n                            var rowHeadersRow = rowsHeaders[ri];\n                            var rowLeafHeader = rowHeadersRow[rowHeadersRow.length - 1];\n\n                            arr = [];\n                            for (var colHeaderIndex = 0; colHeaderIndex < columnsLeafHeaders.length; colHeaderIndex++) {\n                                var columnLeafHeader = columnsLeafHeaders[colHeaderIndex];\n                                var isvisible = createVisibleFunc(rowLeafHeader.visible, columnLeafHeader.visible);\n                                arr[colHeaderIndex] = new uiheaders.dataCell(self.pgrid, isvisible, rowLeafHeader, columnLeafHeader);\n                            }\n                            dataRows.push(arr);\n                        }\n                    }\n                    self.dataRows = dataRows;\n                }\n            };\n\n        }, {\n            \"./orb.axe\": 3,\n            \"./orb.pgrid\": 8,\n            \"./orb.ui.cols\": 13,\n            \"./orb.ui.header\": 14,\n            \"./orb.ui.rows\": 16,\n            \"./orb.utils.dom\": 17,\n            \"./react/orb.react.compiled\": 19\n        }],\n        16: [function(_dereq_, module, exports) {\n\n\n\n\n\n\n\n            var axe = _dereq_('./orb.axe');\n            var axeUi = _dereq_('./orb.ui.axe');\n            var uiheaders = _dereq_('./orb.ui.header');\n\n\n            module.exports = function(rowsAxe) {\n\n                var self = this;\n\n                axeUi.call(self, rowsAxe);\n\n                this.build = function() {\n                    var headers = [];\n                    var grandtotalHeader;\n\n                    if (self.axe != null) {\n                        if (self.axe.root.values.length > 0 || self.axe.pgrid.config.grandTotal.rowsvisible) {\n                            headers.push([]);\n\n                            // Fill Rows layout infos\n                            getUiInfo(headers, self.axe.root);\n\n                            if (self.axe.pgrid.config.grandTotal.rowsvisible) {\n                                var lastrow = headers[headers.length - 1];\n                                grandtotalHeader = new uiheaders.header(axe.Type.ROWS, uiheaders.HeaderType.GRAND_TOTAL, self.axe.root, null, self.dataFieldsCount());\n                                if (lastrow.length === 0) {\n                                    lastrow.push(grandtotalHeader);\n                                } else {\n                                    headers.push([grandtotalHeader]);\n                                }\n                            }\n                        }\n\n                        if (headers.length === 0) {\n                            headers.push([grandtotalHeader = new uiheaders.header(axe.Type.ROWS, uiheaders.HeaderType.INNER, self.axe.root, null, self.dataFieldsCount())]);\n                        }\n\n                        if (grandtotalHeader) {\n                            // add grand-total data headers if more than 1 data field and they will be the leaf headers\n                            addDataHeaders(headers, grandtotalHeader);\n                        }\n                    }\n                    self.headers = headers;\n                };\n\n                this.build();\n\n                function addDataHeaders(infos, parent) {\n                    if (self.isMultiDataFields()) {\n                        var lastInfosArray = infos[infos.length - 1];\n                        for (var datafieldindex = 0; datafieldindex < self.dataFieldsCount(); datafieldindex++) {\n                            lastInfosArray.push(new uiheaders.dataHeader(self.axe.pgrid.config.dataFields[datafieldindex], parent));\n                            if (datafieldindex < self.dataFieldsCount() - 1) {\n                                infos.push((lastInfosArray = []));\n                            }\n                        }\n                    }\n                }\n\n\n                function getUiInfo(infos, dimension) {\n                    if (dimension.values.length > 0) {\n\n                        var infosMaxIndex = infos.length - 1;\n                        var lastInfosArray = infos[infosMaxIndex];\n                        var parent = lastInfosArray.length > 0 ? lastInfosArray[lastInfosArray.length - 1] : null;\n\n                        for (var valIndex = 0; valIndex < dimension.values.length; valIndex++) {\n                            var subvalue = dimension.values[valIndex];\n                            var subdim = dimension.subdimvals[subvalue];\n\n                            var subTotalHeader;\n                            if (!subdim.isLeaf && subdim.field.subTotal.visible) {\n                                subTotalHeader = new uiheaders.header(axe.Type.ROWS, uiheaders.HeaderType.SUB_TOTAL, subdim, parent, self.dataFieldsCount());\n                            } else {\n                                subTotalHeader = null;\n                            }\n\n                            var newHeader = new uiheaders.header(axe.Type.ROWS, null, subdim, parent, self.dataFieldsCount(), subTotalHeader);\n\n                            if (valIndex > 0) {\n                                infos.push((lastInfosArray = []));\n                            }\n\n                            lastInfosArray.push(newHeader);\n\n                            if (!subdim.isLeaf) {\n                                getUiInfo(infos, subdim);\n                                if (subdim.field.subTotal.visible) {\n                                    infos.push([subTotalHeader]);\n\n                                    // add sub-total data headers if more than 1 data field and they will be the leaf headers\n                                    addDataHeaders(infos, subTotalHeader);\n                                }\n                            } else {\n                                // add data headers if more than 1 data field and they will be the leaf headers\n                                addDataHeaders(infos, newHeader);\n                            }\n                        }\n                    }\n                }\n            };\n\n        }, {\n            \"./orb.axe\": 3,\n            \"./orb.ui.axe\": 12,\n            \"./orb.ui.header\": 14\n        }],\n        17: [function(_dereq_, module, exports) {\n\n\n\n\n\n            module.exports.forEach = function(list, func, defStop) {\n                var ret;\n                if (list) {\n                    for (var i = 0, l = list.length; i < l; i++) {\n                        ret = func(list[i], i);\n                        if (ret !== undefined && defStop === true) {\n                            break;\n                        }\n                    }\n                }\n                return ret;\n            };\n\n            module.exports.removeClass = function(element, classname) {\n                if (element && classname) {\n                    while (element.className.indexOf(classname) >= 0) {\n                        element.className = element.className.replace(classname, '');\n                    }\n                }\n            };\n\n            module.exports.addClass = function(element, classname) {\n                if (element && classname) {\n                    if (element.className.indexOf(classname) < 0) {\n                        element.className += ' ' + classname;\n                    }\n                }\n            };\n\n            module.exports.getOffset = function(element) {\n                if (element) {\n                    var rect = element.getBoundingClientRect();\n                    return {\n                        x: rect.left,\n                        y: rect.top\n                    };\n                }\n                return {\n                    x: 0,\n                    y: 0\n                };\n            };\n\n            module.exports.getParentOffset = function(element) {\n                if (element) {\n                    var rect = element.getBoundingClientRect();\n                    var rectParent = element.parentNode != null ? element.parentNode.getBoundingClientRect() : {\n                        top: 0,\n                        left: 0\n                    };\n                    return {\n                        x: rect.left - rectParent.left,\n                        y: rect.top - rectParent.top\n                    };\n                }\n                return {\n                    x: 0,\n                    y: 0\n                };\n            };\n\n            module.exports.getSize = function(element) {\n                if (element) {\n                    var rect = element.getBoundingClientRect();\n                    return {\n                        width: rect.right - rect.left,\n                        height: rect.bottom - rect.top\n                    };\n                }\n                return {\n                    width: 0,\n                    height: 0\n                };\n            };\n\n            var reHyphenToUcase = /\\-(\\w)/g;\n\n            function replaceHyphenByUcase(val) {\n                return val.replace(reHyphenToUcase, function(m, m1) {\n                    return m1.toUpperCase();\n                });\n            }\n\n            module.exports.getStyle = function(element, styleProps, keepString) {\n                var values = [];\n                if (element && styleProps) {\n                    var currStyle, f, fixProp;\n                    if (element.currentStyle) {\n                        currStyle = element.currentStyle;\n                        f = function(prop) {\n                            return currStyle[prop];\n                        };\n                        fixProp = true;\n                    } else if (window && window.getComputedStyle) {\n                        currStyle = window.getComputedStyle(element, null);\n                        f = function(prop) {\n                            return currStyle.getPropertyValue(prop);\n                        };\n                    }\n\n                    for (var i = 0; i < styleProps.length; i++) {\n                        var val = f(fixProp ? replaceHyphenByUcase(styleProps[i]) : styleProps[i]);\n                        values.push(val && keepString !== true ? Math.ceil(parseFloat(val)) : val);\n                    }\n                }\n                return values;\n            };\n\n            module.exports.isVisible = function(element) {\n                if (element) {\n                    return element.style.display !== 'none' && (element.offsetWidth !== 0 || element.offsetHeight !== 0);\n                }\n                return false;\n            };\n\n            module.exports.updateTableColGroup = function(tableNode, widths) {\n                if (tableNode) {\n                    var colGroupNode = tableNode.firstChild;\n                    if (colGroupNode && colGroupNode.nodeName === 'COLGROUP') {\n                        tableNode.style.tableLayout = 'auto';\n                        tableNode.style.width = '';\n\n                        while (colGroupNode.firstChild) {\n                            colGroupNode.removeChild(colGroupNode.firstChild);\n                        }\n                        for (var i = 0; i < widths.length; i++) {\n                            var col = document.createElement('col');\n                            col.style.width = widths[i] + 'px';\n                            colGroupNode.appendChild(col);\n                        }\n                        tableNode.style.tableLayout = 'fixed';\n                    }\n                }\n            };\n        }, {}],\n        18: [function(_dereq_, module, exports) {\n            (function(global) {\n\n\n                module.exports = {\n\n                    ns: function(identifier, parent) {\n                        var parts = identifier.split('.');\n                        var i = 0;\n                        parent = parent || window;\n                        while (i < parts.length) {\n                            parent[parts[i]] = parent[parts[i]] || {};\n                            parent = parent[parts[i]];\n                            i++;\n                        }\n                        return parent;\n                    },\n\n                    ownProperties: function(obj) {\n                        var arr = [];\n                        for (var prop in obj) {\n                            if (obj.hasOwnProperty(prop)) {\n                                arr.push(prop);\n                            }\n                        }\n                        return arr;\n                    },\n\n                    isArray: function(obj) {\n                        return Object.prototype.toString.apply(obj) === '[object Array]';\n                    },\n\n                    isNumber: function(obj) {\n                        return Object.prototype.toString.apply(obj) === '[object Number]';\n                    },\n\n                    isDate: function(obj) {\n                        return Object.prototype.toString.apply(obj) === '[object Date]';\n                    },\n\n                    isString: function(obj) {\n                        return Object.prototype.toString.apply(obj) === '[object String]';\n                    },\n\n                    isRegExp: function(obj) {\n                        return Object.prototype.toString.apply(obj) === '[object RegExp]';\n                    },\n\n                    escapeRegex: function(re) {\n                        return re.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n                    },\n\n                    findInArray: function(array, predicate) {\n                        if (this.isArray(array) && predicate) {\n                            for (var i = 0; i < array.length; i++) {\n                                var item = array[i];\n                                if (predicate(item)) {\n                                    return item;\n                                }\n                            }\n                        }\n                        return undefined;\n                    },\n\n                    jsonStringify: function(obj, censorKeywords) {\n                        function censor(key, value) {\n                            return censorKeywords && censorKeywords.indexOf(key) > -1 ? undefined : value;\n                        }\n                        return JSON.stringify(obj, censor, 2);\n                    },\n                    addEventListener: function(element, eventName, handler) {\n                        if (element.addEventListener) {\n                            element.addEventListener(eventName, handler, false);\n                        } else if (element.attachEvent) {\n                            element.attachEvent('on' + eventName, handler);\n                        } else {\n                            element[\"on\" + eventName] = handler;\n                        }\n                    },\n                    removeEventListener: function(element, eventName, handler) {\n                        if (element.removeEventListener) {\n                            element.removeEventListener(eventName, handler, false);\n                        } else if (element.detachEvent) {\n                            element.detachEvent(\"on\" + eventName, handler);\n                        } else {\n                            element[\"on\" + eventName] = null;\n                        }\n                    },\n                    preventDefault: function(e) {\n                        e = e || window.event;\n\n                        if (e.preventDefault) {\n                            e.preventDefault();\n                        } else {\n                            e.returnValue = false;\n                        }\n                    },\n                    stopPropagation: function(e) {\n                        e = e || window.event;\n\n                        if (e.stopPropagation) {\n                            e.stopPropagation();\n                        } else {\n                            e.cancelBubble = true;\n                        }\n                    },\n                    getEventButton: function(e) {\n                        var button = e.button;\n                        if ('which' in e) {\n                            return button;\n                        }\n                        // IE 8\n                        return button === 1 ? 0 : // left\n                            button === 4 ? 1 : // middle\n                            2; // right\n                    },\n                    getMousePageXY: function(e) {\n                        e = e || window.event;\n\n                        var pageX = e.pageX;\n                        var pageY = e.pageY;\n                        if (pageX === undefined) {\n                            pageX = e.clientX + document.body.scrollLeft + document.documentElement.scrollLeft;\n                            pageY = e.clientY + document.body.scrollTop + document.documentElement.scrollTop;\n                        }\n                        return {\n                            pageX: pageX,\n                            pageY: pageY\n                        };\n                    }\n                };\n\n\n                // from: https://github.com/davidchambers/Base64.js\n\n                (function(object) {\n                    var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\n                    function InvalidCharacterError(message) {\n                        this.message = message;\n                    }\n                    InvalidCharacterError.prototype = new Error();\n                    InvalidCharacterError.prototype.name = 'InvalidCharacterError';\n                    // encoder\n                    // [https://gist.github.com/999166] by [https://github.com/nignag]\n                    object.btoa = global && global.btoa ? function(str) {\n                            return global.btoa(str);\n                        } :\n                        function(input) {\n                            var str = String(input);\n                            for (\n                                // initialize result and counter\n                                var block, charCode, idx = 0, map = chars, output = '';\n                                // if the next str index does not exist:\n                                // change the mapping table to \"=\"\n                                // check if d has no fractional digits\n                                str.charAt(idx | 0) || (map = '=', idx % 1);\n                                // \"8 - idx % 1 * 8\" generates the sequence 2, 4, 6, 8\n                                output += map.charAt(63 & block >> 8 - idx % 1 * 8)\n                            ) {\n                                charCode = str.charCodeAt(idx += 3 / 4);\n                                if (charCode > 0xFF) {\n                                    throw new InvalidCharacterError(\"'btoa' failed: The string to be encoded contains characters outside of the Latin1 range.\");\n                                }\n                                block = block << 8 | charCode;\n                            }\n                            return output;\n                        };\n\n                    // decoder\n                    // [https://gist.github.com/1020396] by [https://github.com/atk]\n                    object.atob = global && global.atob ? function(str) {\n                            return global.atob(str);\n                        } :\n                        function(input) {\n                            var str = String(input).replace(/=+$/, '');\n                            if (str.length % 4 == 1) {\n                                throw new InvalidCharacterError(\"'atob' failed: The string to be decoded is not correctly encoded.\");\n                            }\n                            for (\n                                // initialize result and counters\n                                var bc = 0, bs, buffer, idx = 0, output = '';\n                                // get next character\n                                (buffer = str.charAt(idx++));\n                                // character found in table? initialize bit storage and add its ascii value;\n                                ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer,\n                                    // and if not first of each 4 characters,\n                                    // convert the first 8 bits to one ascii character\n                                    bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0\n                            ) {\n                                // try to find character in table (0-63, not found => -1)\n                                buffer = chars.indexOf(buffer);\n                            }\n                            return output;\n                        };\n                }(module.exports));\n\n            }).call(this, typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n        }, {}],\n        19: [function(_dereq_, module, exports) {\n\n            var react = typeof window === 'undefined' ? _dereq_('react') : window.React;\n            var utils = _dereq_('../orb.utils');\n            var axe = _dereq_('../orb.axe');\n            var uiheaders = _dereq_('../orb.ui.header');\n            var filtering = _dereq_('../orb.filtering');\n            var domUtils = _dereq_('../orb.utils.dom');\n\n            var extraCol = 0;\n            var comps = module.exports;\n\n            var pivotId = 1;\n            var themeChangeCallbacks = {};\n\n            module.exports.PivotTable = react.createClass({\n                id: pivotId++,\n                pgrid: null,\n                pgridwidget: null,\n                fontStyle: null,\n                getInitialState: function getInitialState() {\n                    comps.DragManager.init(this);\n\n                    themeChangeCallbacks[this.id] = [];\n                    this.registerThemeChanged(this.updateClasses);\n\n                    this.pgridwidget = this.props.pgridwidget;\n                    this.pgrid = this.pgridwidget.pgrid;\n                    return {};\n                },\n                sort: function sort(axetype, field) {\n                    this.pgridwidget.sort(axetype, field);\n                    this.setProps({});\n                },\n                moveButton: function moveButton(button, newAxeType, position) {\n                    if (this.pgridwidget.moveField(button.props.field.name, button.props.axetype, newAxeType, position)) {\n                        this.setProps({});\n                    }\n                },\n                toggleFieldExpansion: function toggleFieldExpansion(axetype, field, newState) {\n                    if (this.pgridwidget.toggleFieldExpansion(axetype, field, newState)) {\n                        this.setProps({});\n                    }\n                },\n                toggleSubtotals: function toggleSubtotals(axetype) {\n                    if (this.pgridwidget.toggleSubtotals(axetype)) {\n                        this.setProps({});\n                    }\n                },\n                toggleGrandtotal: function toggleGrandtotal(axetype) {\n                    if (this.pgridwidget.toggleGrandtotal(axetype)) {\n                        this.setProps({});\n                    }\n                },\n                expandRow: function expandRow(cell) {\n                    cell.expand();\n                    this.setProps({});\n                },\n                collapseRow: function collapseRow(cell) {\n                    cell.subtotalHeader.collapse();\n                    this.setProps({});\n                },\n                applyFilter: function applyFilter(fieldname, operator, term, staticValue, excludeStatic) {\n                    this.pgridwidget.applyFilter(fieldname, operator, term, staticValue, excludeStatic);\n                    this.setProps({});\n                },\n                registerThemeChanged: function registerThemeChanged(compCallback) {\n                    if (compCallback) {\n                        themeChangeCallbacks[this.id].push(compCallback);\n                    }\n                },\n                unregisterThemeChanged: function unregisterThemeChanged(compCallback) {\n                    var i;\n                    if (compCallback && (i = themeChangeCallbacks[this.id].indexOf(compCallback)) >= 0) {\n                        themeChangeCallbacks[this.id].splice(i, 1);\n                    }\n                },\n                changeTheme: function changeTheme(newTheme) {\n                    if (this.pgridwidget.pgrid.config.setTheme(newTheme)) {\n                        // notify self/sub-components of the theme change\n                        for (var i = 0; i < themeChangeCallbacks[this.id].length; i++) {\n                            themeChangeCallbacks[this.id][i]();\n                        }\n                    }\n                },\n                updateClasses: function updateClasses() {\n                    var thisnode = ReactDOM.findDOMNode(this);\n                    var classes = this.pgridwidget.pgrid.config.theme.getPivotClasses();\n                    thisnode.className = classes.container;\n                    thisnode.children[1].className = classes.table;\n                },\n                componentDidUpdate: function componentDidUpdate() {\n                    this.synchronizeWidths();\n                },\n                componentDidMount: function componentDidMount() {\n                    var fontInfos = domUtils.getStyle(ReactDOM.findDOMNode(this), ['font-family', 'font-size'], true);\n                    this.fontStyle = {\n                        fontFamily: fontInfos[0],\n                        fontSize: fontInfos[1]\n                    };\n\n                    var dataCellsNode = ReactDOM.findDOMNode(this.refs.dataCells);\n                    var dataCellsTableNode = dataCellsNode.children[0];\n                    var colHeadersNode = this.refs.colHeaders;\n                    var rowHeadersNode = this.refs.rowHeaders;\n\n                    this.refs.horizontalScrollBar.setScrollClient(dataCellsNode, function(scrollPercent) {\n                        var scrollAmount = Math.ceil(scrollPercent * (domUtils.getSize(dataCellsTableNode).width - domUtils.getSize(dataCellsNode).width));\n                        colHeadersNode.scrollLeft = scrollAmount;\n                        dataCellsNode.scrollLeft = scrollAmount;\n                    });\n\n                    this.refs.verticalScrollBar.setScrollClient(dataCellsNode, function(scrollPercent) {\n                        var scrollAmount = Math.ceil(scrollPercent * (domUtils.getSize(dataCellsTableNode).height - domUtils.getSize(dataCellsNode).height));\n                        rowHeadersNode.scrollTop = scrollAmount;\n                        dataCellsNode.scrollTop = scrollAmount;\n                    });\n\n                    this.synchronizeWidths();\n                },\n                onWheel: function onWheel(e) {\n                    var elem;\n                    var scrollbar;\n                    var amount;\n\n                    if (e.currentTarget == (elem = this.refs.colHeaders)) {\n                        scrollbar = this.refs.horizontalScrollBar;\n                        amount = e.deltaX || e.deltaY;\n                    } else if (e.currentTarget == (elem = this.refs.rowHeaders) || e.currentTarget == (elem = this.refs.dataCells)) {\n                        scrollbar = this.refs.verticalScrollBar;\n                        amount = e.deltaY;\n                    }\n\n                    if (scrollbar && scrollbar.scroll(amount, e.deltaMode)) {\n                        utils.stopPropagation(e);\n                        utils.preventDefault(e);\n                    }\n                },\n                synchronizeWidths: function synchronizeWidths() {\n                    comps.SizingManager.synchronizeWidths(this);\n                    this.refs.horizontalScrollBar.refresh();\n                    this.refs.verticalScrollBar.refresh();\n                },\n                render: function render() {\n\n                    var self = this;\n\n                    var config = this.pgridwidget.pgrid.config;\n                    var Toolbar = comps.Toolbar;\n                    var UpperButtons = comps.PivotTableUpperButtons;\n                    var ColumnButtons = comps.PivotTableColumnButtons;\n                    var RowButtons = comps.PivotTableRowButtons;\n                    var RowHeaders = comps.PivotTableRowHeaders;\n                    var ColumnHeaders = comps.PivotTableColumnHeaders;\n                    var DataCells = comps.PivotTableDataCells;\n                    var HorizontalScrollBar = comps.HorizontalScrollBar;\n                    var VerticalScrollBar = comps.VerticalScrollBar;\n\n                    var classes = config.theme.getPivotClasses();\n\n                    var tblStyle = {};\n                    if (config.width) {\n                        tblStyle.width = config.width;\n                    }\n                    if (config.height) {\n                        tblStyle.height = config.height;\n                    }\n\n                    return React.createElement(\n                        'div', {\n                            className: classes.container,\n                            style: tblStyle,\n                            ref: 'pivot'\n                        },\n                        config.toolbar && config.toolbar.visible ? React.createElement(\n                            'div', {\n                                ref: 'toolbar',\n                                className: 'orb-toolbar'\n                            },\n                            React.createElement(Toolbar, {\n                                pivotTableComp: self\n                            })\n                        ) : null,\n                        React.createElement(\n                            'table', {\n                                id: 'tbl-' + self.id,\n                                ref: 'pivotWrapperTable',\n                                className: classes.table,\n                                style: {\n                                    tableLayout: 'fixed'\n                                }\n                            },\n                            React.createElement(\n                                'colgroup',\n                                null,\n                                React.createElement('col', {\n                                    ref: 'column1'\n                                }),\n                                React.createElement('col', {\n                                    ref: 'column2'\n                                }),\n                                React.createElement('col', {\n                                    ref: 'column3'\n                                }),\n                                React.createElement('col', {\n                                    ref: 'column4'\n                                })\n                            ),\n                            React.createElement(\n                                'tbody',\n                                null,\n                                React.createElement(\n                                    'tr', {\n                                        ref: 'upperButtons'\n                                    },\n                                    React.createElement(\n                                        'td', {\n                                            colSpan: '4'\n                                        },\n                                        React.createElement(UpperButtons, {\n                                            pivotTableComp: self\n                                        })\n                                    )\n                                ),\n                                React.createElement(\n                                    'tr', {\n                                        ref: 'colButtons'\n                                    },\n                                    React.createElement('td', null),\n                                    React.createElement(\n                                        'td', {\n                                            style: {\n                                                padding: '11px 4px !important'\n                                            }\n                                        },\n                                        React.createElement(ColumnButtons, {\n                                            pivotTableComp: self\n                                        })\n                                    ),\n                                    React.createElement('td', {\n                                        colSpan: '2'\n                                    })\n                                ),\n                                React.createElement(\n                                    'tr',\n                                    null,\n                                    React.createElement(\n                                        'td', {\n                                            style: {\n                                                position: 'relative'\n                                            }\n                                        },\n                                        React.createElement(RowButtons, {\n                                            pivotTableComp: self,\n                                            ref: 'rowButtons'\n                                        })\n                                    ),\n                                    React.createElement(\n                                        'td',\n                                        null,\n                                        React.createElement(ColumnHeaders, {\n                                            pivotTableComp: self,\n                                            ref: 'colHeaders'\n                                        })\n                                    ),\n                                    React.createElement('td', {\n                                        colSpan: '2'\n                                    })\n                                ),\n                                React.createElement(\n                                    'tr',\n                                    null,\n                                    React.createElement(\n                                        'td',\n                                        null,\n                                        React.createElement(RowHeaders, {\n                                            pivotTableComp: self,\n                                            ref: 'rowHeaders'\n                                        })\n                                    ),\n                                    React.createElement(\n                                        'td',\n                                        null,\n                                        React.createElement(DataCells, {\n                                            pivotTableComp: self,\n                                            ref: 'dataCells'\n                                        })\n                                    ),\n                                    React.createElement(\n                                        'td',\n                                        null,\n                                        React.createElement(VerticalScrollBar, {\n                                            pivotTableComp: self,\n                                            ref: 'verticalScrollBar'\n                                        })\n                                    ),\n                                    React.createElement('td', null)\n                                ),\n                                React.createElement(\n                                    'tr',\n                                    null,\n                                    React.createElement('td', null),\n                                    React.createElement(\n                                        'td',\n                                        null,\n                                        React.createElement(HorizontalScrollBar, {\n                                            pivotTableComp: self,\n                                            ref: 'horizontalScrollBar'\n                                        })\n                                    ),\n                                    React.createElement('td', {\n                                        colSpan: '2'\n                                    })\n                                )\n                            )\n                        ),\n                        React.createElement('div', {\n                            className: 'orb-overlay orb-overlay-hidden',\n                            id: 'drilldialog' + self.id\n                        })\n                    );\n                }\n            });\n\n            var pivotId = 1;\n            var themeChangeCallbacks = {};\n\n            module.exports.PivotChart = react.createClass({\n                id: pivotId++,\n                pgrid: null,\n                pgridwidget: null,\n                fontStyle: null,\n                getInitialState: function getInitialState() {\n                    comps.DragManager.init(this);\n\n                    themeChangeCallbacks[this.id] = [];\n                    this.registerThemeChanged(this.updateClasses);\n\n                    this.pgridwidget = this.props.pgridwidget;\n                    this.pgrid = this.pgridwidget.pgrid;\n                    return {};\n                },\n                sort: function sort(axetype, field) {\n                    this.pgridwidget.sort(axetype, field);\n                    this.setProps({});\n                },\n                moveButton: function moveButton(button, newAxeType, position) {\n                    if (this.pgridwidget.moveField(button.props.field.name, button.props.axetype, newAxeType, position)) {\n                        this.setProps({});\n                    }\n                },\n                applyFilter: function applyFilter(fieldname, operator, term, staticValue, excludeStatic) {\n                    this.pgridwidget.applyFilter(fieldname, operator, term, staticValue, excludeStatic);\n                    this.setProps({});\n                },\n                registerThemeChanged: function registerThemeChanged(compCallback) {\n                    if (compCallback) {\n                        themeChangeCallbacks[this.id].push(compCallback);\n                    }\n                },\n                unregisterThemeChanged: function unregisterThemeChanged(compCallback) {\n                    var i;\n                    if (compCallback && (i = themeChangeCallbacks[this.id].indexOf(compCallback)) >= 0) {\n                        themeChangeCallbacks[this.id].splice(i, 1);\n                    }\n                },\n                changeTheme: function changeTheme(newTheme) {\n                    if (this.pgridwidget.pgrid.config.setTheme(newTheme)) {\n                        // notify self/sub-components of the theme change\n                        for (var i = 0; i < themeChangeCallbacks[this.id].length; i++) {\n                            themeChangeCallbacks[this.id][i]();\n                        }\n                    }\n                },\n                updateClasses: function updateClasses() {\n                    var thisnode = ReactDOM.findDOMNode(this);\n                    var classes = this.pgridwidget.pgrid.config.theme.getPivotClasses();\n                    thisnode.className = classes.container;\n                    thisnode.children[1].className = classes.table;\n                },\n                componentDidUpdate: function componentDidUpdate() {\n                    this.synchronizeWidths();\n                },\n                componentDidMount: function componentDidMount() {\n                    var fontInfos = domUtils.getStyle(ReactDOM.findDOMNode(this), ['font-family', 'font-size'], true);\n                    this.fontStyle = {\n                        fontFamily: fontInfos[0],\n                        fontSize: fontInfos[1]\n                    };\n\n                    this.synchronizeWidths();\n                },\n                synchronizeWidths: function synchronizeWidths() {\n                    var chartStyle = comps.SizingManager.synchronizeWidths(this);\n                    chartStyle.fontFamily = this.fontStyle.fontFamily;\n                    chartStyle.fontSize = this.fontStyle.fontSize;\n\n                    this.refs.chart.setState({\n                        canRender: true,\n                        chartStyle: chartStyle\n                    });\n                },\n                render: function render() {\n\n                    var self = this;\n\n                    var config = this.pgridwidget.pgrid.config;\n                    var Toolbar = comps.Toolbar;\n                    var UpperButtons = comps.PivotTableUpperButtons;\n                    var ColumnButtons = comps.PivotTableColumnButtons;\n                    var RowButtons = comps.PivotTableRowButtons;\n                    var Chart = comps.Chart;\n\n                    var classes = config.theme.getPivotClasses();\n\n                    var tblStyle = {};\n                    if (config.width) {\n                        tblStyle.width = config.width;\n                    }\n                    if (config.height) {\n                        tblStyle.height = config.height;\n                    }\n\n                    return React.createElement(\n                        'div', {\n                            className: classes.container,\n                            style: tblStyle,\n                            ref: 'pivot'\n                        },\n                        React.createElement(\n                            'table', {\n                                id: 'tbl-' + self.id,\n                                ref: 'pivotWrapperTable',\n                                className: classes.table\n                            },\n                            React.createElement(\n                                'colgroup',\n                                null,\n                                React.createElement('col', {\n                                    ref: 'column1'\n                                }),\n                                React.createElement('col', {\n                                    ref: 'column2'\n                                })\n                            ),\n                            React.createElement(\n                                'tbody',\n                                null,\n                                React.createElement(\n                                    'tr', {\n                                        ref: 'upperButtons'\n                                    },\n                                    React.createElement(\n                                        'td', {\n                                            colSpan: '2'\n                                        },\n                                        React.createElement(UpperButtons, {\n                                            pivotTableComp: self\n                                        })\n                                    )\n                                ),\n                                React.createElement(\n                                    'tr', {\n                                        ref: 'colButtons'\n                                    },\n                                    React.createElement('td', null),\n                                    React.createElement(\n                                        'td', {\n                                            style: {\n                                                padding: '11px 4px !important'\n                                            }\n                                        },\n                                        React.createElement(ColumnButtons, {\n                                            pivotTableComp: self\n                                        })\n                                    )\n                                ),\n                                React.createElement(\n                                    'tr',\n                                    null,\n                                    React.createElement(\n                                        'td', {\n                                            style: {\n                                                position: 'relative'\n                                            }\n                                        },\n                                        React.createElement(RowButtons, {\n                                            pivotTableComp: self,\n                                            ref: 'rowButtons'\n                                        })\n                                    ),\n                                    React.createElement(\n                                        'td',\n                                        null,\n                                        React.createElement(Chart, {\n                                            pivotTableComp: self,\n                                            chartMode: config.chartMode,\n                                            ref: 'chart'\n                                        })\n                                    )\n                                )\n                            )\n                        )\n                    );\n                }\n            });\n\n            module.exports.PivotRow = react.createClass({\n                render: function render() {\n                    var self = this;\n                    var PivotCell = comps.PivotCell;\n\n                    var lastCellIndex = this.props.row.length - 1;\n                    var cell0 = this.props.row[0];\n                    var leftmostCellFound = false;\n                    var layoutInfos = self.props.layoutInfos;\n                    var cells;\n\n                    var rowstyle = {};\n\n                    var istopmost = false;\n\n                    cells = this.props.row.map(function(cell, index) {\n\n                        var isleftmost = false;\n\n                        // If current cells are column/data headers and left most cell is not found yet\n                        // and last row left most cell does not span vertically over the current one and current one is visible\n                        // then mark IT as the left most cell\n                        if (cell.visible() && layoutInfos) {\n                            if (cell.dim) {\n                                if (cell.dim.isRoot && layoutInfos.topMostCells[cell.dim.depth - 1] === undefined || !cell.dim.isRoot && layoutInfos.topMostCells[cell.dim.depth] === undefined && (cell.dim.parent.isRoot || layoutInfos.topMostCells[cell.dim.depth + 1] === cell.dim.parent)) {\n                                    istopmost = true;\n                                    layoutInfos.topMostCells[cell.dim.depth] = cell.dim;\n                                }\n                            } else if (!layoutInfos.topMostCells['0']) {\n                                istopmost = layoutInfos.topMostCells['0'] = true;\n                            }\n\n                            if (!leftmostCellFound && (self.props.axetype === axe.Type.DATA || self.props.axetype === axe.Type.COLUMNS) && layoutInfos.lastLeftMostCellVSpan === 0) {\n\n                                isleftmost = leftmostCellFound = true;\n                                layoutInfos.lastLeftMostCellVSpan = cell.vspan() - 1;\n                            }\n                        }\n\n                        return React.createElement(PivotCell, {\n                            key: index,\n                            cell: cell,\n                            leftmost: isleftmost,\n                            topmost: istopmost,\n                            pivotTableComp: self.props.pivotTableComp\n                        });\n                    });\n\n                    // decrement lastLeftMostCellVSpan\n                    if (layoutInfos && layoutInfos.lastLeftMostCellVSpan > 0 && !leftmostCellFound) {\n                        layoutInfos.lastLeftMostCellVSpan--;\n                    }\n\n                    return React.createElement(\n                        'tr', {\n                            style: rowstyle\n                        },\n                        cells\n                    );\n                }\n            });\n\n            var _paddingLeft = null;\n            var _borderLeft = null;\n\n            module.exports.PivotCell = react.createClass({\n                expand: function expand() {\n                    this.props.pivotTableComp.expandRow(this.props.cell);\n                },\n                collapse: function collapse() {\n                    this.props.pivotTableComp.collapseRow(this.props.cell);\n                },\n                updateCellInfos: function updateCellInfos() {\n                    var node = ReactDOM.findDOMNode(this);\n                    var cell = this.props.cell;\n                    node.__orb = node.__orb || {};\n\n                    if (!cell.visible()) {\n\n                        node.__orb._visible = false;\n                    } else {\n                        var cellContentNode = this.refs.cellContent;\n\n                        var propList = [];\n                        var retPaddingLeft = _paddingLeft == null;\n                        var retBorderLeft = !this.props.leftmost && _borderLeft == null;\n                        var text = node.textContent || node.innerText;\n\n                        if (retPaddingLeft) {\n                            propList.push('padding-left');\n                        }\n\n                        if (retBorderLeft) {\n                            propList.push('border-left-width');\n                        }\n\n                        if (propList.length > 0) {\n                            var nodeStyle = domUtils.getStyle(node, propList, true);\n\n                            if (retPaddingLeft) {\n                                _paddingLeft = parseFloat(nodeStyle[0]);\n                            }\n\n                            if (retBorderLeft) {\n                                _borderLeft = parseFloat(nodeStyle[retPaddingLeft ? 1 : 0]);\n                            }\n                        }\n\n                        domUtils.removeClass(node, 'cell-hidden');\n\n                        node.__orb._visible = true;\n                        if (text != node.__orb._lastText || !node.__orb._textWidth) {\n                            node.__orb._lastText = text;\n                            node.__orb._textWidth = domUtils.getSize(cellContentNode).width;\n                        }\n                        node.__orb._colSpan = this.props.cell.hspan(true) || 1;\n                        node.__orb._rowSpan = this.props.cell.vspan(true) || 1;\n                        node.__orb._paddingLeft = _paddingLeft;\n                        node.__orb._paddingRight = _paddingLeft;\n                        node.__orb._borderLeftWidth = this.props.leftmost ? 0 : _borderLeft;\n                        node.__orb._borderRightWidth = 0;\n                    }\n                },\n                componentDidMount: function componentDidMount() {\n                    this.updateCellInfos();\n                },\n                componentDidUpdate: function componentDidUpdate() {\n                    this.updateCellInfos();\n                },\n                shouldComponentUpdate: function shouldComponentUpdate(nextProps, nextState) {\n                    if (nextProps.cell && nextProps.cell == this.props.cell && !this._latestVisibleState && !nextProps.cell.visible()) {\n                        return false;\n                    }\n                    return true;\n                },\n                _latestVisibleState: false,\n                render: function render() {\n                    var self = this;\n                    var cell = this.props.cell;\n                    var divcontent = [];\n                    var value;\n                    var cellClick;\n                    var headerPushed = false;\n\n                    this._latestVisibleState = cell.visible();\n\n                    switch (cell.template) {\n                        case 'cell-template-row-header':\n                        case 'cell-template-column-header':\n                            var isWrapper = cell.type === uiheaders.HeaderType.WRAPPER && cell.dim.field.subTotal.visible && cell.dim.field.subTotal.collapsible;\n                            var isSubtotal = cell.type === uiheaders.HeaderType.SUB_TOTAL && !cell.expanded;\n                            if (isWrapper || isSubtotal) {\n                                headerPushed = true;\n\n                                divcontent.push(React.createElement(\n                                    'table', {\n                                        key: 'header-value',\n                                        ref: 'cellContent'\n                                    },\n                                    React.createElement(\n                                        'tbody',\n                                        null,\n                                        React.createElement(\n                                            'tr',\n                                            null,\n                                            React.createElement(\n                                                'td', {\n                                                    className: 'orb-tgl-btn'\n                                                },\n                                                React.createElement('div', {\n                                                    className: 'orb-tgl-btn-' + (isWrapper ? 'down' : 'right'),\n                                                    onClick: isWrapper ? this.collapse : this.expand\n                                                })\n                                            ),\n                                            React.createElement(\n                                                'td', {\n                                                    className: 'hdr-val'\n                                                },\n                                                React.createElement('div', {\n                                                    dangerouslySetInnerHTML: {\n                                                        __html: cell.value || '&#160;'\n                                                    }\n                                                })\n                                            )\n                                        )\n                                    )\n                                ));\n                            } else {\n                                value = (cell.value || '&#160;') + (cell.type === uiheaders.HeaderType.SUB_TOTAL ? ' Total' : '');\n                            }\n                            break;\n                        case 'cell-template-dataheader':\n                            value = cell.value.caption;\n                            break;\n                        case 'cell-template-datavalue':\n                            value = cell.datafield && cell.datafield.formatFunc ? cell.datafield.formatFunc()(cell.value) : cell.value;\n                            cellClick = function() {\n                                self.props.pivotTableComp.pgridwidget.drilldown(cell, self.props.pivotTableComp.id);\n                            };\n                            break;\n                        default:\n                            break;\n                    }\n\n                    if (!headerPushed) {\n                        var headerClassName;\n                        switch (cell.template) {\n                            case 'cell-template-datavalue':\n                                headerClassName = 'cell-data';\n                                break;\n                            default:\n                                if (cell.template != 'cell-template-dataheader' && cell.type !== uiheaders.HeaderType.GRAND_TOTAL) {\n                                    headerClassName = 'hdr-val';\n                                }\n                        }\n                        divcontent.push(React.createElement(\n                            'div', {\n                                key: 'cell-value',\n                                ref: 'cellContent',\n                                className: headerClassName\n                            },\n                            React.createElement('div', {\n                                dangerouslySetInnerHTML: {\n                                    __html: value || '&#160;'\n                                }\n                            })\n                        ));\n                    }\n\n                    return React.createElement(\n                        'td', {\n                            className: getClassname(this.props),\n                            onDoubleClick: cellClick,\n                            colSpan: cell.hspan(),\n                            rowSpan: cell.vspan()\n                        },\n                        React.createElement(\n                            'div',\n                            null,\n                            divcontent\n                        )\n                    );\n                }\n            });\n\n            function getClassname(compProps) {\n                var cell = compProps.cell;\n                var classname = cell.cssclass;\n                var isEmpty = cell.template === 'cell-template-empty';\n\n                if (!cell.visible()) {\n                    classname += ' cell-hidden';\n                }\n\n                if (cell.type === uiheaders.HeaderType.SUB_TOTAL && cell.expanded) {\n                    classname += ' header-st-exp';\n                }\n\n                if (cell.type === uiheaders.HeaderType.GRAND_TOTAL) {\n                    if (cell.dim.depth === 1) {\n                        classname += ' header-nofields';\n                    } else if (cell.dim.depth > 2) {\n                        classname += ' header-gt-exp';\n                    }\n                }\n\n                if (compProps.leftmost) {\n                    classname += ' ' + (cell.template === 'cell-template-datavalue' ? 'cell' : 'header') + '-leftmost';\n                }\n\n                if (compProps.topmost) {\n                    classname += ' cell-topmost';\n                }\n\n                return classname;\n            }\n\n            var dragManager = module.exports.DragManager = (function() {\n\n                var _pivotComp = null;\n\n                var _currDragElement = null;\n                var _currDropTarget = null;\n                var _currDropIndicator = null;\n\n                var _dragNode = null;\n                var _dropTargets = [];\n                var _dropIndicators = [];\n\n                function doElementsOverlap(elem1Rect, elem2Rect) {\n                    return !(elem1Rect.right < elem2Rect.left || elem1Rect.left > elem2Rect.right || elem1Rect.bottom < elem2Rect.top || elem1Rect.top > elem2Rect.bottom);\n                }\n\n                function setCurrDropTarget(dropTarget, callback) {\n                    if (_currDropTarget) {\n                        signalDragEnd(_currDropTarget, function() {\n                            _currDropTarget = dropTarget;\n                            signalDragOver(dropTarget, callback);\n                        });\n                    } else {\n                        _currDropTarget = dropTarget;\n                        signalDragOver(dropTarget, callback);\n                    }\n                }\n\n                function setCurrDropIndicator(dropIndicator) {\n                    if (_currDropIndicator) {\n                        signalDragEnd(_currDropIndicator, function() {\n                            _currDropIndicator = dropIndicator;\n                            signalDragOver(dropIndicator);\n                        });\n                    } else {\n                        _currDropIndicator = dropIndicator;\n                        signalDragOver(dropIndicator);\n                    }\n                }\n\n                function signalDragOver(target, callback) {\n                    if (target && target.onDragOver) {\n                        target.onDragOver(callback);\n                    } else if (callback) {\n                        callback();\n                    }\n                }\n\n                function signalDragEnd(target, callback) {\n                    if (target && target.onDragEnd) {\n                        target.onDragEnd(callback);\n                    } else if (callback) {\n                        callback();\n                    }\n                }\n\n                function getDropTarget() {\n                    return domUtils.forEach(_dropTargets, function(target) {\n                        if (target.component.state.isover) {\n                            return target;\n                        }\n                    }, true);\n                }\n\n                function getDropIndicator() {\n                    return domUtils.forEach(_dropIndicators, function(indicator) {\n                        if (indicator.component.state.isover) {\n                            return indicator;\n                        }\n                    }, true);\n                }\n\n                var _initialized = false;\n\n                return {\n                    init: function init(pivotComp) {\n                        _initialized = true;\n                        _pivotComp = pivotComp;\n                    },\n                    setDragElement: function setDragElement(elem) {\n\n                        var prevDragElement = _currDragElement;\n                        _currDragElement = elem;\n                        if (_currDragElement != prevDragElement) {\n                            if (elem == null) {\n\n                                if (_currDropTarget) {\n                                    var position = _currDropIndicator != null ? _currDropIndicator.position : null;\n                                    _pivotComp.moveButton(prevDragElement, _currDropTarget.component.props.axetype, position);\n                                }\n\n                                _dragNode = null;\n                                setCurrDropTarget(null);\n                                setCurrDropIndicator(null);\n                            } else {\n                                _dragNode = ReactDOM.findDOMNode(_currDragElement);\n                            }\n                        }\n                    },\n                    registerTarget: function registerTarget(target, axetype, dragOverHandler, dargEndHandler) {\n                        _dropTargets.push({\n                            component: target,\n                            axetype: axetype,\n                            onDragOver: dragOverHandler,\n                            onDragEnd: dargEndHandler\n                        });\n                    },\n                    unregisterTarget: function unregisterTarget(target) {\n                        var tindex;\n                        for (var i = 0; i < _dropTargets.length; i++) {\n                            if (_dropTargets[i].component == target) {\n                                tindex = i;\n                                break;\n                            }\n                        }\n                        if (tindex != null) {\n                            _dropTargets.splice(tindex, 1);\n                        }\n                    },\n                    registerIndicator: function registerIndicator(indicator, axetype, position, dragOverHandler, dargEndHandler) {\n                        _dropIndicators.push({\n                            component: indicator,\n                            axetype: axetype,\n                            position: position,\n                            onDragOver: dragOverHandler,\n                            onDragEnd: dargEndHandler\n                        });\n                    },\n                    unregisterIndicator: function unregisterIndicator(indicator) {\n                        var iindex;\n                        for (var i = 0; i < _dropIndicators.length; i++) {\n                            if (_dropIndicators[i].component == indicator) {\n                                iindex = i;\n                                break;\n                            }\n                        }\n                        if (iindex != null) {\n                            _dropIndicators.splice(iindex, 1);\n                        }\n                    },\n                    elementMoved: function elementMoved() {\n                        if (_currDragElement != null) {\n                            var dragNodeRect = _dragNode.getBoundingClientRect();\n                            var foundTarget;\n\n                            domUtils.forEach(_dropTargets, function(target) {\n                                if (!foundTarget) {\n                                    var tnodeRect = ReactDOM.findDOMNode(target.component).getBoundingClientRect();\n                                    var isOverlap = doElementsOverlap(dragNodeRect, tnodeRect);\n                                    if (isOverlap) {\n                                        foundTarget = target;\n                                        return;\n                                    }\n                                }\n                            }, true);\n\n                            if (foundTarget) {\n                                setCurrDropTarget(foundTarget, function() {\n                                    var foundIndicator = null;\n\n                                    domUtils.forEach(_dropIndicators, function(indicator, index) {\n                                        if (!foundIndicator) {\n                                            var elementOwnIndicator = indicator.component.props.axetype === _currDragElement.props.axetype && indicator.component.props.position === _currDragElement.props.position;\n\n                                            var targetIndicator = indicator.component.props.axetype === foundTarget.component.props.axetype;\n                                            if (targetIndicator && !elementOwnIndicator) {\n                                                var tnodeRect = ReactDOM.findDOMNode(indicator.component).getBoundingClientRect();\n                                                var isOverlap = doElementsOverlap(dragNodeRect, tnodeRect);\n                                                if (isOverlap) {\n                                                    foundIndicator = indicator;\n                                                    return;\n                                                }\n                                            }\n                                        }\n                                    });\n\n                                    if (!foundIndicator) {\n                                        var axeIndicators = _dropIndicators.filter(function(indicator) {\n                                            return indicator.component.props.axetype === foundTarget.component.props.axetype;\n                                        });\n                                        if (axeIndicators.length > 0) {\n                                            foundIndicator = axeIndicators[axeIndicators.length - 1];\n                                        }\n                                    }\n                                    setCurrDropIndicator(foundIndicator);\n                                });\n                            }\n                        }\n                    }\n                };\n            })();\n\n            module.exports.DropIndicator = react.createClass({\n                displayName: 'DropIndicator',\n                getInitialState: function getInitialState() {\n                    dragManager.registerIndicator(this, this.props.axetype, this.props.position, this.onDragOver, this.onDragEnd);\n                    return {\n                        isover: false\n                    };\n                },\n                componentWillUnmount: function componentWillUnmount() {\n                    dragManager.unregisterIndicator(this);\n                },\n                onDragOver: function onDragOver(callback) {\n                    if (this.isMounted()) {\n                        this.setState({\n                            isover: true\n                        }, callback);\n                    } else if (callback) {\n                        callback();\n                    }\n                },\n                onDragEnd: function onDragEnd(callback) {\n                    if (this.isMounted()) {\n                        this.setState({\n                            isover: false\n                        }, callback);\n                    } else if (callback) {\n                        callback();\n                    }\n                },\n                render: function render() {\n                    var classname = 'drp-indic' + (this.props.isVertical ? '-vertical' : '');\n\n                    if (this.props.isFirst) {\n                        classname += ' drp-indic-first';\n                    }\n\n                    if (this.props.isLast) {\n                        classname += ' drp-indic-last';\n                    }\n\n                    var style = {};\n                    if (this.state.isover) {\n                        classname += ' drp-indic-over';\n                    }\n\n                    return React.createElement('div', {\n                        style: style,\n                        className: classname\n                    });\n                }\n            });\n\n            var dtid = 0;\n\n            module.exports.DropTarget = react.createClass({\n                getInitialState: function getInitialState() {\n                    this.dtid = ++dtid;\n                    return {\n                        isover: false\n                    };\n                },\n                componentDidMount: function componentDidMount() {\n                    dragManager.registerTarget(this, this.props.axetype, this.onDragOver, this.onDragEnd);\n                },\n                componentWillUnmount: function componentWillUnmount() {\n                    dragManager.unregisterTarget(this);\n                },\n                onDragOver: function onDragOver(callback) {\n                    if (this.isMounted()) {\n                        this.setState({\n                            isover: true\n                        }, callback);\n                    } else if (callback) {\n                        callback();\n                    }\n                },\n                onDragEnd: function onDragEnd(callback) {\n                    if (this.isMounted()) {\n                        this.setState({\n                            isover: false\n                        }, callback);\n                    } else if (callback) {\n                        callback();\n                    }\n                },\n                render: function render() {\n                    var self = this;\n                    var DropIndicator = module.exports.DropIndicator;\n\n                    var buttons = this.props.buttons.map(function(button, index) {\n                        if (index < self.props.buttons.length - 1) {\n                            return [React.createElement(\n                                'td',\n                                null,\n                                React.createElement(DropIndicator, {\n                                    isFirst: index === 0,\n                                    position: index,\n                                    axetype: self.props.axetype\n                                })\n                            ), React.createElement(\n                                'td',\n                                null,\n                                button\n                            )];\n                        } else {\n                            return [React.createElement(\n                                'td',\n                                null,\n                                React.createElement(DropIndicator, {\n                                    isFirst: index === 0,\n                                    position: index,\n                                    axetype: self.props.axetype\n                                })\n                            ), React.createElement(\n                                'td',\n                                null,\n                                button\n                            ), React.createElement(\n                                'td',\n                                null,\n                                React.createElement(DropIndicator, {\n                                    isLast: true,\n                                    position: null,\n                                    axetype: self.props.axetype\n                                })\n                            )];\n                        }\n                    });\n\n                    var style = self.props.axetype === axe.Type.ROWS ? {\n                        position: 'absolute',\n                        left: 0,\n                        bottom: 11\n                    } : null;\n\n                    return React.createElement(\n                        'div', {\n                            className: 'drp-trgt' + (this.state.isover ? ' drp-trgt-over' : '') + (buttons.length === 0 ? ' drp-trgt-empty' : ''),\n                            style: style\n                        },\n                        React.createElement(\n                            'table',\n                            null,\n                            React.createElement(\n                                'tbody',\n                                null,\n                                React.createElement(\n                                    'tr',\n                                    null,\n                                    buttons\n                                )\n                            )\n                        )\n                    );\n                }\n            });\n\n            var dtid = 0;\n\n            module.exports.DropTargetVertical = react.createClass({\n                getInitialState: function getInitialState() {\n                    this.dtid = ++dtid;\n                    return {\n                        isover: false\n                    };\n                },\n                componentDidMount: function componentDidMount() {\n                    dragManager.registerTarget(this, this.props.axetype, this.onDragOver, this.onDragEnd);\n                },\n                componentWillUnmount: function componentWillUnmount() {\n                    dragManager.unregisterTarget(this);\n                },\n                onDragOver: function onDragOver(callback) {\n                    if (this.isMounted()) {\n                        this.setState({\n                            isover: true\n                        }, callback);\n                    } else if (callback) {\n                        callback();\n                    }\n                },\n                onDragEnd: function onDragEnd(callback) {\n                    if (this.isMounted()) {\n                        this.setState({\n                            isover: false\n                        }, callback);\n                    } else if (callback) {\n                        callback();\n                    }\n                },\n                render: function render() {\n                    var self = this;\n                    var DropIndicator = module.exports.DropIndicator;\n\n                    var buttons = this.props.buttons.map(function(button, index) {\n                        var currButton = [React.createElement(\n                            'tr',\n                            null,\n                            React.createElement(\n                                'td',\n                                null,\n                                React.createElement(DropIndicator, {\n                                    isFirst: index === 0,\n                                    position: index,\n                                    axetype: self.props.axetype,\n                                    isVertical: true\n                                })\n                            )\n                        ), React.createElement(\n                            'tr',\n                            null,\n                            React.createElement(\n                                'td',\n                                null,\n                                button\n                            )\n                        )];\n\n                        if (index == self.props.buttons.length - 1) {\n                            currButton.push(React.createElement(\n                                'tr',\n                                null,\n                                React.createElement(\n                                    'td',\n                                    null,\n                                    React.createElement(DropIndicator, {\n                                        isLast: true,\n                                        position: null,\n                                        axetype: self.props.axetype,\n                                        isVertical: true\n                                    })\n                                )\n                            ));\n                        }\n\n                        return currButton;\n                    });\n\n                    return React.createElement(\n                        'div', {\n                            className: 'drp-trgt-vertical' + (this.state.isover ? ' drp-trgt-over' : '') + (buttons.length === 0 ? ' drp-trgt-vertical-empty' : '')\n                        },\n                        React.createElement(\n                            'table',\n                            null,\n                            React.createElement(\n                                'tbody',\n                                null,\n                                buttons\n                            )\n                        )\n                    );\n                }\n            });\n\n            var pbid = 0;\n\n            module.exports.PivotButton = react.createClass({\n                displayName: 'PivotButton',\n                getInitialState: function getInitialState() {\n                    this.pbid = ++pbid;\n\n                    // initial state, all zero.\n                    return {\n                        pos: {\n                            x: 0,\n                            y: 0\n                        },\n                        startpos: {\n                            x: 0,\n                            y: 0\n                        },\n                        mousedown: false,\n                        dragging: false\n                    };\n                },\n                onFilterMouseDown: function onFilterMouseDown(e) {\n                    // left mouse button only\n                    if (e.button !== 0) return;\n\n                    var filterButton = this.refs.filterButton;\n                    var filterButtonPos = domUtils.getOffset(filterButton);\n                    var filterContainer = document.createElement('div');\n\n                    var filterPanelFactory = React.createFactory(comps.FilterPanel);\n                    var filterPanel = filterPanelFactory({\n                        field: this.props.field.name,\n                        pivotTableComp: this.props.pivotTableComp\n                    });\n\n                    filterContainer.className = this.props.pivotTableComp.pgrid.config.theme.getFilterClasses().container;\n                    filterContainer.style.top = filterButtonPos.y + 'px';\n                    filterContainer.style.left = filterButtonPos.x + 'px';\n                    document.body.appendChild(filterContainer);\n\n                    React.render(filterPanel, filterContainer);\n\n                    // prevent event bubbling (to prevent text selection while dragging for example)\n                    utils.stopPropagation(e);\n                    utils.preventDefault(e);\n                },\n                componentDidUpdate: function componentDidUpdate() {\n                    if (this.props.pivotTableComp.pgrid.config.canMoveFields) {\n                        if (!this.state.mousedown) {\n                            // mouse not down, don't care about mouse up/move events.\n                            dragManager.setDragElement(null);\n                            utils.removeEventListener(document, 'mousemove', this.onMouseMove);\n                        } else if (this.state.mousedown) {\n                            // mouse down, interested by mouse up/move events.\n                            dragManager.setDragElement(this);\n                            utils.addEventListener(document, 'mousemove', this.onMouseMove);\n                        }\n                    }\n                },\n                componentDidMount: function componentDidMount() {\n                    this.props.pivotTableComp.registerThemeChanged(this.updateClasses);\n                },\n                componentWillUnmount: function componentWillUnmount() {\n                    this.props.pivotTableComp.unregisterThemeChanged(this.updateClasses);\n                    utils.removeEventListener(document, 'mousemove', this.onMouseMove);\n                },\n                onMouseDown: function onMouseDown(e) {\n                    // drag/sort with left mouse button\n                    if (e.button !== 0) return;\n\n                    if (e.ctrlKey) {\n                        this.props.pivotTableComp.toggleFieldExpansion(this.props.axetype, this.props.field);\n                    } else {\n\n                        var thispos = domUtils.getOffset(ReactDOM.findDOMNode(this));\n                        var mousePageXY = utils.getMousePageXY(e);\n\n                        // inform mousedown, save start pos\n                        this.setState({\n                            mousedown: true,\n                            mouseoffset: {\n                                x: thispos.x - mousePageXY.pageX,\n                                y: thispos.y - mousePageXY.pageY\n                            },\n                            startpos: {\n                                x: mousePageXY.pageX,\n                                y: mousePageXY.pageY\n                            }\n                        });\n                    }\n\n                    // prevent event bubbling (to prevent text selection while dragging for example)\n                    utils.stopPropagation(e);\n                    utils.preventDefault(e);\n                },\n                onMouseUp: function onMouseUp(e) {\n\n                    var isdragged = this.state.dragging;\n\n                    this.setState({\n                        mousedown: false,\n                        dragging: false,\n                        size: null,\n                        pos: {\n                            x: 0,\n                            y: 0\n                        }\n                    });\n\n                    if (!e.ctrlKey && !isdragged) {\n                        // if button was not dragged, proceed as a click\n                        this.props.pivotTableComp.sort(this.props.axetype, this.props.field);\n                    }\n                },\n                onMouseMove: function onMouseMove(e) {\n                    // if the mouse is not down while moving, return (no drag)\n                    if (!this.props.pivotTableComp.pgrid.config.canMoveFields || !this.state.mousedown) return;\n\n                    var size = null;\n                    var mousePageXY = utils.getMousePageXY(e);\n\n                    if (!this.state.dragging) {\n                        size = domUtils.getSize(ReactDOM.findDOMNode(this));\n                    } else {\n                        size = this.state.size;\n                    }\n\n                    var newpos = {\n                        x: mousePageXY.pageX + this.state.mouseoffset.x,\n                        y: mousePageXY.pageY + this.state.mouseoffset.y\n                    };\n\n                    if (!this.state.dragging || newpos.x != this.state.pos.x || newpos.y != this.state.pos.y) {\n                        this.setState({\n                            dragging: true,\n                            size: size,\n                            pos: newpos\n                        });\n\n                        dragManager.elementMoved();\n                    }\n\n                    utils.stopPropagation(e);\n                    utils.preventDefault(e);\n                },\n                updateClasses: function updateClasses() {\n                    ReactDOM.findDOMNode(this).className = this.props.pivotTableComp.pgrid.config.theme.getButtonClasses().pivotButton;\n                },\n                render: function render() {\n                    var self = this;\n                    var divstyle = {\n                        left: self.state.pos.x + 'px',\n                        top: self.state.pos.y + 'px',\n                        position: self.state.dragging ? 'fixed' : '',\n                        zIndex: 101\n                    };\n\n                    if (self.state.size) {\n                        divstyle.width = self.state.size.width + 'px';\n                    }\n\n                    var sortDirectionClass = self.props.field.sort.order === 'asc' ? 'sort-asc' :\n                        //' \\u2191' :\n                        self.props.field.sort.order === 'desc' ? 'sort-desc' :\n                        //' \\u2193' :\n                        '';\n                    var filterClass = (self.state.dragging ? '' : 'fltr-btn') + (this.props.pivotTableComp.pgrid.isFieldFiltered(this.props.field.name) ? ' fltr-btn-active' : '');\n                    var fieldAggFunc = '';\n                    if (self.props.axetype === axe.Type.DATA) {\n                        fieldAggFunc = React.createElement(\n                            'small',\n                            null,\n                            ' (' + self.props.field.aggregateFuncName + ')'\n                        );\n                    }\n\n                    return React.createElement(\n                        'div', {\n                            key: self.props.field.name,\n                            className: this.props.pivotTableComp.pgrid.config.theme.getButtonClasses().pivotButton,\n                            onMouseDown: this.onMouseDown,\n                            onMouseUp: this.onMouseUp,\n                            style: divstyle\n                        },\n                        React.createElement(\n                            'table',\n                            null,\n                            React.createElement(\n                                'tbody',\n                                null,\n                                React.createElement(\n                                    'tr',\n                                    null,\n                                    React.createElement(\n                                        'td', {\n                                            className: 'caption'\n                                        },\n                                        self.props.field.caption,\n                                        fieldAggFunc\n                                    ),\n                                    React.createElement(\n                                        'td',\n                                        null,\n                                        React.createElement('div', {\n                                            className: 'sort-indicator ' + sortDirectionClass\n                                        })\n                                    ),\n                                    React.createElement(\n                                        'td', {\n                                            className: 'filter'\n                                        },\n                                        React.createElement('div', {\n                                            ref: 'filterButton',\n                                            className: filterClass,\n                                            onMouseDown: self.state.dragging ? null : this.onFilterMouseDown\n                                        })\n                                    )\n                                )\n                            )\n                        )\n                    );\n                }\n            });\n\n            module.exports.PivotTableUpperButtons = react.createClass({\n                render: function render() {\n                    var self = this;\n                    var PivotButton = comps.PivotButton;\n                    var DropTarget = comps.DropTarget;\n\n                    var config = this.props.pivotTableComp.pgridwidget.pgrid.config;\n\n                    var fieldsDropTarget;\n                    if (config.canMoveFields) {\n                        var fieldsButtons = config.availablefields().map(function(field, index) {\n                            return React.createElement(PivotButton, {\n                                key: field.name,\n                                field: field,\n                                axetype: null,\n                                position: index,\n                                pivotTableComp: self.props.pivotTableComp\n                            });\n                        });\n                        fieldsDropTarget = React.createElement(\n                            \"tr\",\n                            null,\n                            React.createElement(\n                                \"td\", {\n                                    className: \"flds-grp-cap av-flds text-muted\"\n                                },\n                                React.createElement(\n                                    \"div\",\n                                    null,\n                                    \"Fields\"\n                                )\n                            ),\n                            React.createElement(\n                                \"td\", {\n                                    className: \"av-flds\"\n                                },\n                                React.createElement(DropTarget, {\n                                    buttons: fieldsButtons,\n                                    axetype: null\n                                })\n                            )\n                        );\n                    } else {\n                        fieldsDropTarget = null;\n                    }\n\n                    var dataButtons = config.dataFields.map(function(field, index) {\n                        return React.createElement(PivotButton, {\n                            key: field.name,\n                            field: field,\n                            axetype: axe.Type.DATA,\n                            position: index,\n                            pivotTableComp: self.props.pivotTableComp\n                        });\n                    });\n\n                    var dataDropTarget = React.createElement(\n                        \"tr\",\n                        null,\n                        React.createElement(\n                            \"td\", {\n                                className: \"flds-grp-cap text-muted\"\n                            },\n                            React.createElement(\n                                \"div\",\n                                null,\n                                \"Data\"\n                            )\n                        ),\n                        React.createElement(\n                            \"td\", {\n                                className: \"empty\"\n                            },\n                            React.createElement(DropTarget, {\n                                buttons: dataButtons,\n                                axetype: axe.Type.DATA\n                            })\n                        )\n                    );\n\n                    return React.createElement(\n                        \"table\", {\n                            className: \"inner-table upper-buttons\"\n                        },\n                        React.createElement(\n                            \"tbody\",\n                            null,\n                            fieldsDropTarget,\n                            dataDropTarget\n                        )\n                    );\n                }\n            });\n\n            module.exports.PivotTableColumnButtons = react.createClass({\n                render: function render() {\n                    var self = this;\n                    var PivotButton = comps.PivotButton;\n                    var DropTarget = comps.DropTarget;\n\n                    var config = this.props.pivotTableComp.pgridwidget.pgrid.config;\n\n                    var columnButtons = config.columnFields.map(function(field, index) {\n                        return React.createElement(PivotButton, {\n                            key: field.name,\n                            field: field,\n                            axetype: axe.Type.COLUMNS,\n                            position: index,\n                            pivotTableComp: self.props.pivotTableComp\n                        });\n                    });\n\n                    return React.createElement(DropTarget, {\n                        buttons: columnButtons,\n                        axetype: axe.Type.COLUMNS\n                    });\n                }\n            });\n\n            module.exports.PivotTableRowButtons = react.createClass({\n                render: function render() {\n                    var self = this;\n                    var PivotButton = comps.PivotButton;\n                    var DropTarget = comps.DropTarget;\n                    var DropTargetVertical = comps.DropTargetVertical;\n\n                    var config = this.props.pivotTableComp.pgridwidget.pgrid.config;\n\n                    var rowButtons = config.rowFields.map(function(field, index) {\n                        return React.createElement(PivotButton, {\n                            key: field.name,\n                            field: field,\n                            axetype: axe.Type.ROWS,\n                            position: index,\n                            pivotTableComp: self.props.pivotTableComp\n                        });\n                    });\n\n                    if (config.chartMode.enabled) {\n                        return React.createElement(DropTargetVertical, {\n                            buttons: rowButtons,\n                            axetype: axe.Type.ROWS\n                        });\n                    } else {\n                        return React.createElement(DropTarget, {\n                            buttons: rowButtons,\n                            axetype: axe.Type.ROWS\n                        });\n                    }\n                }\n            });\n\n            module.exports.PivotTableColumnHeaders = react.createClass({\n                render: function render() {\n                    var self = this;\n                    var PivotRow = comps.PivotRow;\n                    var pgridwidget = this.props.pivotTableComp.pgridwidget;\n                    var cntrClass = pgridwidget.columns.headers.length === 0 ? '' : ' columns-cntr';\n\n                    var layoutInfos = {\n                        lastLeftMostCellVSpan: 0,\n                        topMostCells: {}\n                    };\n\n                    var columnHeaders = pgridwidget.columns.headers.map(function(headerRow, index) {\n                        return React.createElement(PivotRow, {\n                            key: index,\n                            row: headerRow,\n                            axetype: axe.Type.COLUMNS,\n                            pivotTableComp: self.props.pivotTableComp,\n                            layoutInfos: layoutInfos\n                        });\n                    });\n\n                    return React.createElement(\n                        'div', {\n                            className: 'inner-table-container' + cntrClass,\n                            onWheel: this.props.pivotTableComp.onWheel\n                        },\n                        React.createElement(\n                            'table', {\n                                className: 'inner-table'\n                            },\n                            React.createElement('colgroup', null),\n                            React.createElement(\n                                'tbody',\n                                null,\n                                columnHeaders\n                            )\n                        )\n                    );\n                }\n            });\n\n            module.exports.PivotTableRowHeaders = react.createClass({\n                setColGroup: function setColGroup(widths) {\n                    var node = ReactDOM.findDOMNode(this);\n                    var colGroupNode = this.refs.colgroup;\n                    node.style.tableLayout = 'auto';\n\n                    colGroupNode.innerHTML = '';\n                    for (var i = 0; i < widths.length; i++) {\n                        var col = document.createElement('col');\n                        col.style.width = widths[i] + 8 + 'px';\n                        colGroupNode.appendChild(col);\n                    }\n                    node.style.tableLayout = 'fixed';\n                },\n                render: function render() {\n                    var self = this;\n                    var PivotRow = comps.PivotRow;\n                    var pgridwidget = this.props.pivotTableComp.pgridwidget;\n                    var cntrClass = pgridwidget.rows.headers.length === 0 ? '' : ' rows-cntr';\n\n                    var layoutInfos = {\n                        lastLeftMostCellVSpan: 0,\n                        topMostCells: {}\n                    };\n\n                    var rowHeaders = pgridwidget.rows.headers.map(function(headerRow, index) {\n                        return React.createElement(PivotRow, {\n                            key: index,\n                            row: headerRow,\n                            axetype: axe.Type.ROWS,\n                            layoutInfos: layoutInfos,\n                            pivotTableComp: self.props.pivotTableComp\n                        });\n                    });\n\n                    return React.createElement(\n                        'div', {\n                            className: 'inner-table-container' + cntrClass,\n                            onWheel: this.props.pivotTableComp.onWheel\n                        },\n                        React.createElement(\n                            'table', {\n                                className: 'inner-table'\n                            },\n                            React.createElement('colgroup', {\n                                ref: 'colgroup'\n                            }),\n                            React.createElement(\n                                'tbody',\n                                null,\n                                rowHeaders\n                            )\n                        )\n                    );\n                }\n            });\n\n            module.exports.PivotTableDataCells = react.createClass({\n                render: function render() {\n                    var self = this;\n                    var PivotRow = comps.PivotRow;\n\n                    var pgridwidget = this.props.pivotTableComp.pgridwidget;\n                    var layoutInfos = {\n                        lastLeftMostCellVSpan: 0,\n                        topMostCells: {}\n                    };\n\n                    var dataCells = pgridwidget.dataRows.map(function(dataRow, index) {\n                        return React.createElement(PivotRow, {\n                            key: index,\n                            row: dataRow,\n                            axetype: axe.Type.DATA,\n                            layoutInfos: layoutInfos,\n                            pivotTableComp: self.props.pivotTableComp\n                        });\n                    });\n\n                    return React.createElement(\n                        \"div\", {\n                            className: \"inner-table-container data-cntr\",\n                            onWheel: this.props.pivotTableComp.onWheel\n                        },\n                        React.createElement(\n                            \"table\", {\n                                className: \"inner-table\"\n                            },\n                            React.createElement(\"colgroup\", null),\n                            React.createElement(\n                                \"tbody\",\n                                null,\n                                dataCells\n                            )\n                        )\n                    );\n                }\n            });\n\n            var scrollBarMixin = {\n                scrollEvent: null,\n                scrollClient: null,\n                getInitialState: function getInitialState() {\n                    // initial state, all zero.\n                    return {\n                        size: 16,\n                        mousedown: false,\n                        thumbOffset: 0\n                    };\n                },\n                componentDidMount: function componentDidMount() {\n                    this.scrollEvent = new ScrollEvent(this);\n                },\n                componentDidUpdate: function componentDidUpdate() {\n                    if (!this.state.mousedown) {\n                        // mouse not down, don't care about mouse up/move events.\n                        utils.removeEventListener(document, 'mousemove', this.onMouseMove);\n                        utils.removeEventListener(document, 'mouseup', this.onMouseUp);\n                    } else if (this.state.mousedown) {\n                        // mouse down, interested by mouse up/move events.\n                        utils.addEventListener(document, 'mousemove', this.onMouseMove);\n                        utils.addEventListener(document, 'mouseup', this.onMouseUp);\n                    }\n                },\n                componentWillUnmount: function componentWillUnmount() {\n                    utils.removeEventListener(document, 'mousemove', this.onMouseMove);\n                    utils.removeEventListener(document, 'mouseup', this.onMouseUp);\n                },\n                onMouseDown: function onMouseDown(e) {\n                    // drag with left mouse button\n                    if (e.button !== 0) return;\n\n                    var thumbElem = this.refs.scrollThumb;\n                    var thumbposInParent = domUtils.getParentOffset(thumbElem);\n                    var mousePageXY = utils.getMousePageXY(e);\n\n                    domUtils.addClass(thumbElem, 'orb-scrollthumb-hover');\n\n                    // inform mousedown, save start pos\n                    this.setState({\n                        mousedown: true,\n                        mouseoffset: mousePageXY[this.mousePosProp],\n                        thumbOffset: thumbposInParent[this.posProp]\n                    });\n\n                    // prevent event bubbling (to prevent text selection while dragging for example)\n                    utils.stopPropagation(e);\n                    utils.preventDefault(e);\n                },\n                onMouseUp: function onMouseUp() {\n\n                    if (this.state.mousedown) {\n                        var thumbElem = this.refs.scrollThumb;\n                        domUtils.removeClass(thumbElem, 'orb-scrollthumb-hover');\n                    }\n\n                    this.setState({\n                        mousedown: false\n                    });\n                },\n                onMouseMove: function onMouseMove(e) {\n\n                    // if the mouse is not down while moving, return (no drag)\n                    if (!this.state.mousedown) return;\n\n                    utils.stopPropagation(e);\n                    utils.preventDefault(e);\n\n                    var mousePageXY = utils.getMousePageXY(e);\n                    var amount = mousePageXY[this.mousePosProp] - this.state.mouseoffset;\n                    this.state.mouseoffset = mousePageXY[this.mousePosProp];\n\n                    this.scroll(amount);\n                },\n                getScrollSize: function getScrollSize() {\n                    if (this.scrollClient != null) {\n                        return domUtils.getSize(this.scrollClient)[this.sizeProp];\n                    } else {\n                        return domUtils.getSize(ReactDOM.findDOMNode(this))[this.sizeProp];\n                    }\n                },\n                setScrollClient: function setScrollClient(scrollClient, scrollCallback) {\n                    this.scrollClient = scrollClient;\n                    this.scrollEvent.callback = scrollCallback;\n                },\n                getScrollPercent: function getScrollPercent() {\n                    var maxOffset = this.getScrollSize() - this.state.size;\n                    return maxOffset <= 0 ? 0 : this.state.thumbOffset / maxOffset;\n                },\n                refresh: function refresh() {\n                    if (this.scrollClient) {\n                        var scrolledElement = this.scrollClient.children[0];\n\n                        var clientSize = domUtils.getSize(this.scrollClient);\n                        var elementSize = domUtils.getSize(scrolledElement);\n\n                        var scrollBarContainerSize = this.getScrollSize();\n                        var newSize = clientSize[this.sizeProp] >= elementSize[this.sizeProp] ? 0 : clientSize[this.sizeProp] / elementSize[this.sizeProp] * scrollBarContainerSize;\n\n                        this.setState({\n                            containerSize: scrollBarContainerSize,\n                            size: newSize,\n                            thumbOffset: Math.min(this.state.thumbOffset, scrollBarContainerSize - newSize)\n                        }, this.scrollEvent.raise);\n                    }\n                },\n                scroll: function scroll(amount, mode) {\n                    if (this.state.size > 0) {\n                        if (mode == 1) amount *= 8;\n\n                        var maxOffset = this.getScrollSize() - this.state.size;\n                        var newOffset = this.state.thumbOffset + amount;\n                        if (newOffset < 0) newOffset = 0;\n                        if (newOffset > maxOffset) newOffset = maxOffset;\n\n                        if (this.state.thumbOffset != newOffset) {\n                            this.setState({\n                                thumbOffset: newOffset\n                            }, this.scrollEvent.raise);\n                            return true;\n                        }\n                    }\n                    return false;\n                },\n                onWheel: function onWheel(e) {\n                    this.scroll(e.deltaY, e.deltaMode);\n                    utils.stopPropagation(e);\n                    utils.preventDefault(e);\n                },\n                render: function render() {\n                    var self = this;\n\n                    var thumbStyle = {\n                        padding: 0\n                    };\n                    thumbStyle[this.sizeProp] = this.state.size;\n                    thumbStyle[this.offsetCssProp] = this.state.thumbOffset;\n\n                    var thisStyle = {};\n                    thisStyle[this.sizeProp] = this.state.containerSize;\n\n                    var thumbClass = \"orb-scrollthumb \" + this.props.pivotTableComp.pgrid.config.theme.getButtonClasses().scrollBar;\n\n                    var scrollThumb = this.state.size <= 0 ? null : React.createElement('div', {\n                        className: thumbClass,\n                        style: thumbStyle,\n                        ref: 'scrollThumb',\n                        onMouseDown: this.onMouseDown\n                    });\n\n                    return React.createElement(\n                        'div', {\n                            className: this.cssClass,\n                            style: thisStyle,\n                            onWheel: this.onWheel\n                        },\n                        scrollThumb\n                    );\n                }\n            };\n\n            function ScrollEvent(scrollBarComp) {\n                var self = this;\n                this.scrollBarComp = scrollBarComp;\n                this.callback = null;\n                this.raise = function() {\n                    if (self.callback) {\n                        self.callback(self.scrollBarComp.getScrollPercent());\n                    }\n                };\n            }\n\n            module.exports.HorizontalScrollBar = react.createClass({\n                mixins: [scrollBarMixin],\n                posProp: 'x',\n                mousePosProp: 'pageX',\n                sizeProp: 'width',\n                offsetCssProp: 'left',\n                cssClass: 'orb-h-scrollbar'\n            });\n\n            module.exports.VerticalScrollBar = react.createClass({\n                mixins: [scrollBarMixin],\n                posProp: 'y',\n                mousePosProp: 'pageY',\n                sizeProp: 'height',\n                offsetCssProp: 'top',\n                cssClass: 'orb-v-scrollbar'\n            });\n\n            module.exports.Chart = react.createClass({\n                getInitialState: function getInitialState() {\n                    return {\n                        canRender: false\n                    };\n                },\n                canRender: function canRender() {\n                    return this.state.canRender && typeof this.props.chartMode.type === 'string' && typeof google.visualization[this.props.chartMode.type] === 'function';\n                },\n                drawChart: function drawChart() {\n                    if (this.canRender()) {\n                        var chartData = this.props.pivotTableComp.pgridwidget.pgrid.getChartData();\n                        var data = new google.visualization.DataTable();\n\n                        data.addColumn('string', chartData.hAxisLabel);\n                        for (var ri = 0; ri < chartData.colNames.length; ri++) {\n                            data.addColumn('number', chartData.colNames[ri]);\n                        }\n\n                        data.addRows(chartData.dataTable);\n\n                        var options = {\n                            title: chartData.title,\n                            //isStacked: true,\n                            fontName: this.state.chartStyle.fontFamily,\n                            fontSize: parseFloat(this.state.chartStyle.fontSize),\n                            hAxis: {\n                                title: chartData.hAxisLabel\n                            },\n                            vAxis: {\n                                title: chartData.vAxisLabel\n                            }\n                        };\n\n                        if (typeof google.visualization[this.props.chartMode.type] === 'function') {\n                            var chart = new google.visualization[this.props.chartMode.type](ReactDOM.findDOMNode(this));\n                            chart.draw(data, options);\n                        }\n                    }\n                },\n                componentDidMount: function componentDidMount() {\n                    this.drawChart();\n                },\n                componentDidUpdate: function componentDidUpdate() {\n                    this.drawChart();\n                },\n                render: function render() {\n                    if (this.canRender()) {\n                        return React.createElement('div', {\n                            className: 'chart',\n                            style: this.state.chartStyle\n                        });\n                    }\n                    return null;\n                }\n            });\n\n            module.exports.FilterPanel = react.createClass({\n                pgridwidget: null,\n                values: null,\n                filterManager: null,\n                getInitialState: function getInitialState() {\n                    this.pgridwidget = this.props.pivotTableComp.pgridwidget;\n                    return {};\n                },\n                destroy: function destroy() {\n                    var container = ReactDOM.findDOMNode(this).parentNode;\n                    React.unmountComponentAtNode(container);\n                    container.parentNode.removeChild(container);\n                },\n                onFilter: function onFilter(operator, term, staticValue, excludeStatic) {\n                    this.props.pivotTableComp.applyFilter(this.props.field, operator, term, staticValue, excludeStatic);\n                    this.destroy();\n                },\n                onMouseDown: function onMouseDown(e) {\n                    var container = ReactDOM.findDOMNode(this).parentNode;\n                    var target = e.target || e.srcElement;\n                    while (target != null) {\n                        if (target == container) {\n                            return true;\n                        }\n                        target = target.parentNode;\n                    }\n\n                    this.destroy();\n                },\n                onMouseWheel: function onMouseWheel(e) {\n                    var valuesTable = this.refs.valuesTable;\n                    var target = e.target || e.srcElement;\n                    while (target != null) {\n                        if (target == valuesTable) {\n                            if (valuesTable.scrollHeight <= valuesTable.clientHeight) {\n                                utils.stopPropagation(e);\n                                utils.preventDefault(e);\n                            }\n                            return;\n                        }\n                        target = target.parentNode;\n                    }\n\n                    this.destroy();\n                },\n                componentWillMount: function componentWillMount() {\n                    utils.addEventListener(document, 'mousedown', this.onMouseDown);\n                    utils.addEventListener(document, 'wheel', this.onMouseWheel);\n                    utils.addEventListener(window, 'resize', this.destroy);\n                },\n                componentDidMount: function componentDidMount() {\n                    this.filterManager.init(ReactDOM.findDOMNode(this));\n                },\n                componentWillUnmount: function componentWillUnmount() {\n                    utils.removeEventListener(document, 'mousedown', this.onMouseDown);\n                    utils.removeEventListener(document, 'wheel', this.onMouseWheel);\n                    utils.removeEventListener(window, 'resize', this.destroy);\n                },\n                render: function render() {\n                    var Dropdown = comps.Dropdown;\n                    var checkboxes = [];\n\n                    this.filterManager = new FilterManager(this, this.pgridwidget.pgrid.getFieldFilter(this.props.field));\n                    this.values = this.pgridwidget.pgrid.getFieldValues(this.props.field);\n\n                    function addCheckboxRow(value, text) {\n                        return checkboxes.push(React.createElement(\n                            'tr', {\n                                key: value\n                            },\n                            React.createElement(\n                                'td', {\n                                    className: 'fltr-chkbox'\n                                },\n                                React.createElement('input', {\n                                    type: 'checkbox',\n                                    value: value,\n                                    defaultChecked: 'checked'\n                                })\n                            ),\n                            React.createElement(\n                                'td', {\n                                    className: 'fltr-val',\n                                    title: text || value\n                                },\n                                text || value\n                            )\n                        ));\n                    }\n\n                    addCheckboxRow(filtering.ALL, '(Show All)');\n\n                    for (var i = 0; i < this.values.length; i++) {\n                        if (this.values[i] != null) {\n                            addCheckboxRow(this.values[i]);\n                        } else {\n                            addCheckboxRow(filtering.BLANK, '(Blank)');\n                        }\n                    }\n\n                    var buttonClass = this.props.pivotTableComp.pgrid.config.theme.getButtonClasses().orbButton;\n                    var style = this.props.pivotTableComp.fontStyle;\n\n                    var currentFilter = this.pgridwidget.pgrid.getFieldFilter(this.props.field);\n\n                    return React.createElement(\n                        'table', {\n                            className: 'fltr-scntnr',\n                            style: style\n                        },\n                        React.createElement(\n                            'tbody',\n                            null,\n                            React.createElement(\n                                'tr',\n                                null,\n                                React.createElement(\n                                    'td', {\n                                        className: 'srchop-col'\n                                    },\n                                    React.createElement(Dropdown, {\n                                        values: [filtering.Operators.MATCH.name, filtering.Operators.NOTMATCH.name, filtering.Operators.EQ.name, filtering.Operators.NEQ.name, filtering.Operators.GT.name, filtering.Operators.GTE.name, filtering.Operators.LT.name, filtering.Operators.LTE.name],\n                                        selectedValue: currentFilter && currentFilter.operator ? currentFilter.operator.name : filtering.Operators.MATCH.name,\n                                        onValueChanged: this.filterManager.onOperatorChanged\n                                    })\n                                ),\n                                React.createElement(\n                                    'td', {\n                                        className: 'srchtyp-col',\n                                        title: 'Enable/disable Regular expressions'\n                                    },\n                                    '.*'\n                                ),\n                                React.createElement(\n                                    'td', {\n                                        className: 'srchbox-col'\n                                    },\n                                    React.createElement(\n                                        'table', {\n                                            style: {\n                                                width: '100%'\n                                            }\n                                        },\n                                        React.createElement(\n                                            'tbody',\n                                            null,\n                                            React.createElement(\n                                                'tr',\n                                                null,\n                                                React.createElement(\n                                                    'td',\n                                                    null,\n                                                    React.createElement('input', {\n                                                        type: 'text',\n                                                        placeholder: 'search'\n                                                    })\n                                                ),\n                                                React.createElement(\n                                                    'td',\n                                                    null,\n                                                    React.createElement(\n                                                        'div', {\n                                                            className: 'srchclear-btn',\n                                                            onClick: this.clearFilter\n                                                        },\n                                                        'x'\n                                                    )\n                                                )\n                                            )\n                                        )\n                                    )\n                                )\n                            ),\n                            React.createElement(\n                                'tr',\n                                null,\n                                React.createElement(\n                                    'td', {\n                                        colSpan: '3',\n                                        className: 'fltr-vals-col'\n                                    },\n                                    React.createElement(\n                                        'table', {\n                                            className: 'fltr-vals-tbl',\n                                            ref: 'valuesTable'\n                                        },\n                                        React.createElement(\n                                            'tbody',\n                                            null,\n                                            checkboxes\n                                        )\n                                    )\n                                )\n                            ),\n                            React.createElement(\n                                'tr', {\n                                    className: 'bottom-row'\n                                },\n                                React.createElement(\n                                    'td', {\n                                        className: 'cnfrm-btn-col',\n                                        colSpan: '2'\n                                    },\n                                    React.createElement('input', {\n                                        type: 'button',\n                                        className: buttonClass,\n                                        value: 'Ok',\n                                        style: {\n                                            float: 'left'\n                                        }\n                                    }),\n                                    React.createElement('input', {\n                                        type: 'button',\n                                        className: buttonClass,\n                                        value: 'Cancel',\n                                        style: {\n                                            float: 'left'\n                                        }\n                                    })\n                                ),\n                                React.createElement(\n                                    'td', {\n                                        className: 'resize-col'\n                                    },\n                                    React.createElement('div', null)\n                                )\n                            )\n                        )\n                    );\n                }\n            });\n\n            function FilterManager(reactComp, initialFilterObject) {\n\n                var self = this;\n                var INDETERMINATE = 'indeterminate';\n\n                var savedCheckedValues;\n                var isSearchMode = false;\n                var isRegexMode = false;\n                var operator = filtering.Operators.MATCH;\n                var lastSearchTerm = '';\n\n                var elems = {\n                    filterContainer: null,\n                    checkboxes: {},\n                    searchBox: null,\n                    operatorBox: null,\n                    allCheckbox: null,\n                    addCheckbox: null,\n                    enableRegexButton: null,\n                    clearSearchButton: null,\n                    okButton: null,\n                    cancelButton: null,\n                    resizeGrip: null\n                };\n\n                var resizeManager;\n\n                this.init = function(filterContainerElement) {\n\n                    elems.filterContainer = filterContainerElement;\n                    elems.checkboxes = {};\n                    elems.searchBox = elems.filterContainer.rows[0].cells[2].children[0].rows[0].cells[0].children[0];\n                    elems.clearSearchButton = elems.filterContainer.rows[0].cells[2].children[0].rows[0].cells[1].children[0];\n                    elems.operatorBox = elems.filterContainer.rows[0].cells[0].children[0];\n                    elems.okButton = elems.filterContainer.rows[2].cells[0].children[0];\n                    elems.cancelButton = elems.filterContainer.rows[2].cells[0].children[1];\n                    elems.resizeGrip = elems.filterContainer.rows[2].cells[1].children[0];\n\n                    var rows = elems.filterContainer.rows[1].cells[0].children[0].rows;\n                    for (var i = 0; i < rows.length; i++) {\n                        var checkbox = rows[i].cells[0].children[0];\n                        elems.checkboxes[checkbox.value] = checkbox;\n                    }\n\n                    elems.allCheckbox = elems.checkboxes[filtering.ALL];\n                    elems.blanckCheckbox = elems.checkboxes[filtering.BLANK];\n                    elems.addCheckbox = null;\n                    elems.enableRegexButton = elems.filterContainer.rows[0].cells[1];\n\n                    resizeManager = new ResizeManager(elems.filterContainer.parentNode, elems.filterContainer.rows[1].cells[0].children[0], elems.resizeGrip);\n\n                    applyInitialFilterObject();\n                    addEventListeners();\n                };\n\n                this.onOperatorChanged = function(newOperator) {\n                    if (operator.name !== newOperator) {\n                        operator = filtering.Operators.get(newOperator);\n                        self.toggleRegexpButtonVisibility();\n                        self.searchChanged('operatorChanged');\n                    }\n                };\n\n                function checkboxVisible(checkbox, isVisible) {\n                    if (isVisible != null) {\n                        checkbox.parentNode.parentNode.style.display = isVisible ? '' : 'none';\n                    } else {\n                        return checkbox.parentNode.parentNode.style.display != 'none';\n                    }\n                }\n\n                function applyInitialFilterObject() {\n                    if (initialFilterObject) {\n                        var staticInfos = {\n                            values: initialFilterObject.staticValue,\n                            toExclude: initialFilterObject.excludeStatic\n                        };\n\n                        if (initialFilterObject.term) {\n                            isSearchMode = true;\n\n                            operator = initialFilterObject.operator;\n                            self.toggleRegexpButtonVisibility();\n\n                            if (initialFilterObject.regexpMode) {\n                                isRegexMode = true;\n                                self.toggleRegexpButtonState();\n                                lastSearchTerm = initialFilterObject.term.source;\n                            } else {\n                                lastSearchTerm = initialFilterObject.term;\n                            }\n\n                            elems.searchBox.value = lastSearchTerm;\n\n                            self.applyFilterTerm(initialFilterObject.operator, initialFilterObject.term);\n                        } else {\n                            savedCheckedValues = staticInfos;\n                        }\n\n                        self.updateCheckboxes(staticInfos);\n                        self.updateAllCheckbox();\n                    }\n                }\n\n                function addEventListeners() {\n                    self.toggleRegexpButtonVisibility();\n\n                    utils.addEventListener(elems.filterContainer, 'click', self.valueChecked);\n                    utils.addEventListener(elems.searchBox, 'keyup', self.searchChanged);\n\n                    utils.addEventListener(elems.clearSearchButton, 'click', self.clearSearchBox);\n\n                    utils.addEventListener(elems.okButton, 'click', function() {\n                        var checkedObj = self.getCheckedValues();\n                        reactComp.onFilter(operator.name, operator.regexpSupported && isSearchMode && isRegexMode ? new RegExp(lastSearchTerm, 'i') : lastSearchTerm, checkedObj.values, checkedObj.toExclude);\n                    });\n                    utils.addEventListener(elems.cancelButton, 'click', function() {\n                        reactComp.destroy();\n                    });\n                }\n\n                function ResizeManager(outerContainerElem, valuesTableElem, resizeGripElem) {\n\n                    var minContainerWidth = 301;\n                    var minContainerHeight = 223;\n\n                    var mousedownpos = {\n                        x: 0,\n                        y: 0\n                    };\n                    var isMouseDown = false;\n\n                    this.resizeMouseDown = function(e) {\n                        // drag/sort with left mouse button\n                        if (utils.getEventButton(e) !== 0) return;\n\n                        var mousePageXY = utils.getMousePageXY(e);\n\n                        isMouseDown = true;\n                        document.body.style.cursor = 'se-resize';\n\n                        mousedownpos.x = mousePageXY.pageX;\n                        mousedownpos.y = mousePageXY.pageY;\n\n                        // prevent event bubbling (to prevent text selection while dragging for example)\n                        utils.stopPropagation(e);\n                        utils.preventDefault(e);\n                    };\n\n                    this.resizeMouseUp = function() {\n                        isMouseDown = false;\n                        document.body.style.cursor = 'auto';\n                        return true;\n                    };\n\n                    this.resizeMouseMove = function(e) {\n                        // if the mouse is not down while moving, return (no drag)\n                        if (!isMouseDown) return;\n\n                        var mousePageXY = utils.getMousePageXY(e);\n\n                        var resizeGripSize = resizeGripElem.getBoundingClientRect();\n                        var outerContainerSize = outerContainerElem.getBoundingClientRect();\n                        var valuesTableSize = valuesTableElem.tBodies[0].getBoundingClientRect();\n\n                        var outerContainerWidth = outerContainerSize.right - outerContainerSize.left;\n                        var outerContainerHeight = outerContainerSize.bottom - outerContainerSize.top;\n\n                        var offset = {\n                            x: outerContainerWidth <= minContainerWidth && mousePageXY.pageX < resizeGripSize.left ? 0 : mousePageXY.pageX - mousedownpos.x,\n                            y: outerContainerHeight <= minContainerHeight && mousePageXY.pageY < resizeGripSize.top ? 0 : mousePageXY.pageY - mousedownpos.y\n                        };\n\n                        var newContainerWidth = outerContainerWidth + offset.x;\n                        var newContainerHeight = outerContainerHeight + offset.y;\n\n                        mousedownpos.x = mousePageXY.pageX;\n                        mousedownpos.y = mousePageXY.pageY;\n\n                        if (newContainerWidth >= minContainerWidth) {\n                            outerContainerElem.style.width = newContainerWidth + 'px';\n                        }\n\n                        if (newContainerHeight >= minContainerHeight) {\n                            outerContainerElem.style.height = newContainerHeight + 'px';\n                            valuesTableElem.tBodies[0].style.height = valuesTableSize.bottom - valuesTableSize.top + offset.y + 'px';\n                        }\n\n                        utils.stopPropagation(e);\n                        utils.preventDefault(e);\n                    };\n\n                    utils.addEventListener(resizeGripElem, 'mousedown', this.resizeMouseDown);\n                    utils.addEventListener(document, 'mouseup', this.resizeMouseUp);\n                    utils.addEventListener(document, 'mousemove', this.resizeMouseMove);\n                }\n\n                this.clearSearchBox = function() {\n                    elems.searchBox.value = '';\n                    self.searchChanged();\n                };\n\n                this.toggleRegexpButtonVisibility = function() {\n                    if (operator.regexpSupported) {\n                        utils.addEventListener(elems.enableRegexButton, 'click', self.regexpActiveChanged);\n                        domUtils.removeClass(elems.enableRegexButton, 'srchtyp-col-hidden');\n                    } else {\n                        utils.removeEventListener(elems.enableRegexButton, 'click', self.regexpActiveChanged);\n                        domUtils.addClass(elems.enableRegexButton, 'srchtyp-col-hidden');\n                    }\n                };\n\n                this.toggleRegexpButtonState = function() {\n                    elems.enableRegexButton.className = elems.enableRegexButton.className.replace('srchtyp-col-active', '');\n                    if (isRegexMode) {\n                        domUtils.addClass(elems.enableRegexButton, 'srchtyp-col-active');\n                    } else {\n                        domUtils.removeClass(elems.enableRegexButton, 'srchtyp-col-active');\n                    }\n                };\n\n                this.regexpActiveChanged = function() {\n                    isRegexMode = !isRegexMode;\n                    self.toggleRegexpButtonState();\n                    self.searchChanged('regexModeChanged');\n                };\n\n                this.valueChecked = function(e) {\n                    var target = e.target || e.srcElement;\n                    if (target && target.type && target.type === 'checkbox') {\n                        if (target == elems.allCheckbox) {\n                            self.updateCheckboxes({\n                                values: elems.allCheckbox.checked\n                            });\n                        } else {\n                            self.updateAllCheckbox();\n                        }\n                    }\n                };\n\n                this.applyFilterTerm = function(operator, term) {\n                    var defaultVisible = term ? false : true;\n                    var opterm = operator.regexpSupported && isSearchMode ? isRegexMode ? term : utils.escapeRegex(term) : term;\n                    checkboxVisible(elems.allCheckbox, defaultVisible);\n                    for (var i = 0; i < reactComp.values.length; i++) {\n                        var val = reactComp.values[i];\n                        var checkbox = val != null ? elems.checkboxes[val] : elems.blanckCheckbox;\n                        var visible = !isSearchMode || operator.func(val, opterm);\n                        checkboxVisible(checkbox, visible);\n                        checkbox.checked = visible;\n                    }\n                };\n\n                this.searchChanged = function(e) {\n                    var search = (elems.searchBox.value || '').trim();\n                    if (e === 'operatorChanged' || e === 'regexModeChanged' && search || search != lastSearchTerm) {\n                        lastSearchTerm = search;\n\n                        var previousIsSearchMode = isSearchMode;\n                        isSearchMode = search !== '';\n\n                        if (isSearchMode && !previousIsSearchMode) {\n                            savedCheckedValues = self.getCheckedValues();\n                        }\n\n                        //var searchTerm = operator.regexpSupported && isSearchMode ? new RegExp(isRegexMode ? search : utils.escapeRegex(search), 'i') : search;\n                        if (e !== 'operatorChanged' || isSearchMode) {\n                            self.applyFilterTerm(operator, search);\n                        }\n\n                        if (!isSearchMode && previousIsSearchMode) {\n                            self.updateCheckboxes(savedCheckedValues);\n                        }\n\n                        self.updateAllCheckbox();\n                    }\n                };\n\n                this.getCheckedValues = function() {\n                    if (!isSearchMode && !elems.allCheckbox.indeterminate) {\n                        return {\n                            values: elems.allCheckbox.checked ? filtering.ALL : filtering.NONE,\n                            toExclude: false\n                        };\n                    } else {\n                        var staticValue;\n                        var i, val, checkbox;\n                        var valuesCount = 0,\n                            checkedCount = 0;\n\n                        for (i = 0; i < reactComp.values.length; i++) {\n                            val = reactComp.values[i];\n                            checkbox = val != null ? elems.checkboxes[val] : elems.blanckCheckbox;\n                            if (checkboxVisible(checkbox)) {\n                                valuesCount++;\n                                if (checkbox.checked) {\n                                    checkedCount++;\n                                }\n                            }\n                        }\n\n                        var excludeUnchecked = false;\n\n                        if (checkedCount === 0) {\n                            staticValue = filtering.NONE;\n                        } else if (checkedCount == valuesCount) {\n                            staticValue = filtering.ALL;\n                        } else {\n                            staticValue = [];\n                            excludeUnchecked = checkedCount > valuesCount / 2 + 1;\n\n                            for (i = 0; i < reactComp.values.length; i++) {\n                                val = reactComp.values[i];\n                                checkbox = val != null ? elems.checkboxes[val] : elems.blanckCheckbox;\n                                if (checkboxVisible(checkbox)) {\n                                    if (!excludeUnchecked && checkbox.checked || excludeUnchecked && !checkbox.checked) {\n                                        staticValue.push(val);\n                                    }\n                                }\n                            }\n                        }\n                        return {\n                            values: staticValue,\n                            toExclude: excludeUnchecked\n                        };\n                    }\n                };\n\n                this.updateCheckboxes = function(checkedList) {\n                    var values = checkedList ? checkedList.values : null;\n                    var allchecked = utils.isArray(values) ? null : values == null || values === filtering.ALL ? true : values === filtering.NONE ? false : !!values;\n                    for (var i = 0; i < reactComp.values.length; i++) {\n                        var val = reactComp.values[i];\n                        var checkbox = val != null ? elems.checkboxes[val] : elems.blanckCheckbox;\n                        if (checkboxVisible(checkbox)) {\n                            if (allchecked != null) {\n                                checkbox.checked = allchecked;\n                            } else {\n                                var valInList = values.indexOf(val) >= 0;\n                                checkbox.checked = checkedList.toExclude ? !valInList : valInList;\n                            }\n                        }\n                    }\n                };\n\n                this.updateAllCheckbox = function() {\n                    if (!isSearchMode) {\n                        var allchecked = null;\n                        for (var i = 0; i < reactComp.values.length; i++) {\n                            var val = reactComp.values[i];\n                            var checkbox = val != null ? elems.checkboxes[val] : elems.blanckCheckbox;\n                            if (allchecked == null) {\n                                allchecked = checkbox.checked;\n                            } else {\n                                if (allchecked !== checkbox.checked) {\n                                    allchecked = INDETERMINATE;\n                                    break;\n                                }\n                            }\n                        }\n\n                        if (allchecked === INDETERMINATE) {\n                            elems.allCheckbox.indeterminate = true;\n                            elems.allCheckbox.checked = false;\n                        } else {\n                            elems.allCheckbox.indeterminate = false;\n                            elems.allCheckbox.checked = allchecked;\n                        }\n                    }\n                };\n            }\n\n            module.exports.Dropdown = react.createClass({\n                openOrClose: function openOrClose(e) {\n                    var valueNode = this.refs.valueElement;\n                    var valuesListNode = this.refs.valuesList;\n                    var target = e.target || e.srcElement;\n\n                    if (target === valueNode && valuesListNode.style.display === 'none') {\n                        valuesListNode.style.display = 'block';\n                    } else {\n                        valuesListNode.style.display = 'none';\n                    }\n                },\n                onMouseEnter: function onMouseEnter() {\n                    var valueNode = this.refs.valueElement;\n                    valueNode.className = \"orb-tgl-btn-down\";\n                    valueNode.style.backgroundPosition = 'right center';\n                },\n                onMouseLeave: function onMouseLeave() {\n                    this.refs.valueElement.className = \"\";\n                },\n                componentDidMount: function componentDidMount() {\n                    utils.addEventListener(document, 'click', this.openOrClose);\n                },\n                componentWillUnmount: function componentWillUnmount() {\n                    utils.removeEventListener(document, 'click', this.openOrClose);\n                },\n                selectValue: function selectValue(e) {\n                    var listNode = this.refs.valuesList;\n                    var target = e.target || e.srcElement;\n                    var isli = false;\n                    while (!isli && target != null) {\n                        if (target.parentNode == listNode) {\n                            isli = true;\n                            break;\n                        }\n                        target = target.parentNode;\n                    }\n\n                    if (isli) {\n                        var value = target.textContent;\n                        var valueElement = this.refs.valueElement;\n                        if (valueElement.textContent != value) {\n                            valueElement.textContent = value;\n                            if (this.props.onValueChanged) {\n                                this.props.onValueChanged(value);\n                            }\n                        }\n                    }\n                },\n                render: function render() {\n                    function createSelectValueFunc(value) {\n                        return function() {\n                            this.selectValue(value);\n                        };\n                    }\n\n                    var values = [];\n                    for (var i = 0; i < this.props.values.length; i++) {\n                        values.push(React.createElement('li', {\n                            key: 'item' + i,\n                            dangerouslySetInnerHTML: {\n                                __html: this.props.values[i]\n                            }\n                        }));\n                    }\n\n                    return React.createElement(\n                        'div', {\n                            className: 'orb-select'\n                        },\n                        React.createElement('div', {\n                            ref: 'valueElement',\n                            dangerouslySetInnerHTML: {\n                                __html: this.props.selectedValue\n                            },\n                            onMouseEnter: this.onMouseEnter,\n                            onMouseLeave: this.onMouseLeave\n                        }),\n                        React.createElement(\n                            'ul', {\n                                ref: 'valuesList',\n                                style: {\n                                    display: 'none'\n                                },\n                                onClick: this.selectValue\n                            },\n                            values\n                        )\n                    );\n                }\n            });\n\n            module.exports.Grid = react.createClass({\n                render: function render() {\n                    var data = this.props.data;\n                    var headers = this.props.headers;\n                    var tableClasses = this.props.theme.getGridClasses();\n\n                    var rows = [];\n\n                    if (headers && headers.length > 0) {\n                        var headerRow = [];\n                        for (var h = 0; h < headers.length; h++) {\n                            headerRow.push(React.createElement(\n                                'th', {\n                                    key: 'h' + h\n                                },\n                                headers[h]\n                            ));\n                        }\n                        rows.push(React.createElement(\n                            'tr', {\n                                key: 'h'\n                            },\n                            headerRow\n                        ));\n                    }\n\n                    if (data && data.length > 0) {\n                        for (var i = 0; i < data.length; i++) {\n                            var row = [];\n                            if (utils.isArray(data[i])) {\n                                for (var j = 0; j < data[i].length; j++) {\n                                    row.push(React.createElement(\n                                        'td', {\n                                            key: i + '' + j\n                                        },\n                                        data[i][j]\n                                    ));\n                                }\n                            } else {\n                                for (var prop in data[i]) {\n                                    if (data[i].hasOwnProperty(prop)) {\n                                        row.push(React.createElement(\n                                            'td', {\n                                                key: i + '' + prop\n                                            },\n                                            data[i][prop]\n                                        ));\n                                    }\n                                }\n                            }\n                            rows.push(React.createElement(\n                                'tr', {\n                                    key: i\n                                },\n                                row\n                            ));\n                        }\n                    }\n\n                    return React.createElement(\n                        'table', {\n                            className: tableClasses.table\n                        },\n                        React.createElement(\n                            'tbody',\n                            null,\n                            rows\n                        )\n                    );\n                }\n            });\n\n            function createOverlay() {\n                var overlayElement = document.createElement('div');\n                overlayElement.className = 'orb-overlay orb-overlay-hidden';\n                document.body.appendChild(overlayElement);\n                return overlayElement;\n            }\n\n            var Dialog = module.exports.Dialog = react.createClass({\n                statics: {\n                    create: function create() {\n                        var dialogFactory = React.createFactory(Dialog);\n                        var overlay = createOverlay();\n\n                        return {\n                            show: function show(props) {\n                                React.render(dialogFactory(props), overlay);\n                            }\n                        };\n                    }\n                },\n                overlayElement: null,\n                setOverlayClass: function setOverlayClass(visible) {\n                    this.overlayElement.className = this.props.theme.getDialogClasses(visible).overlay;\n                },\n                componentDidMount: function componentDidMount() {\n                    this.overlayElement = ReactDOM.findDOMNode(this).parentNode;\n                    this.setOverlayClass(true);\n                    utils.addEventListener(this.overlayElement, 'click', this.close);\n\n                    var dialogElement = this.overlayElement.children[0];\n                    var dialogBodyElement = dialogElement.children[0].children[1];\n\n                    var screenWidth = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n                    var screenHeight = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n                    var maxHeight = 2 * screenHeight / 3;\n                    maxHeight = maxHeight < 301 ? 301 : maxHeight;\n                    var dWidth = dialogElement.offsetWidth + (dialogElement.offsetHeight > maxHeight ? 11 : 0);\n                    var dHeight = dialogElement.offsetHeight > maxHeight ? maxHeight : dialogElement.offsetHeight;\n\n                    dialogElement.style.top = (screenHeight > dHeight ? (screenHeight - dHeight) / 2 : 0) + 'px';\n                    dialogElement.style.left = (screenWidth > dWidth ? (screenWidth - dWidth) / 2 : 0) + 'px';\n                    dialogElement.style.height = dHeight + 'px';\n                    dialogBodyElement.style.width = dWidth + 'px';\n                    dialogBodyElement.style.height = dHeight - 45 + 'px';\n                },\n                close: function close(e) {\n                    var target = e.target || e.srcElement;\n                    if (target == this.overlayElement || target.className === 'button-close') {\n                        utils.removeEventListener(this.overlayElement, 'click', this.close);\n                        React.unmountComponentAtNode(this.overlayElement);\n                        this.setOverlayClass(false);\n                    }\n                },\n                render: function render() {\n                    if (this.props.comp) {\n                        var comp = React.createElement(this.props.comp.type, this.props.comp.props);\n                        var classes = this.props.theme.getDialogClasses();\n\n                        return React.createElement(\n                            'div', {\n                                className: classes.dialog,\n                                style: this.props.style || {}\n                            },\n                            React.createElement(\n                                'div', {\n                                    className: classes.content\n                                },\n                                React.createElement(\n                                    'div', {\n                                        className: classes.header\n                                    },\n                                    React.createElement('div', {\n                                        className: 'button-close',\n                                        onClick: this.close\n                                    }),\n                                    React.createElement(\n                                        'div', {\n                                            className: classes.title\n                                        },\n                                        this.props.title\n                                    )\n                                ),\n                                React.createElement(\n                                    'div', {\n                                        className: classes.body\n                                    },\n                                    comp\n                                )\n                            )\n                        );\n                    }\n                }\n            });\n\n            module.exports.Toolbar = react.createClass({\n                _toInit: [],\n                componentDidMount: function componentDidMount() {\n                    for (var i = 0; i < this._toInit.length; i++) {\n                        var btn = this._toInit[i];\n                        btn.init(this.props.pivotTableComp, this.refs[btn.ref]);\n                    }\n                },\n                componentDidUpdate: function componentDidUpdate() {\n                    for (var i = 0; i < this._toInit.length; i++) {\n                        var btn = this._toInit[i];\n                        btn.init(this.props.pivotTableComp, this.refs[btn.ref]);\n                    }\n                },\n                createCallback: function createCallback(action) {\n                    if (action != null) {\n                        var pgridComponent = this.props.pivotTableComp;\n                        return function(e) {\n                            action(pgridComponent, e.target || e.srcElement);\n                        };\n                    }\n                    return null;\n                },\n                render: function render() {\n\n                    var config = this.props.pivotTableComp.pgridwidget.pgrid.config;\n\n                    if (config.toolbar && config.toolbar.visible) {\n\n                        var configButtons = config.toolbar.buttons ? defaultToolbarConfig.buttons.concat(config.toolbar.buttons) : defaultToolbarConfig.buttons;\n\n                        var buttons = [];\n                        for (var i = 0; i < configButtons.length; i++) {\n                            var btnConfig = configButtons[i];\n                            var refName = 'btn' + i;\n\n                            if (btnConfig.type == 'separator') {\n                                buttons.push(React.createElement('div', {\n                                    key: i,\n                                    className: 'orb-tlbr-sep'\n                                }));\n                            } else if (btnConfig.type == 'label') {\n                                buttons.push(React.createElement(\n                                    'div', {\n                                        key: i,\n                                        className: 'orb-tlbr-lbl'\n                                    },\n                                    btnConfig.text\n                                ));\n                            } else {\n                                buttons.push(React.createElement('div', {\n                                    key: i,\n                                    className: 'orb-tlbr-btn ' + btnConfig.cssClass,\n                                    title: btnConfig.tooltip,\n                                    ref: refName,\n                                    onClick: this.createCallback(btnConfig.action)\n                                }));\n                            }\n                            if (btnConfig.init) {\n                                this._toInit.push({\n                                    ref: refName,\n                                    init: btnConfig.init\n                                });\n                            }\n                        }\n\n                        return React.createElement(\n                            'div',\n                            null,\n                            buttons\n                        );\n                    }\n\n                    return React.createElement('div', null);\n                }\n            });\n\n            var excelExport = _dereq_('../orb.export.excel');\n\n            var defaultToolbarConfig = {\n                exportToExcel: function exportToExcel(pgridComponent, button) {\n                    var a = document.createElement('a');\n                    a.download = \"orbpivotgrid.xls\";\n                    a.href = excelExport(pgridComponent.props.pgridwidget);\n                    document.body.appendChild(a);\n                    a.click();\n                    document.body.removeChild(a);\n                },\n                expandAllRows: function expandAllRows(pgridComponent, button) {\n                    pgridComponent.toggleFieldExpansion(axe.Type.ROWS, null, true);\n                },\n                collapseAllRows: function collapseAllRows(pgridComponent, button) {\n                    pgridComponent.toggleFieldExpansion(axe.Type.ROWS, null, false);\n                },\n                expandAllColumns: function expandAllColumns(pgridComponent, button) {\n                    pgridComponent.toggleFieldExpansion(axe.Type.COLUMNS, null, true);\n                },\n                collapseAllColumns: function collapseAllColumns(pgridComponent, button) {\n                    pgridComponent.toggleFieldExpansion(axe.Type.COLUMNS, null, false);\n                },\n                updateSubtotalsButton: function updateSubtotalsButton(axetype, pgridComponent, button) {\n                    var subTotalsState = pgridComponent.pgridwidget.areSubtotalsVisible(axetype);\n                    button.style.display = subTotalsState === null ? 'none' : '';\n\n                    var classToAdd = '';\n                    var classToRemove = '';\n                    if (subTotalsState) {\n                        classToAdd = 'subtotals-visible';\n                        classToRemove = 'subtotals-hidden';\n                    } else {\n                        classToAdd = 'subtotals-hidden';\n                        classToRemove = 'subtotals-visible';\n                    }\n\n                    domUtils.removeClass(button, classToRemove);\n                    domUtils.addClass(button, classToAdd);\n                },\n                initSubtotals: function initSubtotals(axetype) {\n                    var self = this;\n                    return function(pgridComponent, button) {\n                        self.updateSubtotalsButton(axetype, pgridComponent, button);\n                    };\n                },\n                toggleSubtotals: function toggleSubtotals(axetype) {\n                    var self = this;\n                    return function(pgridComponent, button) {\n                        pgridComponent.toggleSubtotals(axetype);\n                        self.updateSubtotalsButton(axetype, pgridComponent, button);\n                    };\n                },\n                updateGrandtotalButton: function updateGrandtotalButton(axetype, pgridComponent, button) {\n                    var subTotalsState = pgridComponent.pgridwidget.isGrandtotalVisible(axetype);\n                    button.style.display = subTotalsState === null ? 'none' : '';\n\n                    var classToAdd = '';\n                    var classToRemove = '';\n                    if (subTotalsState) {\n                        classToAdd = 'grndtotal-visible';\n                        classToRemove = 'grndtotal-hidden';\n                    } else {\n                        classToAdd = 'grndtotal-hidden';\n                        classToRemove = 'grndtotal-visible';\n                    }\n\n                    domUtils.removeClass(button, classToRemove);\n                    domUtils.addClass(button, classToAdd);\n                },\n                initGrandtotal: function initGrandtotal(axetype) {\n                    var self = this;\n                    return function(pgridComponent, button) {\n                        self.updateGrandtotalButton(axetype, pgridComponent, button);\n                    };\n                },\n                toggleGrandtotal: function toggleGrandtotal(axetype) {\n                    var self = this;\n                    return function(pgridComponent, button) {\n                        pgridComponent.toggleGrandtotal(axetype);\n                        self.updateGrandtotalButton(axetype, pgridComponent, button);\n                    };\n                }\n            };\n\n            defaultToolbarConfig.buttons = [{\n                type: 'label',\n                text: 'Rows:'\n            }, {\n                type: 'button',\n                tooltip: 'Expand all rows',\n                cssClass: 'expand-all',\n                action: defaultToolbarConfig.expandAllRows\n            }, {\n                type: 'button',\n                tooltip: 'Collapse all rows',\n                cssClass: 'collapse-all',\n                action: defaultToolbarConfig.collapseAllRows\n            }, {\n                type: 'button',\n                tooltip: 'Toggle rows sub totals',\n                init: defaultToolbarConfig.initSubtotals(axe.Type.ROWS),\n                action: defaultToolbarConfig.toggleSubtotals(axe.Type.ROWS)\n            }, {\n                type: 'button',\n                tooltip: 'Toggle rows grand total',\n                init: defaultToolbarConfig.initGrandtotal(axe.Type.ROWS),\n                action: defaultToolbarConfig.toggleGrandtotal(axe.Type.ROWS)\n            }, {\n                type: 'separator'\n            }, {\n                type: 'label',\n                text: 'Columns:'\n            }, {\n                type: 'button',\n                tooltip: 'Expand all columns',\n                cssClass: 'expand-all',\n                action: defaultToolbarConfig.expandAllColumns\n            }, {\n                type: 'button',\n                tooltip: 'Collapse all columns',\n                cssClass: 'collapse-all',\n                action: defaultToolbarConfig.collapseAllColumns\n            }, {\n                type: 'button',\n                tooltip: 'Toggle columns sub totals',\n                init: defaultToolbarConfig.initSubtotals(axe.Type.COLUMNS),\n                action: defaultToolbarConfig.toggleSubtotals(axe.Type.COLUMNS)\n            }, {\n                type: 'button',\n                tooltip: 'Toggle columns grand total',\n                init: defaultToolbarConfig.initGrandtotal(axe.Type.COLUMNS),\n                action: defaultToolbarConfig.toggleGrandtotal(axe.Type.COLUMNS)\n            }, {\n                type: 'separator'\n            }, {\n                type: 'label',\n                text: 'Export:'\n            }, {\n                type: 'button',\n                tooltip: 'Export to Excel',\n                cssClass: 'export-xls',\n                action: defaultToolbarConfig.exportToExcel\n            }];\n\n            var SizingManager = module.exports.SizingManager = {\n                synchronizeWidths: function synchronizeWidths(pivotComp) {\n                    if (pivotComp.pgridwidget.pgrid.config.chartMode.enabled) {\n                        return SizingManager.synchronizePivotChartWidths(pivotComp);\n                    } else {\n                        SizingManager.synchronizePivotTableWidths(pivotComp);\n                    }\n                },\n                synchronizePivotChartWidths: function synchronizePivotChartWidths(pivotComp) {\n                    var pivotWrapperTable = pivotComp.refs.pivotWrapperTable,\n                        pivot = new ComponentSizeInfo(pivotComp.refs.pivot),\n                        topBtns = new ComponentSizeInfo(pivotComp.refs.upperButtons),\n                        cBtns = new ComponentSizeInfo(pivotComp.refs.colButtons),\n                        rBtnsTbl = new ComponentSizeInfo(pivotComp.refs.rowButtons),\n                        chart = new ComponentSizeInfo(pivotComp.refs.chart),\n                        rBtnsWidth = Math.max(rBtnsTbl.w, 67),\n                        chartWidth = pivot.w - rBtnsWidth,\n                        pivotHeight = pivotComp.pgridwidget.pgrid.config.height,\n                        chartHeight = !pivotHeight ? null : pivotHeight - (topBtns.h + cBtns.h);\n\n                    // set pivotWrapperTable columns width to fixed value\n                    domUtils.updateTableColGroup(pivotWrapperTable, [rBtnsWidth, chartWidth]);\n\n                    return {\n                        width: chartWidth,\n                        height: chartHeight\n                    };\n                },\n                synchronizePivotTableWidths: function synchronizePivotTableWidths(pivotComp) {\n\n                    var pivotWrapperTable = pivotComp.refs.pivotWrapperTable,\n                        pivot = new ComponentSizeInfo(pivotComp.refs.pivot),\n                        toolbar = new ComponentSizeInfo(pivotComp.refs.toolbar),\n                        cHeadersTbl = new ComponentSizeInfo(pivotComp.refs.colHeaders, true, 'table'),\n                        rHeadersTbl = new ComponentSizeInfo(pivotComp.refs.rowHeaders, true, 'table'),\n                        dataCellsTbl = new ComponentSizeInfo(pivotComp.refs.dataCells, true, 'table'),\n                        topBtns = new ComponentSizeInfo(pivotComp.refs.upperButtons),\n                        cBtns = new ComponentSizeInfo(pivotComp.refs.colButtons),\n                        rBtnsTbl = new ComponentSizeInfo(pivotComp.refs.rowButtons, true),\n                        hScroll = new ComponentSizeInfo(pivotComp.refs.horizontalScrollBar),\n                        vScroll = new ComponentSizeInfo(pivotComp.refs.verticalScrollBar),\n                        dataCellsWidths = dataCellsTbl.getLargestWidths(cHeadersTbl),\n                        rHeadersWidth = Math.max(rHeadersTbl.w, rBtnsTbl.w, 67),\n                        dataCellsContainerWidth = Math.min(dataCellsWidths.total + 1, pivot.w - rHeadersWidth - vScroll.w),\n                        pivotHeight = pivotComp.pgridwidget.pgrid.config.height,\n                        dataCellsRemHeight = !pivotHeight ? null : pivotHeight - (toolbar ? toolbar.h + 17 : 0) - (topBtns.h + cBtns.h + cHeadersTbl.h + hScroll.h),\n                        dataCellsTableHeight = !dataCellsRemHeight ? null : Math.ceil(Math.min(dataCellsRemHeight, dataCellsTbl.h));\n\n                    // get rowHeaders table width to match with rowButtons table width\n                    rHeadersTbl.addToWidth(rHeadersWidth - rHeadersTbl.w);\n\n                    // Set dataCellsTable cells widths according to the computed dataCellsWidths\n                    domUtils.updateTableColGroup(dataCellsTbl.node, dataCellsWidths.max);\n\n                    // Set colHeadersTable cells widths according to the computed dataCellsWidths\n                    domUtils.updateTableColGroup(cHeadersTbl.node, dataCellsWidths.max);\n\n                    // Set rowHeadersTable cells widths\n                    domUtils.updateTableColGroup(rHeadersTbl.node, rHeadersTbl.colWidths);\n\n                    dataCellsTbl.setStyle('width', dataCellsWidths.total);\n                    cHeadersTbl.setStyle('width', dataCellsWidths.total);\n                    rHeadersTbl.setStyle('width', rHeadersWidth);\n\n                    // Adjust data cells container and column headers container width\n                    dataCellsTbl.setParentStyle('width', dataCellsContainerWidth);\n                    cHeadersTbl.setParentStyle('width', dataCellsContainerWidth);\n\n                    if (dataCellsTableHeight) {\n                        // Adjust data cells container and row headers container height\n                        dataCellsTbl.setParentStyle('height', dataCellsTableHeight);\n                        rHeadersTbl.setParentStyle('height', dataCellsTableHeight);\n                    }\n\n                    // set pivotWrapperTable columns width to fixed value\n                    domUtils.updateTableColGroup(pivotWrapperTable, [rHeadersWidth, dataCellsContainerWidth, vScroll.w, Math.max(pivot.w - (rHeadersWidth + dataCellsContainerWidth + vScroll.w), 0)]);\n\n                    pivotComp.refs.horizontalScrollBar.refresh();\n                    pivotComp.refs.verticalScrollBar.refresh();\n                }\n            };\n\n            function ComponentSizeInfo(component, isWrapper, childType) {\n                var self = this,\n                    node = ReactDOM.findDOMNode(component),\n                    size;\n\n                this.node = isWrapper ? node.children[0] : node;\n\n                size = domUtils.getSize(this.node);\n                this.w = size.width;\n                this.h = size.height;\n\n                this.setStyle = function(styleProp, value) {\n                    self.node.style[styleProp] = value + 'px';\n                };\n\n                this.setParentStyle = function(styleProp, value) {\n                    self.node.parentNode.style[styleProp] = value + 'px';\n                };\n\n                this.getLargestWidths = function(otherCompInfo) {\n                    var result = {\n                        max: [],\n                        total: 0\n                    };\n\n                    // get the array of max widths between dataCellsTable and colHeadersTable\n                    for (var i = 0; i < self.colWidths.length; i++) {\n                        result.max.push(Math.max(self.colWidths[i], otherCompInfo.colWidths[i]));\n                        result.total += result.max[i];\n                    }\n\n                    return result;\n                };\n\n                this.addToWidth = function(value) {\n                    if (value > 0) {\n                        self.w += value;\n                        self.colWidths[self.colWidths.length - 1] += value;\n                    }\n                };\n\n                if (childType === 'table') {\n                    // get array of column widths\n                    getAllColumnsWidth(this);\n                }\n            }\n\n            function getAllColumnsWidth(tblObject) {\n                if (tblObject && tblObject.node) {\n\n                    var tbl = tblObject.node;\n                    var colWidths = [];\n\n                    for (var rowIndex = 0; rowIndex < tbl.rows.length; rowIndex++) {\n                        // current row\n                        var currRow = tbl.rows[rowIndex];\n                        // reset colWidths index\n                        var arrayIndex = 0;\n                        var currWidth = null;\n\n                        // get the width of each cell within current row\n                        for (var cellIndex = 0; cellIndex < currRow.cells.length; cellIndex++) {\n                            // current cell\n                            var currCell = currRow.cells[cellIndex];\n\n                            if (currCell.__orb._visible) {\n                                // cell width\n                                //var cellwidth = Math.ceil(domUtils.getSize(currCell.children[0]).width/currCell.colSpan);\n                                var cellwidth = Math.ceil(currCell.__orb._textWidth / currCell.__orb._colSpan + currCell.__orb._paddingLeft + currCell.__orb._paddingRight + currCell.__orb._borderLeftWidth + currCell.__orb._borderRightWidth);\n                                // whether current cell spans vertically to the last row\n                                var rowsSpan = currCell.__orb._rowSpan > 1 && currCell.__orb._rowSpan >= tbl.rows.length - rowIndex;\n\n                                // if current cell spans over more than one column, add its width (its) 'colSpan' number of times\n                                for (var cspan = 0; cspan < currCell.__orb._colSpan; cspan++) {\n                                    // If cell span over more than 1 row: insert its width into colWidths at arrayIndex\n                                    // Else: either expand colWidths if necessary or replace the width if its smaller than current cell width\n\n                                    currWidth = colWidths[arrayIndex];\n                                    // skip inhibited widths (width that belongs to an upper cell than spans vertically to current row)\n                                    while (currWidth && currWidth.inhibit > 0) {\n                                        currWidth.inhibit--;\n                                        arrayIndex++;\n                                        currWidth = colWidths[arrayIndex];\n                                    }\n\n                                    if (colWidths.length - 1 < arrayIndex) {\n                                        colWidths.push({\n                                            width: cellwidth\n                                        });\n                                    } else if (cellwidth > colWidths[arrayIndex].width) {\n                                        colWidths[arrayIndex].width = cellwidth;\n                                    }\n\n                                    colWidths[arrayIndex].inhibit = currCell.__orb._rowSpan - 1;\n\n                                    // increment colWidths index\n                                    arrayIndex++;\n                                }\n                            }\n                        }\n\n                        // decrement inhibited state of all widths unsed in colWidths (not reached by current row cells)\n                        currWidth = colWidths[arrayIndex];\n                        while (currWidth) {\n                            if (currWidth.inhibit > 0) {\n                                currWidth.inhibit--;\n                            }\n                            arrayIndex++;\n                            currWidth = colWidths[arrayIndex];\n                        }\n                    }\n\n                    // set colWidths to the tblObject\n                    tblObject.w = 0;\n                    tblObject.colWidths = colWidths.map(function(item, index) {\n                        tblObject.w += item.width;\n                        return item.width;\n                    });\n                }\n            }\n\n            function setTableWidths(tblObject, colWidths) {\n                if (tblObject && tblObject.node) {\n\n                    // reset table width\n                    (tblObject.size = tblObject.size || {}).width = 0;\n\n                    var tbl = tblObject.node;\n\n                    // for each row, set its cells width\n                    for (var rowIndex = 0; rowIndex < tbl.rows.length; rowIndex++) {\n\n                        // current row\n                        var currRow = tbl.rows[rowIndex];\n                        // index in colWidths\n                        var arrayIndex = 0;\n                        var currWidth = null;\n\n                        // set width of each cell\n                        for (var cellIndex = 0; cellIndex < currRow.cells.length; cellIndex++) {\n\n                            // current cell\n                            var currCell = currRow.cells[cellIndex];\n                            if (currCell.__orb._visible) {\n                                // cell width\n                                var newCellWidth = 0;\n                                // whether current cell spans vertically more than 1 row\n                                var rowsSpan = currCell.__orb._rowSpan > 1 && rowIndex < tbl.rows.length - 1;\n\n                                // current cell width is the sum of (its) \"colspan\" items in colWidths starting at 'arrayIndex'\n                                // 'arrayIndex' should be incremented by an amount equal to current cell 'colspan' but should also skip 'inhibited' cells\n                                for (var cspan = 0; cspan < currCell.__orb._colSpan; cspan++) {\n                                    currWidth = colWidths[arrayIndex];\n                                    // skip inhibited widths (width that belongs to an upper cell than spans vertically to current row)\n                                    while (currWidth && currWidth.inhibit > 0) {\n                                        currWidth.inhibit--;\n                                        arrayIndex++;\n                                        currWidth = colWidths[arrayIndex];\n                                    }\n\n                                    if (currWidth) {\n                                        // add width of cells participating in the span\n                                        newCellWidth += currWidth.width;\n                                        // if current cell spans vertically more than 1 row, mark its width as inhibited for all cells participating in this span\n                                        if (rowsSpan) {\n                                            currWidth.inhibit = currCell.__orb._rowSpan - 1;\n                                        }\n\n                                        // advance colWidths index\n                                        arrayIndex++;\n                                    }\n                                }\n\n                                currCell.children[0].style.width = newCellWidth + 'px';\n\n                                // set table width (only in first iteration)\n                                if (rowIndex === 0) {\n                                    var outerCellWidth = 0;\n                                    if (currCell.__orb) {\n                                        outerCellWidth = currCell.__orb._colSpan * Math.ceil(currCell.__orb._paddingLeft + currCell.__orb._paddingRight + currCell.__orb._borderLeftWidth + currCell.__orb._borderRightWidth);\n                                    }\n                                    tblObject.w += newCellWidth + outerCellWidth;\n                                }\n                            }\n                        }\n\n                        // decrement inhibited state of all widths unsed in colWidths (not reached by current row cells)\n                        currWidth = colWidths[arrayIndex];\n                        while (currWidth) {\n                            if (currWidth.inhibit > 0) {\n                                currWidth.inhibit--;\n                            }\n                            arrayIndex++;\n                            currWidth = colWidths[arrayIndex];\n                        }\n                    }\n                }\n            }\n\n        }, {\n            \"../orb.axe\": 3,\n            \"../orb.export.excel\": 6,\n            \"../orb.filtering\": 7,\n            \"../orb.ui.header\": 14,\n            \"../orb.utils\": 18,\n            \"../orb.utils.dom\": 17,\n            \"react\": undefined\n        }]\n    }, {}, [1])(1)\n});\n"],"sourceRoot":"/source/"}